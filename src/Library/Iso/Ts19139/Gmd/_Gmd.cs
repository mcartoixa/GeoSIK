////////////////////////////////////////////////////////////////////////////////
//
// This file is part of GeoSIK.
// Copyright (C) 2012 Isogeo
//
// GeoSIK is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 2 of the License, or
// (at your option) any later version.
//
// GeoSIK is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with GeoSIK. If not, see <http://www.gnu.org/licenses/>.
//
////////////////////////////////////////////////////////////////////////////////

#pragma warning disable 108, 109, 1591, 3002, 3003, 3009
namespace GeoSik.Iso.Ts19139.Gmd
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.IO;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    using System.Xml.Linq;
    using Xml.Schema.Linq;
    using GeoSik.Iso.Ts19139.Gco;


    /// <summary>
    /// <para>
    /// Time period covered by the content of the dataset
    /// </para>
    /// <para>
    /// Regular expression: (extent)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EX_TemporalExtent_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_TemporalExtent_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator EX_TemporalExtent_Type(XElement xe) { return XTypedServices.ToXTypedElement<EX_TemporalExtent_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static EX_TemporalExtent_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("extent", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Time period covered by the content of the dataset
        /// </para>
        /// <para>
        /// Regular expression: (extent)
        /// </para>
        /// </summary>
        public EX_TemporalExtent_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (extent)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gts.TM_Primitive_PropertyType extent
        {
            get
            {
                XElement x=this.GetElement(XName.Get("extent", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gts.TM_Primitive_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("extent", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_TemporalExtent_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<EX_TemporalExtent_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("extent", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gts.TM_Primitive_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName EX_TemporalExtent_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("EX_TemporalExtent_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (EX_TemporalExtent)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EX_TemporalExtent_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_TemporalExtent_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator EX_TemporalExtent_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<EX_TemporalExtent_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static EX_TemporalExtent_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("EX_TemporalExtent", "http://www.isotc211.org/2005/gmd"), XName.Get("EX_SpatialTemporalExtent", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (EX_TemporalExtent)?
        /// </para>
        /// </summary>
        public EX_TemporalExtent_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: EX_TemporalExtent, EX_SpatialTemporalExtent
        /// </para>
        /// <para>
        /// Regular expression: (EX_TemporalExtent)?
        /// </para>
        /// </summary>
        public EX_TemporalExtent EX_TemporalExtent
        {
            get
            {
                XTypedElement x=XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("EX_TemporalExtent", "http://www.isotc211.org/2005/gmd"), XName.Get("EX_SpatialTemporalExtent", "http://www.isotc211.org/2005/gmd"));
                return ((EX_TemporalExtent)(x));
            }
            set
            {
                this.SetElement(XName.Get("EX_TemporalExtent", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_TemporalExtent_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<EX_TemporalExtent_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("EX_TemporalExtent", "http://www.isotc211.org/2005/gmd"), typeof(EX_TemporalExtent));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName EX_TemporalExtent_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("EX_TemporalExtent_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Vertical domain of dataset
    /// </para>
    /// <para>
    /// Regular expression: (minimumValue, maximumValue, verticalCRS)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EX_VerticalExtent_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_VerticalExtent_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator EX_VerticalExtent_Type(XElement xe) { return XTypedServices.ToXTypedElement<EX_VerticalExtent_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static EX_VerticalExtent_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("minimumValue", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("maximumValue", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("verticalCRS", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Vertical domain of dataset
        /// </para>
        /// <para>
        /// Regular expression: (minimumValue, maximumValue, verticalCRS)
        /// </para>
        /// </summary>
        public EX_VerticalExtent_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (minimumValue, maximumValue, verticalCRS)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType minimumValue
        {
            get
            {
                XElement x=this.GetElement(XName.Get("minimumValue", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Real_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("minimumValue", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (minimumValue, maximumValue, verticalCRS)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType maximumValue
        {
            get
            {
                XElement x=this.GetElement(XName.Get("maximumValue", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Real_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("maximumValue", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (minimumValue, maximumValue, verticalCRS)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gsr.SC_CRS_PropertyType verticalCRS
        {
            get
            {
                XElement x=this.GetElement(XName.Get("verticalCRS", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gsr.SC_CRS_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("verticalCRS", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_VerticalExtent_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<EX_VerticalExtent_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("minimumValue", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Real_PropertyType));
            localElementDictionary.Add(XName.Get("maximumValue", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Real_PropertyType));
            localElementDictionary.Add(XName.Get("verticalCRS", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gsr.SC_CRS_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName EX_VerticalExtent_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("EX_VerticalExtent_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (EX_VerticalExtent)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EX_VerticalExtent_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_VerticalExtent_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator EX_VerticalExtent_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<EX_VerticalExtent_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static EX_VerticalExtent_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("EX_VerticalExtent", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (EX_VerticalExtent)?
        /// </para>
        /// </summary>
        public EX_VerticalExtent_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (EX_VerticalExtent)?
        /// </para>
        /// </summary>
        public EX_VerticalExtent EX_VerticalExtent
        {
            get
            {
                XElement x=this.GetElement(XName.Get("EX_VerticalExtent", "http://www.isotc211.org/2005/gmd"));
                return ((EX_VerticalExtent)(x));
            }
            set
            {
                this.SetElement(XName.Get("EX_VerticalExtent", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_VerticalExtent_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<EX_VerticalExtent_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("EX_VerticalExtent", "http://www.isotc211.org/2005/gmd"), typeof(EX_VerticalExtent));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName EX_VerticalExtent_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("EX_VerticalExtent_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Boundary enclosing the dataset expressed as the closed set of (x,y) coordinates of the polygon (last point replicates first point)
    /// </para>
    /// <para>
    /// Regular expression: (extentTypeCode?, polygon+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EX_BoundingPolygon_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_BoundingPolygon_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractEX_GeographicExtent_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gss.GM_Object_PropertyType> polygonField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator EX_BoundingPolygon_Type(XElement xe) { return XTypedServices.ToXTypedElement<EX_BoundingPolygon_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static EX_BoundingPolygon_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("extentTypeCode", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("polygon", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Boundary enclosing the dataset expressed as the closed set of (x,y) coordinates of the polygon (last point replicates first point)
        /// </para>
        /// <para>
        /// Regular expression: (extentTypeCode?, polygon+)
        /// </para>
        /// </summary>
        public EX_BoundingPolygon_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (extentTypeCode?, polygon+)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gss.GM_Object_PropertyType> polygon
        {
            get
            {
                if ((this.polygonField==null))
                {
                    this.polygonField=new XTypedList<GeoSik.Iso.Ts19139.Gss.GM_Object_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("polygon", "http://www.isotc211.org/2005/gmd"));
                }
                return this.polygonField;
            }
            set
            {
                if ((value==null))
                {
                    this.polygonField=null;
                } else
                {
                    if ((this.polygonField==null))
                    {
                        this.polygonField=XTypedList<GeoSik.Iso.Ts19139.Gss.GM_Object_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("polygon", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gss.GM_Object_PropertyType>(this.polygonField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_BoundingPolygon_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<EX_BoundingPolygon_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("extentTypeCode", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType));
            localElementDictionary.Add(XName.Get("polygon", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gss.GM_Object_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName EX_BoundingPolygon_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("EX_BoundingPolygon_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (EX_BoundingPolygon)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EX_BoundingPolygon_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_BoundingPolygon_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator EX_BoundingPolygon_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<EX_BoundingPolygon_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static EX_BoundingPolygon_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("EX_BoundingPolygon", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (EX_BoundingPolygon)?
        /// </para>
        /// </summary>
        public EX_BoundingPolygon_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (EX_BoundingPolygon)?
        /// </para>
        /// </summary>
        public EX_BoundingPolygon EX_BoundingPolygon
        {
            get
            {
                XElement x=this.GetElement(XName.Get("EX_BoundingPolygon", "http://www.isotc211.org/2005/gmd"));
                return ((EX_BoundingPolygon)(x));
            }
            set
            {
                this.SetElement(XName.Get("EX_BoundingPolygon", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_BoundingPolygon_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<EX_BoundingPolygon_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("EX_BoundingPolygon", "http://www.isotc211.org/2005/gmd"), typeof(EX_BoundingPolygon));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName EX_BoundingPolygon_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("EX_BoundingPolygon_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Information about spatial, vertical, and temporal extent
    /// </para>
    /// <para>
    /// Regular expression: (description?, geographicElement*, temporalElement*, verticalElement*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EX_Extent_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_Extent_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<EX_GeographicExtent_PropertyType> geographicElementField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<EX_TemporalExtent_PropertyType> temporalElementField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<EX_VerticalExtent_PropertyType> verticalElementField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator EX_Extent_Type(XElement xe) { return XTypedServices.ToXTypedElement<EX_Extent_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static EX_Extent_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("description", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("geographicElement", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("temporalElement", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("verticalElement", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Information about spatial, vertical, and temporal extent
        /// </para>
        /// <para>
        /// Regular expression: (description?, geographicElement*, temporalElement*, verticalElement*)
        /// </para>
        /// </summary>
        public EX_Extent_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (description?, geographicElement*, temporalElement*, verticalElement*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType description
        {
            get
            {
                XElement x=this.GetElement(XName.Get("description", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("description", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (description?, geographicElement*, temporalElement*, verticalElement*)
        /// </para>
        /// </summary>
        public IList<EX_GeographicExtent_PropertyType> geographicElement
        {
            get
            {
                if ((this.geographicElementField==null))
                {
                    this.geographicElementField=new XTypedList<EX_GeographicExtent_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("geographicElement", "http://www.isotc211.org/2005/gmd"));
                }
                return this.geographicElementField;
            }
            set
            {
                if ((value==null))
                {
                    this.geographicElementField=null;
                } else
                {
                    if ((this.geographicElementField==null))
                    {
                        this.geographicElementField=XTypedList<EX_GeographicExtent_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("geographicElement", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<EX_GeographicExtent_PropertyType>(this.geographicElementField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (description?, geographicElement*, temporalElement*, verticalElement*)
        /// </para>
        /// </summary>
        public IList<EX_TemporalExtent_PropertyType> temporalElement
        {
            get
            {
                if ((this.temporalElementField==null))
                {
                    this.temporalElementField=new XTypedList<EX_TemporalExtent_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("temporalElement", "http://www.isotc211.org/2005/gmd"));
                }
                return this.temporalElementField;
            }
            set
            {
                if ((value==null))
                {
                    this.temporalElementField=null;
                } else
                {
                    if ((this.temporalElementField==null))
                    {
                        this.temporalElementField=XTypedList<EX_TemporalExtent_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("temporalElement", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<EX_TemporalExtent_PropertyType>(this.temporalElementField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (description?, geographicElement*, temporalElement*, verticalElement*)
        /// </para>
        /// </summary>
        public IList<EX_VerticalExtent_PropertyType> verticalElement
        {
            get
            {
                if ((this.verticalElementField==null))
                {
                    this.verticalElementField=new XTypedList<EX_VerticalExtent_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("verticalElement", "http://www.isotc211.org/2005/gmd"));
                }
                return this.verticalElementField;
            }
            set
            {
                if ((value==null))
                {
                    this.verticalElementField=null;
                } else
                {
                    if ((this.verticalElementField==null))
                    {
                        this.verticalElementField=XTypedList<EX_VerticalExtent_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("verticalElement", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<EX_VerticalExtent_PropertyType>(this.verticalElementField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_Extent_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<EX_Extent_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("description", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("geographicElement", "http://www.isotc211.org/2005/gmd"), typeof(EX_GeographicExtent_PropertyType));
            localElementDictionary.Add(XName.Get("temporalElement", "http://www.isotc211.org/2005/gmd"), typeof(EX_TemporalExtent_PropertyType));
            localElementDictionary.Add(XName.Get("verticalElement", "http://www.isotc211.org/2005/gmd"), typeof(EX_VerticalExtent_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName EX_Extent_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("EX_Extent_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (EX_Extent)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EX_Extent_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_Extent_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator EX_Extent_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<EX_Extent_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static EX_Extent_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("EX_Extent", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (EX_Extent)?
        /// </para>
        /// </summary>
        public EX_Extent_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (EX_Extent)?
        /// </para>
        /// </summary>
        public EX_Extent EX_Extent
        {
            get
            {
                XElement x=this.GetElement(XName.Get("EX_Extent", "http://www.isotc211.org/2005/gmd"));
                return ((EX_Extent)(x));
            }
            set
            {
                this.SetElement(XName.Get("EX_Extent", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_Extent_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<EX_Extent_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("EX_Extent", "http://www.isotc211.org/2005/gmd"), typeof(EX_Extent));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName EX_Extent_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("EX_Extent_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Geographic area of the dataset
    /// </para>
    /// <para>
    /// Regular expression: (extentTypeCode?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("AbstractEX_GeographicExtent_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractEX_GeographicExtent_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator AbstractEX_GeographicExtent_Type(XElement xe) { return (AbstractEX_GeographicExtent_Type)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static AbstractEX_GeographicExtent_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("extentTypeCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Geographic area of the dataset
        /// </para>
        /// <para>
        /// Regular expression: (extentTypeCode?)
        /// </para>
        /// </summary>
        public AbstractEX_GeographicExtent_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (extentTypeCode?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType extentTypeCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("extentTypeCode", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("extentTypeCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractEX_GeographicExtent_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("extentTypeCode", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName AbstractEX_GeographicExtent_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("AbstractEX_GeographicExtent_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (AbstractEX_GeographicExtent)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EX_GeographicExtent_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_GeographicExtent_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator EX_GeographicExtent_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<EX_GeographicExtent_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static EX_GeographicExtent_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("AbstractEX_GeographicExtent", "http://www.isotc211.org/2005/gmd"), XName.Get("EX_BoundingPolygon", "http://www.isotc211.org/2005/gmd"), XName.Get("EX_GeographicBoundingBox", "http://www.isotc211.org/2005/gmd"), XName.Get("EX_GeographicDescription", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (AbstractEX_GeographicExtent)?
        /// </para>
        /// </summary>
        public EX_GeographicExtent_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: AbstractEX_GeographicExtent, EX_BoundingPolygon, EX_GeographicBoundingBox, EX_GeographicDescription
        /// </para>
        /// <para>
        /// Regular expression: (AbstractEX_GeographicExtent)?
        /// </para>
        /// </summary>
        public AbstractEX_GeographicExtent AbstractEX_GeographicExtent
        {
            get
            {
                XTypedElement x=XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("AbstractEX_GeographicExtent", "http://www.isotc211.org/2005/gmd"), XName.Get("EX_BoundingPolygon", "http://www.isotc211.org/2005/gmd"), XName.Get("EX_GeographicBoundingBox", "http://www.isotc211.org/2005/gmd"), XName.Get("EX_GeographicDescription", "http://www.isotc211.org/2005/gmd"));
                return ((AbstractEX_GeographicExtent)(x));
            }
            set
            {
                this.SetElement(XName.Get("AbstractEX_GeographicExtent", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_GeographicExtent_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<EX_GeographicExtent_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("AbstractEX_GeographicExtent", "http://www.isotc211.org/2005/gmd"), typeof(AbstractEX_GeographicExtent));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName EX_GeographicExtent_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("EX_GeographicExtent_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Geographic area of the entire dataset referenced to WGS 84
    /// </para>
    /// <para>
    /// Regular expression: (extentTypeCode?, westBoundLongitude, eastBoundLongitude, southBoundLatitude, northBoundLatitude)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EX_GeographicBoundingBox_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_GeographicBoundingBox_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractEX_GeographicExtent_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator EX_GeographicBoundingBox_Type(XElement xe) { return XTypedServices.ToXTypedElement<EX_GeographicBoundingBox_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static EX_GeographicBoundingBox_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("extentTypeCode", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("westBoundLongitude", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("eastBoundLongitude", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("southBoundLatitude", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("northBoundLatitude", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Geographic area of the entire dataset referenced to WGS 84
        /// </para>
        /// <para>
        /// Regular expression: (extentTypeCode?, westBoundLongitude, eastBoundLongitude, southBoundLatitude, northBoundLatitude)
        /// </para>
        /// </summary>
        public EX_GeographicBoundingBox_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (extentTypeCode?, westBoundLongitude, eastBoundLongitude, southBoundLatitude, northBoundLatitude)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Decimal_PropertyType westBoundLongitude
        {
            get
            {
                XElement x=this.GetElement(XName.Get("westBoundLongitude", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Decimal_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("westBoundLongitude", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (extentTypeCode?, westBoundLongitude, eastBoundLongitude, southBoundLatitude, northBoundLatitude)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Decimal_PropertyType eastBoundLongitude
        {
            get
            {
                XElement x=this.GetElement(XName.Get("eastBoundLongitude", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Decimal_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("eastBoundLongitude", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (extentTypeCode?, westBoundLongitude, eastBoundLongitude, southBoundLatitude, northBoundLatitude)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Decimal_PropertyType southBoundLatitude
        {
            get
            {
                XElement x=this.GetElement(XName.Get("southBoundLatitude", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Decimal_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("southBoundLatitude", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (extentTypeCode?, westBoundLongitude, eastBoundLongitude, southBoundLatitude, northBoundLatitude)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Decimal_PropertyType northBoundLatitude
        {
            get
            {
                XElement x=this.GetElement(XName.Get("northBoundLatitude", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Decimal_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("northBoundLatitude", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_GeographicBoundingBox_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<EX_GeographicBoundingBox_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("extentTypeCode", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType));
            localElementDictionary.Add(XName.Get("westBoundLongitude", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Decimal_PropertyType));
            localElementDictionary.Add(XName.Get("eastBoundLongitude", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Decimal_PropertyType));
            localElementDictionary.Add(XName.Get("southBoundLatitude", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Decimal_PropertyType));
            localElementDictionary.Add(XName.Get("northBoundLatitude", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Decimal_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName EX_GeographicBoundingBox_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("EX_GeographicBoundingBox_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (EX_GeographicBoundingBox)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EX_GeographicBoundingBox_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_GeographicBoundingBox_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator EX_GeographicBoundingBox_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<EX_GeographicBoundingBox_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static EX_GeographicBoundingBox_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("EX_GeographicBoundingBox", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (EX_GeographicBoundingBox)?
        /// </para>
        /// </summary>
        public EX_GeographicBoundingBox_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (EX_GeographicBoundingBox)?
        /// </para>
        /// </summary>
        public EX_GeographicBoundingBox EX_GeographicBoundingBox
        {
            get
            {
                XElement x=this.GetElement(XName.Get("EX_GeographicBoundingBox", "http://www.isotc211.org/2005/gmd"));
                return ((EX_GeographicBoundingBox)(x));
            }
            set
            {
                this.SetElement(XName.Get("EX_GeographicBoundingBox", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_GeographicBoundingBox_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<EX_GeographicBoundingBox_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("EX_GeographicBoundingBox", "http://www.isotc211.org/2005/gmd"), typeof(EX_GeographicBoundingBox));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName EX_GeographicBoundingBox_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("EX_GeographicBoundingBox_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Extent with respect to date and time
    /// </para>
    /// <para>
    /// Regular expression: (extent, spatialExtent+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EX_SpatialTemporalExtent_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_SpatialTemporalExtent_Type: global::GeoSik.Iso.Ts19139.Gmd.EX_TemporalExtent_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<EX_GeographicExtent_PropertyType> spatialExtentField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator EX_SpatialTemporalExtent_Type(XElement xe) { return XTypedServices.ToXTypedElement<EX_SpatialTemporalExtent_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static EX_SpatialTemporalExtent_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("extent", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("spatialExtent", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Extent with respect to date and time
        /// </para>
        /// <para>
        /// Regular expression: (extent, spatialExtent+)
        /// </para>
        /// </summary>
        public EX_SpatialTemporalExtent_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (extent, spatialExtent+)
        /// </para>
        /// </summary>
        public IList<EX_GeographicExtent_PropertyType> spatialExtent
        {
            get
            {
                if ((this.spatialExtentField==null))
                {
                    this.spatialExtentField=new XTypedList<EX_GeographicExtent_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("spatialExtent", "http://www.isotc211.org/2005/gmd"));
                }
                return this.spatialExtentField;
            }
            set
            {
                if ((value==null))
                {
                    this.spatialExtentField=null;
                } else
                {
                    if ((this.spatialExtentField==null))
                    {
                        this.spatialExtentField=XTypedList<EX_GeographicExtent_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("spatialExtent", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<EX_GeographicExtent_PropertyType>(this.spatialExtentField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_SpatialTemporalExtent_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<EX_SpatialTemporalExtent_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("extent", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gts.TM_Primitive_PropertyType));
            localElementDictionary.Add(XName.Get("spatialExtent", "http://www.isotc211.org/2005/gmd"), typeof(EX_GeographicExtent_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName EX_SpatialTemporalExtent_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("EX_SpatialTemporalExtent_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (EX_SpatialTemporalExtent)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EX_SpatialTemporalExtent_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_SpatialTemporalExtent_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator EX_SpatialTemporalExtent_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<EX_SpatialTemporalExtent_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static EX_SpatialTemporalExtent_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("EX_SpatialTemporalExtent", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (EX_SpatialTemporalExtent)?
        /// </para>
        /// </summary>
        public EX_SpatialTemporalExtent_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (EX_SpatialTemporalExtent)?
        /// </para>
        /// </summary>
        public EX_SpatialTemporalExtent EX_SpatialTemporalExtent
        {
            get
            {
                XElement x=this.GetElement(XName.Get("EX_SpatialTemporalExtent", "http://www.isotc211.org/2005/gmd"));
                return ((EX_SpatialTemporalExtent)(x));
            }
            set
            {
                this.SetElement(XName.Get("EX_SpatialTemporalExtent", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_SpatialTemporalExtent_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<EX_SpatialTemporalExtent_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("EX_SpatialTemporalExtent", "http://www.isotc211.org/2005/gmd"), typeof(EX_SpatialTemporalExtent));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName EX_SpatialTemporalExtent_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("EX_SpatialTemporalExtent_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (extentTypeCode?, geographicIdentifier)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EX_GeographicDescription_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_GeographicDescription_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractEX_GeographicExtent_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator EX_GeographicDescription_Type(XElement xe) { return XTypedServices.ToXTypedElement<EX_GeographicDescription_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static EX_GeographicDescription_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("extentTypeCode", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("geographicIdentifier", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (extentTypeCode?, geographicIdentifier)
        /// </para>
        /// </summary>
        public EX_GeographicDescription_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (extentTypeCode?, geographicIdentifier)
        /// </para>
        /// </summary>
        public MD_Identifier_PropertyType geographicIdentifier
        {
            get
            {
                XElement x=this.GetElement(XName.Get("geographicIdentifier", "http://www.isotc211.org/2005/gmd"));
                return ((MD_Identifier_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("geographicIdentifier", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_GeographicDescription_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<EX_GeographicDescription_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("extentTypeCode", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType));
            localElementDictionary.Add(XName.Get("geographicIdentifier", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName EX_GeographicDescription_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("EX_GeographicDescription_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (EX_GeographicDescription)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EX_GeographicDescription_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_GeographicDescription_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator EX_GeographicDescription_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<EX_GeographicDescription_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static EX_GeographicDescription_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("EX_GeographicDescription", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (EX_GeographicDescription)?
        /// </para>
        /// </summary>
        public EX_GeographicDescription_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (EX_GeographicDescription)?
        /// </para>
        /// </summary>
        public EX_GeographicDescription EX_GeographicDescription
        {
            get
            {
                XElement x=this.GetElement(XName.Get("EX_GeographicDescription", "http://www.isotc211.org/2005/gmd"));
                return ((EX_GeographicDescription)(x));
            }
            set
            {
                this.SetElement(XName.Get("EX_GeographicDescription", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_GeographicDescription_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<EX_GeographicDescription_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("EX_GeographicDescription", "http://www.isotc211.org/2005/gmd"), typeof(EX_GeographicDescription));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName EX_GeographicDescription_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("EX_GeographicDescription_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (authority?, code, codeSpace?, version?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("RS_Identifier_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class RS_Identifier_Type: global::GeoSik.Iso.Ts19139.Gmd.MD_Identifier_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator RS_Identifier_Type(XElement xe) { return XTypedServices.ToXTypedElement<RS_Identifier_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static RS_Identifier_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("authority", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("code", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("codeSpace", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("version", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (authority?, code, codeSpace?, version?)
        /// </para>
        /// </summary>
        public RS_Identifier_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (authority?, code, codeSpace?, version?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType codeSpace
        {
            get
            {
                XElement x=this.GetElement(XName.Get("codeSpace", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("codeSpace", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (authority?, code, codeSpace?, version?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType version
        {
            get
            {
                XElement x=this.GetElement(XName.Get("version", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("version", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("RS_Identifier_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<RS_Identifier_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("authority", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("code", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("codeSpace", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("version", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName RS_Identifier_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("RS_Identifier_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (RS_Identifier)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("RS_Identifier_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class RS_Identifier_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator RS_Identifier_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<RS_Identifier_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static RS_Identifier_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("RS_Identifier", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (RS_Identifier)?
        /// </para>
        /// </summary>
        public RS_Identifier_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (RS_Identifier)?
        /// </para>
        /// </summary>
        public RS_Identifier RS_Identifier
        {
            get
            {
                XElement x=this.GetElement(XName.Get("RS_Identifier", "http://www.isotc211.org/2005/gmd"));
                return ((RS_Identifier)(x));
            }
            set
            {
                this.SetElement(XName.Get("RS_Identifier", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("RS_Identifier_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<RS_Identifier_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("RS_Identifier", "http://www.isotc211.org/2005/gmd"), typeof(RS_Identifier));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName RS_Identifier_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("RS_Identifier_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (referenceSystemIdentifier?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ReferenceSystem_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ReferenceSystem_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_ReferenceSystem_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_ReferenceSystem_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_ReferenceSystem_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("referenceSystemIdentifier", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (referenceSystemIdentifier?)
        /// </para>
        /// </summary>
        public MD_ReferenceSystem_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (referenceSystemIdentifier?)
        /// </para>
        /// </summary>
        public RS_Identifier_PropertyType referenceSystemIdentifier
        {
            get
            {
                XElement x=this.GetElement(XName.Get("referenceSystemIdentifier", "http://www.isotc211.org/2005/gmd"));
                return ((RS_Identifier_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("referenceSystemIdentifier", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ReferenceSystem_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_ReferenceSystem_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("referenceSystemIdentifier", "http://www.isotc211.org/2005/gmd"), typeof(RS_Identifier_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_ReferenceSystem_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_ReferenceSystem_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_ReferenceSystem)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ReferenceSystem_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ReferenceSystem_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_ReferenceSystem_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_ReferenceSystem_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_ReferenceSystem_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_ReferenceSystem", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_ReferenceSystem)?
        /// </para>
        /// </summary>
        public MD_ReferenceSystem_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_ReferenceSystem)?
        /// </para>
        /// </summary>
        public MD_ReferenceSystem MD_ReferenceSystem
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_ReferenceSystem", "http://www.isotc211.org/2005/gmd"));
                return ((MD_ReferenceSystem)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_ReferenceSystem", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ReferenceSystem_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_ReferenceSystem_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_ReferenceSystem", "http://www.isotc211.org/2005/gmd"), typeof(MD_ReferenceSystem));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_ReferenceSystem_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_ReferenceSystem_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (authority?, code)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Identifier_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Identifier_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Identifier_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_Identifier_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Identifier_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("authority", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("code", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (authority?, code)
        /// </para>
        /// </summary>
        public MD_Identifier_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (authority?, code)
        /// </para>
        /// </summary>
        public CI_Citation_PropertyType authority
        {
            get
            {
                XElement x=this.GetElement(XName.Get("authority", "http://www.isotc211.org/2005/gmd"));
                return ((CI_Citation_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("authority", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (authority?, code)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType code
        {
            get
            {
                XElement x=this.GetElement(XName.Get("code", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("code", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Identifier_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Identifier_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("authority", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("code", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Identifier_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Identifier_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_Identifier)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Identifier_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Identifier_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Identifier_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_Identifier_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Identifier_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("MD_Identifier", "http://www.isotc211.org/2005/gmd"), XName.Get("RS_Identifier", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_Identifier)?
        /// </para>
        /// </summary>
        public MD_Identifier_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: MD_Identifier, RS_Identifier
        /// </para>
        /// <para>
        /// Regular expression: (MD_Identifier)?
        /// </para>
        /// </summary>
        public MD_Identifier MD_Identifier
        {
            get
            {
                XTypedElement x=XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("MD_Identifier", "http://www.isotc211.org/2005/gmd"), XName.Get("RS_Identifier", "http://www.isotc211.org/2005/gmd"));
                return ((MD_Identifier)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_Identifier", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Identifier_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Identifier_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_Identifier", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Identifier_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Identifier_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Description of the spatial and temporal reference systems used in the dataset
    /// </para>
    /// <para>
    /// Regular expression: (name, domainOfValidity*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("AbstractRS_ReferenceSystem_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractRS_ReferenceSystem_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<EX_Extent_PropertyType> domainOfValidityField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator AbstractRS_ReferenceSystem_Type(XElement xe) { return (AbstractRS_ReferenceSystem_Type)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static AbstractRS_ReferenceSystem_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("name", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("domainOfValidity", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Description of the spatial and temporal reference systems used in the dataset
        /// </para>
        /// <para>
        /// Regular expression: (name, domainOfValidity*)
        /// </para>
        /// </summary>
        public AbstractRS_ReferenceSystem_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, domainOfValidity*)
        /// </para>
        /// </summary>
        public RS_Identifier_PropertyType name
        {
            get
            {
                XElement x=this.GetElement(XName.Get("name", "http://www.isotc211.org/2005/gmd"));
                return ((RS_Identifier_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("name", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, domainOfValidity*)
        /// </para>
        /// </summary>
        public IList<EX_Extent_PropertyType> domainOfValidity
        {
            get
            {
                if ((this.domainOfValidityField==null))
                {
                    this.domainOfValidityField=new XTypedList<EX_Extent_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("domainOfValidity", "http://www.isotc211.org/2005/gmd"));
                }
                return this.domainOfValidityField;
            }
            set
            {
                if ((value==null))
                {
                    this.domainOfValidityField=null;
                } else
                {
                    if ((this.domainOfValidityField==null))
                    {
                        this.domainOfValidityField=XTypedList<EX_Extent_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("domainOfValidity", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<EX_Extent_PropertyType>(this.domainOfValidityField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractRS_ReferenceSystem_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("name", "http://www.isotc211.org/2005/gmd"), typeof(RS_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("domainOfValidity", "http://www.isotc211.org/2005/gmd"), typeof(EX_Extent_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName AbstractRS_ReferenceSystem_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("AbstractRS_ReferenceSystem_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (AbstractRS_ReferenceSystem)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("RS_ReferenceSystem_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class RS_ReferenceSystem_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator RS_ReferenceSystem_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<RS_ReferenceSystem_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static RS_ReferenceSystem_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("AbstractRS_ReferenceSystem", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (AbstractRS_ReferenceSystem)?
        /// </para>
        /// </summary>
        public RS_ReferenceSystem_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (AbstractRS_ReferenceSystem)?
        /// </para>
        /// </summary>
        public AbstractRS_ReferenceSystem AbstractRS_ReferenceSystem
        {
            get
            {
                XElement x=this.GetElement(XName.Get("AbstractRS_ReferenceSystem", "http://www.isotc211.org/2005/gmd"));
                return ((AbstractRS_ReferenceSystem)(x));
            }
            set
            {
                this.SetElement(XName.Get("AbstractRS_ReferenceSystem", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("RS_ReferenceSystem_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<RS_ReferenceSystem_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("AbstractRS_ReferenceSystem", "http://www.isotc211.org/2005/gmd"), typeof(AbstractRS_ReferenceSystem));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName RS_ReferenceSystem_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("RS_ReferenceSystem_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Identification of, and means of communication with, person(s) and organisations associated with the dataset
    /// </para>
    /// <para>
    /// Regular expression: (individualName?, organisationName?, positionName?, contactInfo?, role)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_ResponsibleParty_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_ResponsibleParty_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CI_ResponsibleParty_Type(XElement xe) { return XTypedServices.ToXTypedElement<CI_ResponsibleParty_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CI_ResponsibleParty_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("individualName", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("organisationName", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("positionName", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("contactInfo", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("role", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Identification of, and means of communication with, person(s) and organisations associated with the dataset
        /// </para>
        /// <para>
        /// Regular expression: (individualName?, organisationName?, positionName?, contactInfo?, role)
        /// </para>
        /// </summary>
        public CI_ResponsibleParty_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (individualName?, organisationName?, positionName?, contactInfo?, role)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType individualName
        {
            get
            {
                XElement x=this.GetElement(XName.Get("individualName", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("individualName", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (individualName?, organisationName?, positionName?, contactInfo?, role)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType organisationName
        {
            get
            {
                XElement x=this.GetElement(XName.Get("organisationName", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("organisationName", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (individualName?, organisationName?, positionName?, contactInfo?, role)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType positionName
        {
            get
            {
                XElement x=this.GetElement(XName.Get("positionName", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("positionName", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (individualName?, organisationName?, positionName?, contactInfo?, role)
        /// </para>
        /// </summary>
        public CI_Contact_PropertyType contactInfo
        {
            get
            {
                XElement x=this.GetElement(XName.Get("contactInfo", "http://www.isotc211.org/2005/gmd"));
                return ((CI_Contact_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("contactInfo", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (individualName?, organisationName?, positionName?, contactInfo?, role)
        /// </para>
        /// </summary>
        public CI_RoleCode_PropertyType role
        {
            get
            {
                XElement x=this.GetElement(XName.Get("role", "http://www.isotc211.org/2005/gmd"));
                return ((CI_RoleCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("role", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_ResponsibleParty_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CI_ResponsibleParty_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("individualName", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("organisationName", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("positionName", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("contactInfo", "http://www.isotc211.org/2005/gmd"), typeof(CI_Contact_PropertyType));
            localElementDictionary.Add(XName.Get("role", "http://www.isotc211.org/2005/gmd"), typeof(CI_RoleCode_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CI_ResponsibleParty_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CI_ResponsibleParty_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CI_ResponsibleParty)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_ResponsibleParty_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_ResponsibleParty_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CI_ResponsibleParty_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CI_ResponsibleParty_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CI_ResponsibleParty_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("CI_ResponsibleParty", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CI_ResponsibleParty)?
        /// </para>
        /// </summary>
        public CI_ResponsibleParty_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CI_ResponsibleParty)?
        /// </para>
        /// </summary>
        public CI_ResponsibleParty CI_ResponsibleParty
        {
            get
            {
                XElement x=this.GetElement(XName.Get("CI_ResponsibleParty", "http://www.isotc211.org/2005/gmd"));
                return ((CI_ResponsibleParty)(x));
            }
            set
            {
                this.SetElement(XName.Get("CI_ResponsibleParty", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_ResponsibleParty_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CI_ResponsibleParty_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CI_ResponsibleParty", "http://www.isotc211.org/2005/gmd"), typeof(CI_ResponsibleParty));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CI_ResponsibleParty_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CI_ResponsibleParty_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Standardized resource reference
    /// </para>
    /// <para>
    /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_Citation_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_Citation_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> alternateTitleField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CI_Date_PropertyType> dateField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_Identifier_PropertyType> identifierField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CI_ResponsibleParty_PropertyType> citedResponsiblePartyField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CI_PresentationFormCode_PropertyType> presentationFormField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CI_Citation_Type(XElement xe) { return XTypedServices.ToXTypedElement<CI_Citation_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CI_Citation_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("title", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("alternateTitle", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("date", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("edition", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("editionDate", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("identifier", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("citedResponsibleParty", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("presentationForm", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("series", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("otherCitationDetails", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("collectiveTitle", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("ISBN", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("ISSN", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Standardized resource reference
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public CI_Citation_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType title
        {
            get
            {
                XElement x=this.GetElement(XName.Get("title", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("title", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> alternateTitle
        {
            get
            {
                if ((this.alternateTitleField==null))
                {
                    this.alternateTitleField=new XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternateTitle", "http://www.isotc211.org/2005/gmd"));
                }
                return this.alternateTitleField;
            }
            set
            {
                if ((value==null))
                {
                    this.alternateTitleField=null;
                } else
                {
                    if ((this.alternateTitleField==null))
                    {
                        this.alternateTitleField=XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternateTitle", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this.alternateTitleField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public IList<CI_Date_PropertyType> date
        {
            get
            {
                if ((this.dateField==null))
                {
                    this.dateField=new XTypedList<CI_Date_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("date", "http://www.isotc211.org/2005/gmd"));
                }
                return this.dateField;
            }
            set
            {
                if ((value==null))
                {
                    this.dateField=null;
                } else
                {
                    if ((this.dateField==null))
                    {
                        this.dateField=XTypedList<CI_Date_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("date", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<CI_Date_PropertyType>(this.dateField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType edition
        {
            get
            {
                XElement x=this.GetElement(XName.Get("edition", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("edition", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Date_PropertyType editionDate
        {
            get
            {
                XElement x=this.GetElement(XName.Get("editionDate", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Date_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("editionDate", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public IList<MD_Identifier_PropertyType> identifier
        {
            get
            {
                if ((this.identifierField==null))
                {
                    this.identifierField=new XTypedList<MD_Identifier_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("identifier", "http://www.isotc211.org/2005/gmd"));
                }
                return this.identifierField;
            }
            set
            {
                if ((value==null))
                {
                    this.identifierField=null;
                } else
                {
                    if ((this.identifierField==null))
                    {
                        this.identifierField=XTypedList<MD_Identifier_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("identifier", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_Identifier_PropertyType>(this.identifierField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public IList<CI_ResponsibleParty_PropertyType> citedResponsibleParty
        {
            get
            {
                if ((this.citedResponsiblePartyField==null))
                {
                    this.citedResponsiblePartyField=new XTypedList<CI_ResponsibleParty_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("citedResponsibleParty", "http://www.isotc211.org/2005/gmd"));
                }
                return this.citedResponsiblePartyField;
            }
            set
            {
                if ((value==null))
                {
                    this.citedResponsiblePartyField=null;
                } else
                {
                    if ((this.citedResponsiblePartyField==null))
                    {
                        this.citedResponsiblePartyField=XTypedList<CI_ResponsibleParty_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("citedResponsibleParty", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<CI_ResponsibleParty_PropertyType>(this.citedResponsiblePartyField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public IList<CI_PresentationFormCode_PropertyType> presentationForm
        {
            get
            {
                if ((this.presentationFormField==null))
                {
                    this.presentationFormField=new XTypedList<CI_PresentationFormCode_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("presentationForm", "http://www.isotc211.org/2005/gmd"));
                }
                return this.presentationFormField;
            }
            set
            {
                if ((value==null))
                {
                    this.presentationFormField=null;
                } else
                {
                    if ((this.presentationFormField==null))
                    {
                        this.presentationFormField=XTypedList<CI_PresentationFormCode_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("presentationForm", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<CI_PresentationFormCode_PropertyType>(this.presentationFormField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public CI_Series_PropertyType series
        {
            get
            {
                XElement x=this.GetElement(XName.Get("series", "http://www.isotc211.org/2005/gmd"));
                return ((CI_Series_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("series", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType otherCitationDetails
        {
            get
            {
                XElement x=this.GetElement(XName.Get("otherCitationDetails", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("otherCitationDetails", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType collectiveTitle
        {
            get
            {
                XElement x=this.GetElement(XName.Get("collectiveTitle", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("collectiveTitle", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType ISBN
        {
            get
            {
                XElement x=this.GetElement(XName.Get("ISBN", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("ISBN", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType ISSN
        {
            get
            {
                XElement x=this.GetElement(XName.Get("ISSN", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("ISSN", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_Citation_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CI_Citation_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("title", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("alternateTitle", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("date", "http://www.isotc211.org/2005/gmd"), typeof(CI_Date_PropertyType));
            localElementDictionary.Add(XName.Get("edition", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("editionDate", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Date_PropertyType));
            localElementDictionary.Add(XName.Get("identifier", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("citedResponsibleParty", "http://www.isotc211.org/2005/gmd"), typeof(CI_ResponsibleParty_PropertyType));
            localElementDictionary.Add(XName.Get("presentationForm", "http://www.isotc211.org/2005/gmd"), typeof(CI_PresentationFormCode_PropertyType));
            localElementDictionary.Add(XName.Get("series", "http://www.isotc211.org/2005/gmd"), typeof(CI_Series_PropertyType));
            localElementDictionary.Add(XName.Get("otherCitationDetails", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("collectiveTitle", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("ISBN", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("ISSN", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CI_Citation_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CI_Citation_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CI_Citation)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_Citation_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_Citation_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CI_Citation_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CI_Citation_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CI_Citation_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("CI_Citation", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CI_Citation)?
        /// </para>
        /// </summary>
        public CI_Citation_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CI_Citation)?
        /// </para>
        /// </summary>
        public CI_Citation CI_Citation
        {
            get
            {
                XElement x=this.GetElement(XName.Get("CI_Citation", "http://www.isotc211.org/2005/gmd"));
                return ((CI_Citation)(x));
            }
            set
            {
                this.SetElement(XName.Get("CI_Citation", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_Citation_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CI_Citation_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CI_Citation", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CI_Citation_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CI_Citation_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Location of the responsible individual or organisation
    /// </para>
    /// <para>
    /// Regular expression: (deliveryPoint*, city?, administrativeArea?, postalCode?, country?, electronicMailAddress*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_Address_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_Address_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> deliveryPointField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> electronicMailAddressField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CI_Address_Type(XElement xe) { return XTypedServices.ToXTypedElement<CI_Address_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CI_Address_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("deliveryPoint", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("city", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("administrativeArea", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("postalCode", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("country", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("electronicMailAddress", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Location of the responsible individual or organisation
        /// </para>
        /// <para>
        /// Regular expression: (deliveryPoint*, city?, administrativeArea?, postalCode?, country?, electronicMailAddress*)
        /// </para>
        /// </summary>
        public CI_Address_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (deliveryPoint*, city?, administrativeArea?, postalCode?, country?, electronicMailAddress*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> deliveryPoint
        {
            get
            {
                if ((this.deliveryPointField==null))
                {
                    this.deliveryPointField=new XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("deliveryPoint", "http://www.isotc211.org/2005/gmd"));
                }
                return this.deliveryPointField;
            }
            set
            {
                if ((value==null))
                {
                    this.deliveryPointField=null;
                } else
                {
                    if ((this.deliveryPointField==null))
                    {
                        this.deliveryPointField=XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("deliveryPoint", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this.deliveryPointField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (deliveryPoint*, city?, administrativeArea?, postalCode?, country?, electronicMailAddress*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType city
        {
            get
            {
                XElement x=this.GetElement(XName.Get("city", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("city", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (deliveryPoint*, city?, administrativeArea?, postalCode?, country?, electronicMailAddress*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType administrativeArea
        {
            get
            {
                XElement x=this.GetElement(XName.Get("administrativeArea", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("administrativeArea", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (deliveryPoint*, city?, administrativeArea?, postalCode?, country?, electronicMailAddress*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType postalCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("postalCode", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("postalCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (deliveryPoint*, city?, administrativeArea?, postalCode?, country?, electronicMailAddress*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType country
        {
            get
            {
                XElement x=this.GetElement(XName.Get("country", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("country", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (deliveryPoint*, city?, administrativeArea?, postalCode?, country?, electronicMailAddress*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> electronicMailAddress
        {
            get
            {
                if ((this.electronicMailAddressField==null))
                {
                    this.electronicMailAddressField=new XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("electronicMailAddress", "http://www.isotc211.org/2005/gmd"));
                }
                return this.electronicMailAddressField;
            }
            set
            {
                if ((value==null))
                {
                    this.electronicMailAddressField=null;
                } else
                {
                    if ((this.electronicMailAddressField==null))
                    {
                        this.electronicMailAddressField=XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("electronicMailAddress", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this.electronicMailAddressField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_Address_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CI_Address_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("deliveryPoint", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("city", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("administrativeArea", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("postalCode", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("country", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("electronicMailAddress", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CI_Address_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CI_Address_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CI_Address)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_Address_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_Address_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CI_Address_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CI_Address_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CI_Address_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("CI_Address", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CI_Address)?
        /// </para>
        /// </summary>
        public CI_Address_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CI_Address)?
        /// </para>
        /// </summary>
        public CI_Address CI_Address
        {
            get
            {
                XElement x=this.GetElement(XName.Get("CI_Address", "http://www.isotc211.org/2005/gmd"));
                return ((CI_Address)(x));
            }
            set
            {
                this.SetElement(XName.Get("CI_Address", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_Address_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CI_Address_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CI_Address", "http://www.isotc211.org/2005/gmd"), typeof(CI_Address));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CI_Address_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CI_Address_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Information about online sources from which the dataset, specification, or community profile name and extended metadata elements can be obtained.
    /// </para>
    /// <para>
    /// Regular expression: (linkage, protocol?, applicationProfile?, name?, description?, function?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_OnlineResource_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_OnlineResource_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CI_OnlineResource_Type(XElement xe) { return XTypedServices.ToXTypedElement<CI_OnlineResource_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CI_OnlineResource_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("linkage", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("protocol", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("applicationProfile", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("name", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("description", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("function", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Information about online sources from which the dataset, specification, or community profile name and extended metadata elements can be obtained.
        /// </para>
        /// <para>
        /// Regular expression: (linkage, protocol?, applicationProfile?, name?, description?, function?)
        /// </para>
        /// </summary>
        public CI_OnlineResource_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (linkage, protocol?, applicationProfile?, name?, description?, function?)
        /// </para>
        /// </summary>
        public URL_PropertyType linkage
        {
            get
            {
                XElement x=this.GetElement(XName.Get("linkage", "http://www.isotc211.org/2005/gmd"));
                return ((URL_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("linkage", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (linkage, protocol?, applicationProfile?, name?, description?, function?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType protocol
        {
            get
            {
                XElement x=this.GetElement(XName.Get("protocol", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("protocol", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (linkage, protocol?, applicationProfile?, name?, description?, function?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType applicationProfile
        {
            get
            {
                XElement x=this.GetElement(XName.Get("applicationProfile", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("applicationProfile", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (linkage, protocol?, applicationProfile?, name?, description?, function?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType name
        {
            get
            {
                XElement x=this.GetElement(XName.Get("name", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("name", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (linkage, protocol?, applicationProfile?, name?, description?, function?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType description
        {
            get
            {
                XElement x=this.GetElement(XName.Get("description", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("description", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (linkage, protocol?, applicationProfile?, name?, description?, function?)
        /// </para>
        /// </summary>
        public CI_OnLineFunctionCode_PropertyType function
        {
            get
            {
                XElement x=this.GetElement(XName.Get("function", "http://www.isotc211.org/2005/gmd"));
                return ((CI_OnLineFunctionCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("function", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_OnlineResource_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CI_OnlineResource_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("linkage", "http://www.isotc211.org/2005/gmd"), typeof(URL_PropertyType));
            localElementDictionary.Add(XName.Get("protocol", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("applicationProfile", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("name", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("description", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("function", "http://www.isotc211.org/2005/gmd"), typeof(CI_OnLineFunctionCode_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CI_OnlineResource_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CI_OnlineResource_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CI_OnlineResource)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_OnlineResource_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_OnlineResource_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CI_OnlineResource_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CI_OnlineResource_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CI_OnlineResource_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("CI_OnlineResource", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CI_OnlineResource)?
        /// </para>
        /// </summary>
        public CI_OnlineResource_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CI_OnlineResource)?
        /// </para>
        /// </summary>
        public CI_OnlineResource CI_OnlineResource
        {
            get
            {
                XElement x=this.GetElement(XName.Get("CI_OnlineResource", "http://www.isotc211.org/2005/gmd"));
                return ((CI_OnlineResource)(x));
            }
            set
            {
                this.SetElement(XName.Get("CI_OnlineResource", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_OnlineResource_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CI_OnlineResource_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CI_OnlineResource", "http://www.isotc211.org/2005/gmd"), typeof(CI_OnlineResource));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CI_OnlineResource_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CI_OnlineResource_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Information required enabling contact with the  responsible person and/or organisation
    /// </para>
    /// <para>
    /// Regular expression: (phone?, address?, onlineResource?, hoursOfService?, contactInstructions?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_Contact_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_Contact_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CI_Contact_Type(XElement xe) { return XTypedServices.ToXTypedElement<CI_Contact_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CI_Contact_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("phone", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("address", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("onlineResource", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("hoursOfService", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("contactInstructions", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Information required enabling contact with the  responsible person and/or organisation
        /// </para>
        /// <para>
        /// Regular expression: (phone?, address?, onlineResource?, hoursOfService?, contactInstructions?)
        /// </para>
        /// </summary>
        public CI_Contact_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (phone?, address?, onlineResource?, hoursOfService?, contactInstructions?)
        /// </para>
        /// </summary>
        public CI_Telephone_PropertyType phone
        {
            get
            {
                XElement x=this.GetElement(XName.Get("phone", "http://www.isotc211.org/2005/gmd"));
                return ((CI_Telephone_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("phone", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (phone?, address?, onlineResource?, hoursOfService?, contactInstructions?)
        /// </para>
        /// </summary>
        public CI_Address_PropertyType address
        {
            get
            {
                XElement x=this.GetElement(XName.Get("address", "http://www.isotc211.org/2005/gmd"));
                return ((CI_Address_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("address", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (phone?, address?, onlineResource?, hoursOfService?, contactInstructions?)
        /// </para>
        /// </summary>
        public CI_OnlineResource_PropertyType onlineResource
        {
            get
            {
                XElement x=this.GetElement(XName.Get("onlineResource", "http://www.isotc211.org/2005/gmd"));
                return ((CI_OnlineResource_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("onlineResource", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (phone?, address?, onlineResource?, hoursOfService?, contactInstructions?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType hoursOfService
        {
            get
            {
                XElement x=this.GetElement(XName.Get("hoursOfService", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("hoursOfService", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (phone?, address?, onlineResource?, hoursOfService?, contactInstructions?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType contactInstructions
        {
            get
            {
                XElement x=this.GetElement(XName.Get("contactInstructions", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("contactInstructions", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_Contact_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CI_Contact_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("phone", "http://www.isotc211.org/2005/gmd"), typeof(CI_Telephone_PropertyType));
            localElementDictionary.Add(XName.Get("address", "http://www.isotc211.org/2005/gmd"), typeof(CI_Address_PropertyType));
            localElementDictionary.Add(XName.Get("onlineResource", "http://www.isotc211.org/2005/gmd"), typeof(CI_OnlineResource_PropertyType));
            localElementDictionary.Add(XName.Get("hoursOfService", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("contactInstructions", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CI_Contact_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CI_Contact_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CI_Contact)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_Contact_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_Contact_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CI_Contact_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CI_Contact_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CI_Contact_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("CI_Contact", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CI_Contact)?
        /// </para>
        /// </summary>
        public CI_Contact_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CI_Contact)?
        /// </para>
        /// </summary>
        public CI_Contact CI_Contact
        {
            get
            {
                XElement x=this.GetElement(XName.Get("CI_Contact", "http://www.isotc211.org/2005/gmd"));
                return ((CI_Contact)(x));
            }
            set
            {
                this.SetElement(XName.Get("CI_Contact", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_Contact_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CI_Contact_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CI_Contact", "http://www.isotc211.org/2005/gmd"), typeof(CI_Contact));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CI_Contact_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CI_Contact_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Telephone numbers for contacting the responsible individual or organisation
    /// </para>
    /// <para>
    /// Regular expression: (voice*, facsimile*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_Telephone_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_Telephone_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> voiceField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> facsimileField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CI_Telephone_Type(XElement xe) { return XTypedServices.ToXTypedElement<CI_Telephone_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CI_Telephone_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("voice", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("facsimile", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Telephone numbers for contacting the responsible individual or organisation
        /// </para>
        /// <para>
        /// Regular expression: (voice*, facsimile*)
        /// </para>
        /// </summary>
        public CI_Telephone_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (voice*, facsimile*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> voice
        {
            get
            {
                if ((this.voiceField==null))
                {
                    this.voiceField=new XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("voice", "http://www.isotc211.org/2005/gmd"));
                }
                return this.voiceField;
            }
            set
            {
                if ((value==null))
                {
                    this.voiceField=null;
                } else
                {
                    if ((this.voiceField==null))
                    {
                        this.voiceField=XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("voice", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this.voiceField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (voice*, facsimile*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> facsimile
        {
            get
            {
                if ((this.facsimileField==null))
                {
                    this.facsimileField=new XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("facsimile", "http://www.isotc211.org/2005/gmd"));
                }
                return this.facsimileField;
            }
            set
            {
                if ((value==null))
                {
                    this.facsimileField=null;
                } else
                {
                    if ((this.facsimileField==null))
                    {
                        this.facsimileField=XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("facsimile", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this.facsimileField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_Telephone_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CI_Telephone_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("voice", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("facsimile", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CI_Telephone_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CI_Telephone_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CI_Telephone)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_Telephone_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_Telephone_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CI_Telephone_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CI_Telephone_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CI_Telephone_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("CI_Telephone", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CI_Telephone)?
        /// </para>
        /// </summary>
        public CI_Telephone_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CI_Telephone)?
        /// </para>
        /// </summary>
        public CI_Telephone CI_Telephone
        {
            get
            {
                XElement x=this.GetElement(XName.Get("CI_Telephone", "http://www.isotc211.org/2005/gmd"));
                return ((CI_Telephone)(x));
            }
            set
            {
                this.SetElement(XName.Get("CI_Telephone", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_Telephone_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CI_Telephone_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CI_Telephone", "http://www.isotc211.org/2005/gmd"), typeof(CI_Telephone));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CI_Telephone_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CI_Telephone_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (date, dateType)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_Date_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_Date_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CI_Date_Type(XElement xe) { return XTypedServices.ToXTypedElement<CI_Date_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CI_Date_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("date", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateType", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (date, dateType)
        /// </para>
        /// </summary>
        public CI_Date_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (date, dateType)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Date_PropertyType date
        {
            get
            {
                XElement x=this.GetElement(XName.Get("date", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Date_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("date", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (date, dateType)
        /// </para>
        /// </summary>
        public CI_DateTypeCode_PropertyType dateType
        {
            get
            {
                XElement x=this.GetElement(XName.Get("dateType", "http://www.isotc211.org/2005/gmd"));
                return ((CI_DateTypeCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("dateType", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_Date_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CI_Date_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("date", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Date_PropertyType));
            localElementDictionary.Add(XName.Get("dateType", "http://www.isotc211.org/2005/gmd"), typeof(CI_DateTypeCode_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CI_Date_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CI_Date_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CI_Date)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_Date_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_Date_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CI_Date_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CI_Date_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CI_Date_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("CI_Date", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CI_Date)?
        /// </para>
        /// </summary>
        public CI_Date_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CI_Date)?
        /// </para>
        /// </summary>
        public CI_Date CI_Date
        {
            get
            {
                XElement x=this.GetElement(XName.Get("CI_Date", "http://www.isotc211.org/2005/gmd"));
                return ((CI_Date)(x));
            }
            set
            {
                this.SetElement(XName.Get("CI_Date", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_Date_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CI_Date_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CI_Date", "http://www.isotc211.org/2005/gmd"), typeof(CI_Date));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CI_Date_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CI_Date_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (name?, issueIdentification?, page?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_Series_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_Series_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CI_Series_Type(XElement xe) { return XTypedServices.ToXTypedElement<CI_Series_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CI_Series_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("name", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("issueIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("page", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (name?, issueIdentification?, page?)
        /// </para>
        /// </summary>
        public CI_Series_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name?, issueIdentification?, page?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType name
        {
            get
            {
                XElement x=this.GetElement(XName.Get("name", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("name", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name?, issueIdentification?, page?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType issueIdentification
        {
            get
            {
                XElement x=this.GetElement(XName.Get("issueIdentification", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("issueIdentification", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name?, issueIdentification?, page?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType page
        {
            get
            {
                XElement x=this.GetElement(XName.Get("page", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("page", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_Series_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CI_Series_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("name", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("issueIdentification", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("page", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CI_Series_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CI_Series_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CI_Series)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_Series_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_Series_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CI_Series_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CI_Series_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CI_Series_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("CI_Series", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CI_Series)?
        /// </para>
        /// </summary>
        public CI_Series_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CI_Series)?
        /// </para>
        /// </summary>
        public CI_Series CI_Series
        {
            get
            {
                XElement x=this.GetElement(XName.Get("CI_Series", "http://www.isotc211.org/2005/gmd"));
                return ((CI_Series)(x));
            }
            set
            {
                this.SetElement(XName.Get("CI_Series", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_Series_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CI_Series_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CI_Series", "http://www.isotc211.org/2005/gmd"), typeof(CI_Series));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CI_Series_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CI_Series_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (URL)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("URL_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class URL_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator URL_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<URL_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static URL_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("URL", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (URL)?
        /// </para>
        /// </summary>
        public URL_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (URL)?
        /// </para>
        /// </summary>
        public URL URL
        {
            get
            {
                XElement x=this.GetElement(XName.Get("URL", "http://www.isotc211.org/2005/gmd"));
                return ((URL)(x));
            }
            set
            {
                this.SetElement(XName.Get("URL", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("URL_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<URL_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("URL", "http://www.isotc211.org/2005/gmd"), typeof(URL));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName URL_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("URL_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CI_RoleCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_RoleCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_RoleCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CI_RoleCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CI_RoleCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CI_RoleCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("CI_RoleCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CI_RoleCode)?
        /// </para>
        /// </summary>
        public CI_RoleCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CI_RoleCode)?
        /// </para>
        /// </summary>
        public CI_RoleCode CI_RoleCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("CI_RoleCode", "http://www.isotc211.org/2005/gmd"));
                return ((CI_RoleCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("CI_RoleCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_RoleCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CI_RoleCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CI_RoleCode", "http://www.isotc211.org/2005/gmd"), typeof(CI_RoleCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CI_RoleCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CI_RoleCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CI_PresentationFormCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_PresentationFormCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_PresentationFormCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CI_PresentationFormCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CI_PresentationFormCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CI_PresentationFormCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("CI_PresentationFormCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CI_PresentationFormCode)?
        /// </para>
        /// </summary>
        public CI_PresentationFormCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CI_PresentationFormCode)?
        /// </para>
        /// </summary>
        public CI_PresentationFormCode CI_PresentationFormCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("CI_PresentationFormCode", "http://www.isotc211.org/2005/gmd"));
                return ((CI_PresentationFormCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("CI_PresentationFormCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_PresentationFormCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CI_PresentationFormCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CI_PresentationFormCode", "http://www.isotc211.org/2005/gmd"), typeof(CI_PresentationFormCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CI_PresentationFormCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CI_PresentationFormCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CI_OnLineFunctionCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_OnLineFunctionCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_OnLineFunctionCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CI_OnLineFunctionCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CI_OnLineFunctionCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CI_OnLineFunctionCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("CI_OnLineFunctionCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CI_OnLineFunctionCode)?
        /// </para>
        /// </summary>
        public CI_OnLineFunctionCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CI_OnLineFunctionCode)?
        /// </para>
        /// </summary>
        public CI_OnLineFunctionCode CI_OnLineFunctionCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("CI_OnLineFunctionCode", "http://www.isotc211.org/2005/gmd"));
                return ((CI_OnLineFunctionCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("CI_OnLineFunctionCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_OnLineFunctionCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CI_OnLineFunctionCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CI_OnLineFunctionCode", "http://www.isotc211.org/2005/gmd"), typeof(CI_OnLineFunctionCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CI_OnLineFunctionCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CI_OnLineFunctionCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CI_DateTypeCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_DateTypeCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_DateTypeCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CI_DateTypeCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CI_DateTypeCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CI_DateTypeCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("CI_DateTypeCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CI_DateTypeCode)?
        /// </para>
        /// </summary>
        public CI_DateTypeCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CI_DateTypeCode)?
        /// </para>
        /// </summary>
        public CI_DateTypeCode CI_DateTypeCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("CI_DateTypeCode", "http://www.isotc211.org/2005/gmd"));
                return ((CI_DateTypeCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("CI_DateTypeCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_DateTypeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CI_DateTypeCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CI_DateTypeCode", "http://www.isotc211.org/2005/gmd"), typeof(CI_DateTypeCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CI_DateTypeCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CI_DateTypeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Types and numbers of raster spatial objects in the dataset
    /// </para>
    /// <para>
    /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_GridSpatialRepresentation_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_GridSpatialRepresentation_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractMD_SpatialRepresentation_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_Dimension_PropertyType> axisDimensionPropertiesField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_GridSpatialRepresentation_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_GridSpatialRepresentation_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_GridSpatialRepresentation_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("numberOfDimensions", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("axisDimensionProperties", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("cellGeometry", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("transformationParameterAvailability", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Types and numbers of raster spatial objects in the dataset
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability)
        /// </para>
        /// </summary>
        public MD_GridSpatialRepresentation_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Integer_PropertyType numberOfDimensions
        {
            get
            {
                XElement x=this.GetElement(XName.Get("numberOfDimensions", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Integer_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("numberOfDimensions", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability)
        /// </para>
        /// </summary>
        public IList<MD_Dimension_PropertyType> axisDimensionProperties
        {
            get
            {
                if ((this.axisDimensionPropertiesField==null))
                {
                    this.axisDimensionPropertiesField=new XTypedList<MD_Dimension_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("axisDimensionProperties", "http://www.isotc211.org/2005/gmd"));
                }
                return this.axisDimensionPropertiesField;
            }
            set
            {
                if ((value==null))
                {
                    this.axisDimensionPropertiesField=null;
                } else
                {
                    if ((this.axisDimensionPropertiesField==null))
                    {
                        this.axisDimensionPropertiesField=XTypedList<MD_Dimension_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("axisDimensionProperties", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_Dimension_PropertyType>(this.axisDimensionPropertiesField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability)
        /// </para>
        /// </summary>
        public MD_CellGeometryCode_PropertyType cellGeometry
        {
            get
            {
                XElement x=this.GetElement(XName.Get("cellGeometry", "http://www.isotc211.org/2005/gmd"));
                return ((MD_CellGeometryCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("cellGeometry", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType transformationParameterAvailability
        {
            get
            {
                XElement x=this.GetElement(XName.Get("transformationParameterAvailability", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("transformationParameterAvailability", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_GridSpatialRepresentation_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_GridSpatialRepresentation_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("numberOfDimensions", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Integer_PropertyType));
            localElementDictionary.Add(XName.Get("axisDimensionProperties", "http://www.isotc211.org/2005/gmd"), typeof(MD_Dimension_PropertyType));
            localElementDictionary.Add(XName.Get("cellGeometry", "http://www.isotc211.org/2005/gmd"), typeof(MD_CellGeometryCode_PropertyType));
            localElementDictionary.Add(XName.Get("transformationParameterAvailability", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_GridSpatialRepresentation_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_GridSpatialRepresentation_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_GridSpatialRepresentation)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_GridSpatialRepresentation_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_GridSpatialRepresentation_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_GridSpatialRepresentation_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_GridSpatialRepresentation_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_GridSpatialRepresentation_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("MD_GridSpatialRepresentation", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_Georeferenceable", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_Georectified", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_GridSpatialRepresentation)?
        /// </para>
        /// </summary>
        public MD_GridSpatialRepresentation_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: MD_GridSpatialRepresentation, MD_Georeferenceable, MD_Georectified
        /// </para>
        /// <para>
        /// Regular expression: (MD_GridSpatialRepresentation)?
        /// </para>
        /// </summary>
        public MD_GridSpatialRepresentation MD_GridSpatialRepresentation
        {
            get
            {
                XTypedElement x=XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("MD_GridSpatialRepresentation", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_Georeferenceable", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_Georectified", "http://www.isotc211.org/2005/gmd"));
                return ((MD_GridSpatialRepresentation)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_GridSpatialRepresentation", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_GridSpatialRepresentation_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_GridSpatialRepresentation_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_GridSpatialRepresentation", "http://www.isotc211.org/2005/gmd"), typeof(MD_GridSpatialRepresentation));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_GridSpatialRepresentation_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_GridSpatialRepresentation_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Information about the vector spatial objects in the dataset
    /// </para>
    /// <para>
    /// Regular expression: (topologyLevel?, geometricObjects*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_VectorSpatialRepresentation_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_VectorSpatialRepresentation_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractMD_SpatialRepresentation_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_GeometricObjects_PropertyType> geometricObjectsField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_VectorSpatialRepresentation_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_VectorSpatialRepresentation_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_VectorSpatialRepresentation_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("topologyLevel", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("geometricObjects", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Information about the vector spatial objects in the dataset
        /// </para>
        /// <para>
        /// Regular expression: (topologyLevel?, geometricObjects*)
        /// </para>
        /// </summary>
        public MD_VectorSpatialRepresentation_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (topologyLevel?, geometricObjects*)
        /// </para>
        /// </summary>
        public MD_TopologyLevelCode_PropertyType topologyLevel
        {
            get
            {
                XElement x=this.GetElement(XName.Get("topologyLevel", "http://www.isotc211.org/2005/gmd"));
                return ((MD_TopologyLevelCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("topologyLevel", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (topologyLevel?, geometricObjects*)
        /// </para>
        /// </summary>
        public IList<MD_GeometricObjects_PropertyType> geometricObjects
        {
            get
            {
                if ((this.geometricObjectsField==null))
                {
                    this.geometricObjectsField=new XTypedList<MD_GeometricObjects_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("geometricObjects", "http://www.isotc211.org/2005/gmd"));
                }
                return this.geometricObjectsField;
            }
            set
            {
                if ((value==null))
                {
                    this.geometricObjectsField=null;
                } else
                {
                    if ((this.geometricObjectsField==null))
                    {
                        this.geometricObjectsField=XTypedList<MD_GeometricObjects_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("geometricObjects", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_GeometricObjects_PropertyType>(this.geometricObjectsField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_VectorSpatialRepresentation_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_VectorSpatialRepresentation_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("topologyLevel", "http://www.isotc211.org/2005/gmd"), typeof(MD_TopologyLevelCode_PropertyType));
            localElementDictionary.Add(XName.Get("geometricObjects", "http://www.isotc211.org/2005/gmd"), typeof(MD_GeometricObjects_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_VectorSpatialRepresentation_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_VectorSpatialRepresentation_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_VectorSpatialRepresentation)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_VectorSpatialRepresentation_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_VectorSpatialRepresentation_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_VectorSpatialRepresentation_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_VectorSpatialRepresentation_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_VectorSpatialRepresentation_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_VectorSpatialRepresentation", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_VectorSpatialRepresentation)?
        /// </para>
        /// </summary>
        public MD_VectorSpatialRepresentation_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_VectorSpatialRepresentation)?
        /// </para>
        /// </summary>
        public MD_VectorSpatialRepresentation MD_VectorSpatialRepresentation
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_VectorSpatialRepresentation", "http://www.isotc211.org/2005/gmd"));
                return ((MD_VectorSpatialRepresentation)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_VectorSpatialRepresentation", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_VectorSpatialRepresentation_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_VectorSpatialRepresentation_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_VectorSpatialRepresentation", "http://www.isotc211.org/2005/gmd"), typeof(MD_VectorSpatialRepresentation));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_VectorSpatialRepresentation_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_VectorSpatialRepresentation_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Digital mechanism used to represent spatial information
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("AbstractMD_SpatialRepresentation_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractMD_SpatialRepresentation_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        public static explicit operator AbstractMD_SpatialRepresentation_Type(XElement xe) { return (AbstractMD_SpatialRepresentation_Type)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Digital mechanism used to represent spatial information
        /// </para>
        /// </summary>
        public AbstractMD_SpatialRepresentation_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractMD_SpatialRepresentation_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlQualifiedName AbstractMD_SpatialRepresentation_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("AbstractMD_SpatialRepresentation_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (AbstractMD_SpatialRepresentation)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_SpatialRepresentation_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_SpatialRepresentation_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_SpatialRepresentation_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_SpatialRepresentation_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_SpatialRepresentation_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("AbstractMD_SpatialRepresentation", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_GridSpatialRepresentation", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_VectorSpatialRepresentation", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_Georeferenceable", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_Georectified", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (AbstractMD_SpatialRepresentation)?
        /// </para>
        /// </summary>
        public MD_SpatialRepresentation_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: AbstractMD_SpatialRepresentation, MD_GridSpatialRepresentation, MD_VectorSpatialRepresentation, MD_Georeferenceable, MD_Georectified
        /// </para>
        /// <para>
        /// Regular expression: (AbstractMD_SpatialRepresentation)?
        /// </para>
        /// </summary>
        public AbstractMD_SpatialRepresentation AbstractMD_SpatialRepresentation
        {
            get
            {
                XTypedElement x=XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("AbstractMD_SpatialRepresentation", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_GridSpatialRepresentation", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_VectorSpatialRepresentation", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_Georeferenceable", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_Georectified", "http://www.isotc211.org/2005/gmd"));
                return ((AbstractMD_SpatialRepresentation)(x));
            }
            set
            {
                this.SetElement(XName.Get("AbstractMD_SpatialRepresentation", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_SpatialRepresentation_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_SpatialRepresentation_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("AbstractMD_SpatialRepresentation", "http://www.isotc211.org/2005/gmd"), typeof(AbstractMD_SpatialRepresentation));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_SpatialRepresentation_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_SpatialRepresentation_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, controlPointAvailability, orientationParameterAvailability, orientationParameterDescription?, georeferencedParameters, parameterCitation*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Georeferenceable_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Georeferenceable_Type: global::GeoSik.Iso.Ts19139.Gmd.MD_GridSpatialRepresentation_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CI_Citation_PropertyType> parameterCitationField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Georeferenceable_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_Georeferenceable_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Georeferenceable_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("numberOfDimensions", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("axisDimensionProperties", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("cellGeometry", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("transformationParameterAvailability", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("controlPointAvailability", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("orientationParameterAvailability", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("orientationParameterDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("georeferencedParameters", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("parameterCitation", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, controlPointAvailability, orientationParameterAvailability, orientationParameterDescription?, georeferencedParameters, parameterCitation*)
        /// </para>
        /// </summary>
        public MD_Georeferenceable_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, controlPointAvailability, orientationParameterAvailability, orientationParameterDescription?, georeferencedParameters, parameterCitation*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType controlPointAvailability
        {
            get
            {
                XElement x=this.GetElement(XName.Get("controlPointAvailability", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("controlPointAvailability", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, controlPointAvailability, orientationParameterAvailability, orientationParameterDescription?, georeferencedParameters, parameterCitation*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType orientationParameterAvailability
        {
            get
            {
                XElement x=this.GetElement(XName.Get("orientationParameterAvailability", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("orientationParameterAvailability", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, controlPointAvailability, orientationParameterAvailability, orientationParameterDescription?, georeferencedParameters, parameterCitation*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType orientationParameterDescription
        {
            get
            {
                XElement x=this.GetElement(XName.Get("orientationParameterDescription", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("orientationParameterDescription", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, controlPointAvailability, orientationParameterAvailability, orientationParameterDescription?, georeferencedParameters, parameterCitation*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Record_PropertyType georeferencedParameters
        {
            get
            {
                XElement x=this.GetElement(XName.Get("georeferencedParameters", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Record_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("georeferencedParameters", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, controlPointAvailability, orientationParameterAvailability, orientationParameterDescription?, georeferencedParameters, parameterCitation*)
        /// </para>
        /// </summary>
        public IList<CI_Citation_PropertyType> parameterCitation
        {
            get
            {
                if ((this.parameterCitationField==null))
                {
                    this.parameterCitationField=new XTypedList<CI_Citation_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("parameterCitation", "http://www.isotc211.org/2005/gmd"));
                }
                return this.parameterCitationField;
            }
            set
            {
                if ((value==null))
                {
                    this.parameterCitationField=null;
                } else
                {
                    if ((this.parameterCitationField==null))
                    {
                        this.parameterCitationField=XTypedList<CI_Citation_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("parameterCitation", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<CI_Citation_PropertyType>(this.parameterCitationField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Georeferenceable_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Georeferenceable_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("numberOfDimensions", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Integer_PropertyType));
            localElementDictionary.Add(XName.Get("axisDimensionProperties", "http://www.isotc211.org/2005/gmd"), typeof(MD_Dimension_PropertyType));
            localElementDictionary.Add(XName.Get("cellGeometry", "http://www.isotc211.org/2005/gmd"), typeof(MD_CellGeometryCode_PropertyType));
            localElementDictionary.Add(XName.Get("transformationParameterAvailability", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType));
            localElementDictionary.Add(XName.Get("controlPointAvailability", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType));
            localElementDictionary.Add(XName.Get("orientationParameterAvailability", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType));
            localElementDictionary.Add(XName.Get("orientationParameterDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("georeferencedParameters", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Record_PropertyType));
            localElementDictionary.Add(XName.Get("parameterCitation", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Georeferenceable_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Georeferenceable_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_Georeferenceable)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Georeferenceable_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Georeferenceable_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Georeferenceable_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_Georeferenceable_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Georeferenceable_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_Georeferenceable", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_Georeferenceable)?
        /// </para>
        /// </summary>
        public MD_Georeferenceable_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_Georeferenceable)?
        /// </para>
        /// </summary>
        public MD_Georeferenceable MD_Georeferenceable
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_Georeferenceable", "http://www.isotc211.org/2005/gmd"));
                return ((MD_Georeferenceable)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_Georeferenceable", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Georeferenceable_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Georeferenceable_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_Georeferenceable", "http://www.isotc211.org/2005/gmd"), typeof(MD_Georeferenceable));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Georeferenceable_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Georeferenceable_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (dimensionName, dimensionSize, resolution?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Dimension_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Dimension_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Dimension_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_Dimension_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Dimension_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("dimensionName", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dimensionSize", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("resolution", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (dimensionName, dimensionSize, resolution?)
        /// </para>
        /// </summary>
        public MD_Dimension_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (dimensionName, dimensionSize, resolution?)
        /// </para>
        /// </summary>
        public MD_DimensionNameTypeCode_PropertyType dimensionName
        {
            get
            {
                XElement x=this.GetElement(XName.Get("dimensionName", "http://www.isotc211.org/2005/gmd"));
                return ((MD_DimensionNameTypeCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("dimensionName", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (dimensionName, dimensionSize, resolution?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Integer_PropertyType dimensionSize
        {
            get
            {
                XElement x=this.GetElement(XName.Get("dimensionSize", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Integer_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("dimensionSize", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (dimensionName, dimensionSize, resolution?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Measure_PropertyType resolution
        {
            get
            {
                XElement x=this.GetElement(XName.Get("resolution", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Measure_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("resolution", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Dimension_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Dimension_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("dimensionName", "http://www.isotc211.org/2005/gmd"), typeof(MD_DimensionNameTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("dimensionSize", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Integer_PropertyType));
            localElementDictionary.Add(XName.Get("resolution", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Measure_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Dimension_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Dimension_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_Dimension)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Dimension_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Dimension_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Dimension_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_Dimension_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Dimension_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_Dimension", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_Dimension)?
        /// </para>
        /// </summary>
        public MD_Dimension_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_Dimension)?
        /// </para>
        /// </summary>
        public MD_Dimension MD_Dimension
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_Dimension", "http://www.isotc211.org/2005/gmd"));
                return ((MD_Dimension)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_Dimension", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Dimension_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Dimension_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_Dimension", "http://www.isotc211.org/2005/gmd"), typeof(MD_Dimension));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Dimension_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Dimension_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, checkPointAvailability, checkPointDescription?, cornerPoints*, centerPoint?, pointInPixel, transformationDimensionDescription?, transformationDimensionMapping*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Georectified_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Georectified_Type: global::GeoSik.Iso.Ts19139.Gmd.MD_GridSpatialRepresentation_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gss.GM_Point_PropertyType> cornerPointsField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> transformationDimensionMappingField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Georectified_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_Georectified_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Georectified_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("numberOfDimensions", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("axisDimensionProperties", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("cellGeometry", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("transformationParameterAvailability", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("checkPointAvailability", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("checkPointDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("cornerPoints", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("centerPoint", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("pointInPixel", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("transformationDimensionDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("transformationDimensionMapping", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, checkPointAvailability, checkPointDescription?, cornerPoints*, centerPoint?, pointInPixel, transformationDimensionDescription?, transformationDimensionMapping*)
        /// </para>
        /// </summary>
        public MD_Georectified_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, checkPointAvailability, checkPointDescription?, cornerPoints*, centerPoint?, pointInPixel, transformationDimensionDescription?, transformationDimensionMapping*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType checkPointAvailability
        {
            get
            {
                XElement x=this.GetElement(XName.Get("checkPointAvailability", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("checkPointAvailability", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, checkPointAvailability, checkPointDescription?, cornerPoints*, centerPoint?, pointInPixel, transformationDimensionDescription?, transformationDimensionMapping*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType checkPointDescription
        {
            get
            {
                XElement x=this.GetElement(XName.Get("checkPointDescription", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("checkPointDescription", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, checkPointAvailability, checkPointDescription?, cornerPoints*, centerPoint?, pointInPixel, transformationDimensionDescription?, transformationDimensionMapping*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gss.GM_Point_PropertyType> cornerPoints
        {
            get
            {
                if ((this.cornerPointsField==null))
                {
                    this.cornerPointsField=new XTypedList<GeoSik.Iso.Ts19139.Gss.GM_Point_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("cornerPoints", "http://www.isotc211.org/2005/gmd"));
                }
                return this.cornerPointsField;
            }
            set
            {
                if ((value==null))
                {
                    this.cornerPointsField=null;
                } else
                {
                    if ((this.cornerPointsField==null))
                    {
                        this.cornerPointsField=XTypedList<GeoSik.Iso.Ts19139.Gss.GM_Point_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("cornerPoints", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gss.GM_Point_PropertyType>(this.cornerPointsField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, checkPointAvailability, checkPointDescription?, cornerPoints*, centerPoint?, pointInPixel, transformationDimensionDescription?, transformationDimensionMapping*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gss.GM_Point_PropertyType centerPoint
        {
            get
            {
                XElement x=this.GetElement(XName.Get("centerPoint", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gss.GM_Point_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("centerPoint", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, checkPointAvailability, checkPointDescription?, cornerPoints*, centerPoint?, pointInPixel, transformationDimensionDescription?, transformationDimensionMapping*)
        /// </para>
        /// </summary>
        public MD_PixelOrientationCode_PropertyType pointInPixel
        {
            get
            {
                XElement x=this.GetElement(XName.Get("pointInPixel", "http://www.isotc211.org/2005/gmd"));
                return ((MD_PixelOrientationCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("pointInPixel", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, checkPointAvailability, checkPointDescription?, cornerPoints*, centerPoint?, pointInPixel, transformationDimensionDescription?, transformationDimensionMapping*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType transformationDimensionDescription
        {
            get
            {
                XElement x=this.GetElement(XName.Get("transformationDimensionDescription", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("transformationDimensionDescription", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, checkPointAvailability, checkPointDescription?, cornerPoints*, centerPoint?, pointInPixel, transformationDimensionDescription?, transformationDimensionMapping*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> transformationDimensionMapping
        {
            get
            {
                if ((this.transformationDimensionMappingField==null))
                {
                    this.transformationDimensionMappingField=new XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("transformationDimensionMapping", "http://www.isotc211.org/2005/gmd"));
                }
                return this.transformationDimensionMappingField;
            }
            set
            {
                if ((value==null))
                {
                    this.transformationDimensionMappingField=null;
                } else
                {
                    if ((this.transformationDimensionMappingField==null))
                    {
                        this.transformationDimensionMappingField=XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("transformationDimensionMapping", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this.transformationDimensionMappingField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Georectified_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Georectified_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("numberOfDimensions", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Integer_PropertyType));
            localElementDictionary.Add(XName.Get("axisDimensionProperties", "http://www.isotc211.org/2005/gmd"), typeof(MD_Dimension_PropertyType));
            localElementDictionary.Add(XName.Get("cellGeometry", "http://www.isotc211.org/2005/gmd"), typeof(MD_CellGeometryCode_PropertyType));
            localElementDictionary.Add(XName.Get("transformationParameterAvailability", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType));
            localElementDictionary.Add(XName.Get("checkPointAvailability", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType));
            localElementDictionary.Add(XName.Get("checkPointDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("cornerPoints", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gss.GM_Point_PropertyType));
            localElementDictionary.Add(XName.Get("centerPoint", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gss.GM_Point_PropertyType));
            localElementDictionary.Add(XName.Get("pointInPixel", "http://www.isotc211.org/2005/gmd"), typeof(MD_PixelOrientationCode_PropertyType));
            localElementDictionary.Add(XName.Get("transformationDimensionDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("transformationDimensionMapping", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Georectified_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Georectified_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_Georectified)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Georectified_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Georectified_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Georectified_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_Georectified_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Georectified_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_Georectified", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_Georectified)?
        /// </para>
        /// </summary>
        public MD_Georectified_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_Georectified)?
        /// </para>
        /// </summary>
        public MD_Georectified MD_Georectified
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_Georectified", "http://www.isotc211.org/2005/gmd"));
                return ((MD_Georectified)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_Georectified", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Georectified_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Georectified_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_Georectified", "http://www.isotc211.org/2005/gmd"), typeof(MD_Georectified));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Georectified_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Georectified_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (geometricObjectType, geometricObjectCount?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_GeometricObjects_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_GeometricObjects_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_GeometricObjects_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_GeometricObjects_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_GeometricObjects_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("geometricObjectType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("geometricObjectCount", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (geometricObjectType, geometricObjectCount?)
        /// </para>
        /// </summary>
        public MD_GeometricObjects_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (geometricObjectType, geometricObjectCount?)
        /// </para>
        /// </summary>
        public MD_GeometricObjectTypeCode_PropertyType geometricObjectType
        {
            get
            {
                XElement x=this.GetElement(XName.Get("geometricObjectType", "http://www.isotc211.org/2005/gmd"));
                return ((MD_GeometricObjectTypeCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("geometricObjectType", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (geometricObjectType, geometricObjectCount?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Integer_PropertyType geometricObjectCount
        {
            get
            {
                XElement x=this.GetElement(XName.Get("geometricObjectCount", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Integer_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("geometricObjectCount", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_GeometricObjects_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_GeometricObjects_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("geometricObjectType", "http://www.isotc211.org/2005/gmd"), typeof(MD_GeometricObjectTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("geometricObjectCount", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Integer_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_GeometricObjects_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_GeometricObjects_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_GeometricObjects)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_GeometricObjects_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_GeometricObjects_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_GeometricObjects_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_GeometricObjects_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_GeometricObjects_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_GeometricObjects", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_GeometricObjects)?
        /// </para>
        /// </summary>
        public MD_GeometricObjects_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_GeometricObjects)?
        /// </para>
        /// </summary>
        public MD_GeometricObjects MD_GeometricObjects
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_GeometricObjects", "http://www.isotc211.org/2005/gmd"));
                return ((MD_GeometricObjects)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_GeometricObjects", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_GeometricObjects_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_GeometricObjects_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_GeometricObjects", "http://www.isotc211.org/2005/gmd"), typeof(MD_GeometricObjects));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_GeometricObjects_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_GeometricObjects_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public sealed class MD_PixelOrientationCode_Type
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition=new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(16)), new object[] {
                        "center",
                        "lowerLeft",
                        "lowerRight",
                        "upperRight",
                        "upperLeft"}, 0, 0, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));

        private MD_PixelOrientationCode_Type()
        {
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_PixelOrientationCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_PixelOrientationCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_PixelOrientationCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_PixelOrientationCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_PixelOrientationCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_PixelOrientationCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_PixelOrientationCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_PixelOrientationCode)?
        /// </para>
        /// </summary>
        public MD_PixelOrientationCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_PixelOrientationCode)?
        /// </para>
        /// </summary>
        public MD_PixelOrientationCode MD_PixelOrientationCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_PixelOrientationCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_PixelOrientationCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_PixelOrientationCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_PixelOrientationCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_PixelOrientationCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_PixelOrientationCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_PixelOrientationCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_PixelOrientationCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_PixelOrientationCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_TopologyLevelCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_TopologyLevelCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_TopologyLevelCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_TopologyLevelCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_TopologyLevelCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_TopologyLevelCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_TopologyLevelCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_TopologyLevelCode)?
        /// </para>
        /// </summary>
        public MD_TopologyLevelCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_TopologyLevelCode)?
        /// </para>
        /// </summary>
        public MD_TopologyLevelCode MD_TopologyLevelCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_TopologyLevelCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_TopologyLevelCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_TopologyLevelCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_TopologyLevelCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_TopologyLevelCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_TopologyLevelCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_TopologyLevelCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_TopologyLevelCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_TopologyLevelCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_GeometricObjectTypeCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_GeometricObjectTypeCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_GeometricObjectTypeCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_GeometricObjectTypeCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_GeometricObjectTypeCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_GeometricObjectTypeCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_GeometricObjectTypeCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_GeometricObjectTypeCode)?
        /// </para>
        /// </summary>
        public MD_GeometricObjectTypeCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_GeometricObjectTypeCode)?
        /// </para>
        /// </summary>
        public MD_GeometricObjectTypeCode MD_GeometricObjectTypeCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_GeometricObjectTypeCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_GeometricObjectTypeCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_GeometricObjectTypeCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_GeometricObjectTypeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_GeometricObjectTypeCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_GeometricObjectTypeCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_GeometricObjectTypeCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_GeometricObjectTypeCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_GeometricObjectTypeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_CellGeometryCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_CellGeometryCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_CellGeometryCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_CellGeometryCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_CellGeometryCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_CellGeometryCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_CellGeometryCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_CellGeometryCode)?
        /// </para>
        /// </summary>
        public MD_CellGeometryCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_CellGeometryCode)?
        /// </para>
        /// </summary>
        public MD_CellGeometryCode MD_CellGeometryCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_CellGeometryCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_CellGeometryCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_CellGeometryCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_CellGeometryCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_CellGeometryCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_CellGeometryCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_CellGeometryCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_CellGeometryCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_CellGeometryCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_DimensionNameTypeCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_DimensionNameTypeCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_DimensionNameTypeCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_DimensionNameTypeCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_DimensionNameTypeCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_DimensionNameTypeCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_DimensionNameTypeCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_DimensionNameTypeCode)?
        /// </para>
        /// </summary>
        public MD_DimensionNameTypeCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_DimensionNameTypeCode)?
        /// </para>
        /// </summary>
        public MD_DimensionNameTypeCode MD_DimensionNameTypeCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_DimensionNameTypeCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_DimensionNameTypeCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_DimensionNameTypeCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_DimensionNameTypeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_DimensionNameTypeCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_DimensionNameTypeCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_DimensionNameTypeCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_DimensionNameTypeCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_DimensionNameTypeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// New metadata element, not found in ISO 19115, which is required to describe geographic data
    /// </para>
    /// <para>
    /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ExtendedElementInformation_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ExtendedElementInformation_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> parentEntityField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> rationaleField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CI_ResponsibleParty_PropertyType> sourceField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_ExtendedElementInformation_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_ExtendedElementInformation_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_ExtendedElementInformation_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("name", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("shortName", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("domainCode", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("definition", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("obligation", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("condition", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dataType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("maximumOccurrence", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("domainValue", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("parentEntity", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("rule", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("rationale", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("source", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// New metadata element, not found in ISO 19115, which is required to describe geographic data
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public MD_ExtendedElementInformation_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType name
        {
            get
            {
                XElement x=this.GetElement(XName.Get("name", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("name", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType shortName
        {
            get
            {
                XElement x=this.GetElement(XName.Get("shortName", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("shortName", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Integer_PropertyType domainCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("domainCode", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Integer_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("domainCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType definition
        {
            get
            {
                XElement x=this.GetElement(XName.Get("definition", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("definition", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public MD_ObligationCode_PropertyType obligation
        {
            get
            {
                XElement x=this.GetElement(XName.Get("obligation", "http://www.isotc211.org/2005/gmd"));
                return ((MD_ObligationCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("obligation", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType condition
        {
            get
            {
                XElement x=this.GetElement(XName.Get("condition", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("condition", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public MD_DatatypeCode_PropertyType dataType
        {
            get
            {
                XElement x=this.GetElement(XName.Get("dataType", "http://www.isotc211.org/2005/gmd"));
                return ((MD_DatatypeCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("dataType", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType maximumOccurrence
        {
            get
            {
                XElement x=this.GetElement(XName.Get("maximumOccurrence", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("maximumOccurrence", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType domainValue
        {
            get
            {
                XElement x=this.GetElement(XName.Get("domainValue", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("domainValue", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> parentEntity
        {
            get
            {
                if ((this.parentEntityField==null))
                {
                    this.parentEntityField=new XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("parentEntity", "http://www.isotc211.org/2005/gmd"));
                }
                return this.parentEntityField;
            }
            set
            {
                if ((value==null))
                {
                    this.parentEntityField=null;
                } else
                {
                    if ((this.parentEntityField==null))
                    {
                        this.parentEntityField=XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("parentEntity", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this.parentEntityField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType rule
        {
            get
            {
                XElement x=this.GetElement(XName.Get("rule", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("rule", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> rationale
        {
            get
            {
                if ((this.rationaleField==null))
                {
                    this.rationaleField=new XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("rationale", "http://www.isotc211.org/2005/gmd"));
                }
                return this.rationaleField;
            }
            set
            {
                if ((value==null))
                {
                    this.rationaleField=null;
                } else
                {
                    if ((this.rationaleField==null))
                    {
                        this.rationaleField=XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("rationale", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this.rationaleField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public IList<CI_ResponsibleParty_PropertyType> source
        {
            get
            {
                if ((this.sourceField==null))
                {
                    this.sourceField=new XTypedList<CI_ResponsibleParty_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("source", "http://www.isotc211.org/2005/gmd"));
                }
                return this.sourceField;
            }
            set
            {
                if ((value==null))
                {
                    this.sourceField=null;
                } else
                {
                    if ((this.sourceField==null))
                    {
                        this.sourceField=XTypedList<CI_ResponsibleParty_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("source", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<CI_ResponsibleParty_PropertyType>(this.sourceField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ExtendedElementInformation_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_ExtendedElementInformation_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("name", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("shortName", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("domainCode", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Integer_PropertyType));
            localElementDictionary.Add(XName.Get("definition", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("obligation", "http://www.isotc211.org/2005/gmd"), typeof(MD_ObligationCode_PropertyType));
            localElementDictionary.Add(XName.Get("condition", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("dataType", "http://www.isotc211.org/2005/gmd"), typeof(MD_DatatypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("maximumOccurrence", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("domainValue", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("parentEntity", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("rule", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("rationale", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("source", "http://www.isotc211.org/2005/gmd"), typeof(CI_ResponsibleParty_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_ExtendedElementInformation_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_ExtendedElementInformation_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_ExtendedElementInformation)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ExtendedElementInformation_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ExtendedElementInformation_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_ExtendedElementInformation_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_ExtendedElementInformation_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_ExtendedElementInformation_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_ExtendedElementInformation", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_ExtendedElementInformation)?
        /// </para>
        /// </summary>
        public MD_ExtendedElementInformation_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_ExtendedElementInformation)?
        /// </para>
        /// </summary>
        public MD_ExtendedElementInformation MD_ExtendedElementInformation
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_ExtendedElementInformation", "http://www.isotc211.org/2005/gmd"));
                return ((MD_ExtendedElementInformation)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_ExtendedElementInformation", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ExtendedElementInformation_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_ExtendedElementInformation_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_ExtendedElementInformation", "http://www.isotc211.org/2005/gmd"), typeof(MD_ExtendedElementInformation));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_ExtendedElementInformation_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_ExtendedElementInformation_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Information describing metadata extensions.
    /// </para>
    /// <para>
    /// Regular expression: (extensionOnLineResource?, extendedElementInformation*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_MetadataExtensionInformation_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_MetadataExtensionInformation_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_ExtendedElementInformation_PropertyType> extendedElementInformationField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_MetadataExtensionInformation_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_MetadataExtensionInformation_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_MetadataExtensionInformation_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("extensionOnLineResource", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("extendedElementInformation", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Information describing metadata extensions.
        /// </para>
        /// <para>
        /// Regular expression: (extensionOnLineResource?, extendedElementInformation*)
        /// </para>
        /// </summary>
        public MD_MetadataExtensionInformation_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (extensionOnLineResource?, extendedElementInformation*)
        /// </para>
        /// </summary>
        public CI_OnlineResource_PropertyType extensionOnLineResource
        {
            get
            {
                XElement x=this.GetElement(XName.Get("extensionOnLineResource", "http://www.isotc211.org/2005/gmd"));
                return ((CI_OnlineResource_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("extensionOnLineResource", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (extensionOnLineResource?, extendedElementInformation*)
        /// </para>
        /// </summary>
        public IList<MD_ExtendedElementInformation_PropertyType> extendedElementInformation
        {
            get
            {
                if ((this.extendedElementInformationField==null))
                {
                    this.extendedElementInformationField=new XTypedList<MD_ExtendedElementInformation_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("extendedElementInformation", "http://www.isotc211.org/2005/gmd"));
                }
                return this.extendedElementInformationField;
            }
            set
            {
                if ((value==null))
                {
                    this.extendedElementInformationField=null;
                } else
                {
                    if ((this.extendedElementInformationField==null))
                    {
                        this.extendedElementInformationField=XTypedList<MD_ExtendedElementInformation_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("extendedElementInformation", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_ExtendedElementInformation_PropertyType>(this.extendedElementInformationField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_MetadataExtensionInformation_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_MetadataExtensionInformation_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("extensionOnLineResource", "http://www.isotc211.org/2005/gmd"), typeof(CI_OnlineResource_PropertyType));
            localElementDictionary.Add(XName.Get("extendedElementInformation", "http://www.isotc211.org/2005/gmd"), typeof(MD_ExtendedElementInformation_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_MetadataExtensionInformation_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_MetadataExtensionInformation_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_MetadataExtensionInformation)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_MetadataExtensionInformation_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_MetadataExtensionInformation_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_MetadataExtensionInformation_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_MetadataExtensionInformation_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_MetadataExtensionInformation_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_MetadataExtensionInformation", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_MetadataExtensionInformation)?
        /// </para>
        /// </summary>
        public MD_MetadataExtensionInformation_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_MetadataExtensionInformation)?
        /// </para>
        /// </summary>
        public MD_MetadataExtensionInformation MD_MetadataExtensionInformation
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_MetadataExtensionInformation", "http://www.isotc211.org/2005/gmd"));
                return ((MD_MetadataExtensionInformation)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_MetadataExtensionInformation", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_MetadataExtensionInformation_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_MetadataExtensionInformation_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_MetadataExtensionInformation", "http://www.isotc211.org/2005/gmd"), typeof(MD_MetadataExtensionInformation));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_MetadataExtensionInformation_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_MetadataExtensionInformation_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public sealed class MD_ObligationCode_Type
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition=new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(16)), new object[] {
                        "mandatory",
                        "optional",
                        "conditional"}, 0, 0, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));

        private MD_ObligationCode_Type()
        {
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_ObligationCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ObligationCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ObligationCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_ObligationCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_ObligationCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_ObligationCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_ObligationCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_ObligationCode)?
        /// </para>
        /// </summary>
        public MD_ObligationCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_ObligationCode)?
        /// </para>
        /// </summary>
        public MD_ObligationCode MD_ObligationCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_ObligationCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_ObligationCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_ObligationCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ObligationCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_ObligationCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_ObligationCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_ObligationCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_ObligationCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_ObligationCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_DatatypeCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_DatatypeCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_DatatypeCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_DatatypeCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_DatatypeCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_DatatypeCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_DatatypeCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_DatatypeCode)?
        /// </para>
        /// </summary>
        public MD_DatatypeCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_DatatypeCode)?
        /// </para>
        /// </summary>
        public MD_DatatypeCode MD_DatatypeCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_DatatypeCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_DatatypeCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_DatatypeCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_DatatypeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_DatatypeCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_DatatypeCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_DatatypeCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_DatatypeCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_DatatypeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Information identifing the feature catalogue
    /// </para>
    /// <para>
    /// Regular expression: (complianceCode?, language*, includedWithDataset, featureTypes*, featureCatalogueCitation+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_FeatureCatalogueDescription_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_FeatureCatalogueDescription_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractMD_ContentInformation_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> languageField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.GenericName_PropertyType> featureTypesField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CI_Citation_PropertyType> featureCatalogueCitationField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_FeatureCatalogueDescription_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_FeatureCatalogueDescription_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_FeatureCatalogueDescription_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("complianceCode", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("language", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("includedWithDataset", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("featureTypes", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("featureCatalogueCitation", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Information identifing the feature catalogue
        /// </para>
        /// <para>
        /// Regular expression: (complianceCode?, language*, includedWithDataset, featureTypes*, featureCatalogueCitation+)
        /// </para>
        /// </summary>
        public MD_FeatureCatalogueDescription_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (complianceCode?, language*, includedWithDataset, featureTypes*, featureCatalogueCitation+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType complianceCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("complianceCode", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("complianceCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (complianceCode?, language*, includedWithDataset, featureTypes*, featureCatalogueCitation+)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> language
        {
            get
            {
                if ((this.languageField==null))
                {
                    this.languageField=new XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("language", "http://www.isotc211.org/2005/gmd"));
                }
                return this.languageField;
            }
            set
            {
                if ((value==null))
                {
                    this.languageField=null;
                } else
                {
                    if ((this.languageField==null))
                    {
                        this.languageField=XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("language", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this.languageField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (complianceCode?, language*, includedWithDataset, featureTypes*, featureCatalogueCitation+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType includedWithDataset
        {
            get
            {
                XElement x=this.GetElement(XName.Get("includedWithDataset", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("includedWithDataset", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (complianceCode?, language*, includedWithDataset, featureTypes*, featureCatalogueCitation+)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.GenericName_PropertyType> featureTypes
        {
            get
            {
                if ((this.featureTypesField==null))
                {
                    this.featureTypesField=new XTypedList<GeoSik.Iso.Ts19139.Gco.GenericName_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("featureTypes", "http://www.isotc211.org/2005/gmd"));
                }
                return this.featureTypesField;
            }
            set
            {
                if ((value==null))
                {
                    this.featureTypesField=null;
                } else
                {
                    if ((this.featureTypesField==null))
                    {
                        this.featureTypesField=XTypedList<GeoSik.Iso.Ts19139.Gco.GenericName_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("featureTypes", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.GenericName_PropertyType>(this.featureTypesField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (complianceCode?, language*, includedWithDataset, featureTypes*, featureCatalogueCitation+)
        /// </para>
        /// </summary>
        public IList<CI_Citation_PropertyType> featureCatalogueCitation
        {
            get
            {
                if ((this.featureCatalogueCitationField==null))
                {
                    this.featureCatalogueCitationField=new XTypedList<CI_Citation_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("featureCatalogueCitation", "http://www.isotc211.org/2005/gmd"));
                }
                return this.featureCatalogueCitationField;
            }
            set
            {
                if ((value==null))
                {
                    this.featureCatalogueCitationField=null;
                } else
                {
                    if ((this.featureCatalogueCitationField==null))
                    {
                        this.featureCatalogueCitationField=XTypedList<CI_Citation_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("featureCatalogueCitation", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<CI_Citation_PropertyType>(this.featureCatalogueCitationField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_FeatureCatalogueDescription_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_FeatureCatalogueDescription_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("complianceCode", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType));
            localElementDictionary.Add(XName.Get("language", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("includedWithDataset", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType));
            localElementDictionary.Add(XName.Get("featureTypes", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.GenericName_PropertyType));
            localElementDictionary.Add(XName.Get("featureCatalogueCitation", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_FeatureCatalogueDescription_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_FeatureCatalogueDescription_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_FeatureCatalogueDescription)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_FeatureCatalogueDescription_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_FeatureCatalogueDescription_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_FeatureCatalogueDescription_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_FeatureCatalogueDescription_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_FeatureCatalogueDescription_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_FeatureCatalogueDescription", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_FeatureCatalogueDescription)?
        /// </para>
        /// </summary>
        public MD_FeatureCatalogueDescription_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_FeatureCatalogueDescription)?
        /// </para>
        /// </summary>
        public MD_FeatureCatalogueDescription MD_FeatureCatalogueDescription
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_FeatureCatalogueDescription", "http://www.isotc211.org/2005/gmd"));
                return ((MD_FeatureCatalogueDescription)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_FeatureCatalogueDescription", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_FeatureCatalogueDescription_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_FeatureCatalogueDescription_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_FeatureCatalogueDescription", "http://www.isotc211.org/2005/gmd"), typeof(MD_FeatureCatalogueDescription));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_FeatureCatalogueDescription_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_FeatureCatalogueDescription_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Information about the domain of the raster cell
    /// </para>
    /// <para>
    /// Regular expression: (attributeDescription, contentType, dimension*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_CoverageDescription_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_CoverageDescription_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractMD_ContentInformation_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_RangeDimension_PropertyType> dimensionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_CoverageDescription_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_CoverageDescription_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_CoverageDescription_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("attributeDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("contentType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dimension", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Information about the domain of the raster cell
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*)
        /// </para>
        /// </summary>
        public MD_CoverageDescription_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.RecordType_PropertyType attributeDescription
        {
            get
            {
                XElement x=this.GetElement(XName.Get("attributeDescription", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.RecordType_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("attributeDescription", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*)
        /// </para>
        /// </summary>
        public MD_CoverageContentTypeCode_PropertyType contentType
        {
            get
            {
                XElement x=this.GetElement(XName.Get("contentType", "http://www.isotc211.org/2005/gmd"));
                return ((MD_CoverageContentTypeCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("contentType", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*)
        /// </para>
        /// </summary>
        public IList<MD_RangeDimension_PropertyType> dimension
        {
            get
            {
                if ((this.dimensionField==null))
                {
                    this.dimensionField=new XTypedList<MD_RangeDimension_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("dimension", "http://www.isotc211.org/2005/gmd"));
                }
                return this.dimensionField;
            }
            set
            {
                if ((value==null))
                {
                    this.dimensionField=null;
                } else
                {
                    if ((this.dimensionField==null))
                    {
                        this.dimensionField=XTypedList<MD_RangeDimension_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("dimension", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_RangeDimension_PropertyType>(this.dimensionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_CoverageDescription_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_CoverageDescription_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("attributeDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.RecordType_PropertyType));
            localElementDictionary.Add(XName.Get("contentType", "http://www.isotc211.org/2005/gmd"), typeof(MD_CoverageContentTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("dimension", "http://www.isotc211.org/2005/gmd"), typeof(MD_RangeDimension_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_CoverageDescription_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_CoverageDescription_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_CoverageDescription)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_CoverageDescription_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_CoverageDescription_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_CoverageDescription_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_CoverageDescription_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_CoverageDescription_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("MD_CoverageDescription", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_ImageDescription", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_CoverageDescription)?
        /// </para>
        /// </summary>
        public MD_CoverageDescription_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: MD_CoverageDescription, MD_ImageDescription
        /// </para>
        /// <para>
        /// Regular expression: (MD_CoverageDescription)?
        /// </para>
        /// </summary>
        public MD_CoverageDescription MD_CoverageDescription
        {
            get
            {
                XTypedElement x=XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("MD_CoverageDescription", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_ImageDescription", "http://www.isotc211.org/2005/gmd"));
                return ((MD_CoverageDescription)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_CoverageDescription", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_CoverageDescription_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_CoverageDescription_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_CoverageDescription", "http://www.isotc211.org/2005/gmd"), typeof(MD_CoverageDescription));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_CoverageDescription_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_CoverageDescription_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Information about an image's suitability for use
    /// </para>
    /// <para>
    /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ImageDescription_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ImageDescription_Type: global::GeoSik.Iso.Ts19139.Gmd.MD_CoverageDescription_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_ImageDescription_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_ImageDescription_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_ImageDescription_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("attributeDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("contentType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dimension", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("illuminationElevationAngle", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("illuminationAzimuthAngle", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("imagingCondition", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("imageQualityCode", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("cloudCoverPercentage", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("processingLevelCode", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("compressionGenerationQuantity", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("triangulationIndicator", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("radiometricCalibrationDataAvailability", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("cameraCalibrationInformationAvailability", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("filmDistortionInformationAvailability", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("lensDistortionInformationAvailability", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Information about an image's suitability for use
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public MD_ImageDescription_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType illuminationElevationAngle
        {
            get
            {
                XElement x=this.GetElement(XName.Get("illuminationElevationAngle", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Real_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("illuminationElevationAngle", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType illuminationAzimuthAngle
        {
            get
            {
                XElement x=this.GetElement(XName.Get("illuminationAzimuthAngle", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Real_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("illuminationAzimuthAngle", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public MD_ImagingConditionCode_PropertyType imagingCondition
        {
            get
            {
                XElement x=this.GetElement(XName.Get("imagingCondition", "http://www.isotc211.org/2005/gmd"));
                return ((MD_ImagingConditionCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("imagingCondition", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public MD_Identifier_PropertyType imageQualityCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("imageQualityCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_Identifier_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("imageQualityCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType cloudCoverPercentage
        {
            get
            {
                XElement x=this.GetElement(XName.Get("cloudCoverPercentage", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Real_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("cloudCoverPercentage", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public MD_Identifier_PropertyType processingLevelCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("processingLevelCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_Identifier_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("processingLevelCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Integer_PropertyType compressionGenerationQuantity
        {
            get
            {
                XElement x=this.GetElement(XName.Get("compressionGenerationQuantity", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Integer_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("compressionGenerationQuantity", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType triangulationIndicator
        {
            get
            {
                XElement x=this.GetElement(XName.Get("triangulationIndicator", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("triangulationIndicator", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType radiometricCalibrationDataAvailability
        {
            get
            {
                XElement x=this.GetElement(XName.Get("radiometricCalibrationDataAvailability", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("radiometricCalibrationDataAvailability", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType cameraCalibrationInformationAvailability
        {
            get
            {
                XElement x=this.GetElement(XName.Get("cameraCalibrationInformationAvailability", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("cameraCalibrationInformationAvailability", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType filmDistortionInformationAvailability
        {
            get
            {
                XElement x=this.GetElement(XName.Get("filmDistortionInformationAvailability", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("filmDistortionInformationAvailability", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType lensDistortionInformationAvailability
        {
            get
            {
                XElement x=this.GetElement(XName.Get("lensDistortionInformationAvailability", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("lensDistortionInformationAvailability", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ImageDescription_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_ImageDescription_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("attributeDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.RecordType_PropertyType));
            localElementDictionary.Add(XName.Get("contentType", "http://www.isotc211.org/2005/gmd"), typeof(MD_CoverageContentTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("dimension", "http://www.isotc211.org/2005/gmd"), typeof(MD_RangeDimension_PropertyType));
            localElementDictionary.Add(XName.Get("illuminationElevationAngle", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Real_PropertyType));
            localElementDictionary.Add(XName.Get("illuminationAzimuthAngle", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Real_PropertyType));
            localElementDictionary.Add(XName.Get("imagingCondition", "http://www.isotc211.org/2005/gmd"), typeof(MD_ImagingConditionCode_PropertyType));
            localElementDictionary.Add(XName.Get("imageQualityCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("cloudCoverPercentage", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Real_PropertyType));
            localElementDictionary.Add(XName.Get("processingLevelCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("compressionGenerationQuantity", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Integer_PropertyType));
            localElementDictionary.Add(XName.Get("triangulationIndicator", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType));
            localElementDictionary.Add(XName.Get("radiometricCalibrationDataAvailability", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType));
            localElementDictionary.Add(XName.Get("cameraCalibrationInformationAvailability", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType));
            localElementDictionary.Add(XName.Get("filmDistortionInformationAvailability", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType));
            localElementDictionary.Add(XName.Get("lensDistortionInformationAvailability", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_ImageDescription_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_ImageDescription_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_ImageDescription)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ImageDescription_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ImageDescription_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_ImageDescription_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_ImageDescription_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_ImageDescription_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_ImageDescription", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_ImageDescription)?
        /// </para>
        /// </summary>
        public MD_ImageDescription_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_ImageDescription)?
        /// </para>
        /// </summary>
        public MD_ImageDescription MD_ImageDescription
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_ImageDescription", "http://www.isotc211.org/2005/gmd"));
                return ((MD_ImageDescription)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_ImageDescription", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ImageDescription_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_ImageDescription_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_ImageDescription", "http://www.isotc211.org/2005/gmd"), typeof(MD_ImageDescription));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_ImageDescription_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_ImageDescription_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    [XmlSchemaProviderAttribute("AbstractMD_ContentInformation_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractMD_ContentInformation_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        public static explicit operator AbstractMD_ContentInformation_Type(XElement xe) { return (AbstractMD_ContentInformation_Type)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public AbstractMD_ContentInformation_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractMD_ContentInformation_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlQualifiedName AbstractMD_ContentInformation_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("AbstractMD_ContentInformation_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (AbstractMD_ContentInformation)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ContentInformation_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ContentInformation_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_ContentInformation_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_ContentInformation_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_ContentInformation_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("AbstractMD_ContentInformation", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_FeatureCatalogueDescription", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_CoverageDescription", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_ImageDescription", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (AbstractMD_ContentInformation)?
        /// </para>
        /// </summary>
        public MD_ContentInformation_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: AbstractMD_ContentInformation, MD_FeatureCatalogueDescription, MD_CoverageDescription, MD_ImageDescription
        /// </para>
        /// <para>
        /// Regular expression: (AbstractMD_ContentInformation)?
        /// </para>
        /// </summary>
        public AbstractMD_ContentInformation AbstractMD_ContentInformation
        {
            get
            {
                XTypedElement x=XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("AbstractMD_ContentInformation", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_FeatureCatalogueDescription", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_CoverageDescription", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_ImageDescription", "http://www.isotc211.org/2005/gmd"));
                return ((AbstractMD_ContentInformation)(x));
            }
            set
            {
                this.SetElement(XName.Get("AbstractMD_ContentInformation", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ContentInformation_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_ContentInformation_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("AbstractMD_ContentInformation", "http://www.isotc211.org/2005/gmd"), typeof(AbstractMD_ContentInformation));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_ContentInformation_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_ContentInformation_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Set of adjacent wavelengths in the electro-magnetic spectrum with a common characteristic, such as the visible band
    /// </para>
    /// <para>
    /// Regular expression: (sequenceIdentifier?, descriptor?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_RangeDimension_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_RangeDimension_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_RangeDimension_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_RangeDimension_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_RangeDimension_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("sequenceIdentifier", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("descriptor", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Set of adjacent wavelengths in the electro-magnetic spectrum with a common characteristic, such as the visible band
        /// </para>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?)
        /// </para>
        /// </summary>
        public MD_RangeDimension_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.MemberName_PropertyType sequenceIdentifier
        {
            get
            {
                XElement x=this.GetElement(XName.Get("sequenceIdentifier", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.MemberName_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("sequenceIdentifier", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType descriptor
        {
            get
            {
                XElement x=this.GetElement(XName.Get("descriptor", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("descriptor", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_RangeDimension_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_RangeDimension_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("sequenceIdentifier", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.MemberName_PropertyType));
            localElementDictionary.Add(XName.Get("descriptor", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_RangeDimension_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_RangeDimension_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_RangeDimension)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_RangeDimension_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_RangeDimension_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_RangeDimension_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_RangeDimension_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_RangeDimension_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("MD_RangeDimension", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_Band", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_RangeDimension)?
        /// </para>
        /// </summary>
        public MD_RangeDimension_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: MD_RangeDimension, MD_Band
        /// </para>
        /// <para>
        /// Regular expression: (MD_RangeDimension)?
        /// </para>
        /// </summary>
        public MD_RangeDimension MD_RangeDimension
        {
            get
            {
                XTypedElement x=XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("MD_RangeDimension", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_Band", "http://www.isotc211.org/2005/gmd"));
                return ((MD_RangeDimension)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_RangeDimension", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_RangeDimension_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_RangeDimension_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_RangeDimension", "http://www.isotc211.org/2005/gmd"), typeof(MD_RangeDimension));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_RangeDimension_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_RangeDimension_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (sequenceIdentifier?, descriptor?, maxValue?, minValue?, units?, peakResponse?, bitsPerValue?, toneGradation?, scaleFactor?, offset?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Band_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Band_Type: global::GeoSik.Iso.Ts19139.Gmd.MD_RangeDimension_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Band_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_Band_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Band_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("sequenceIdentifier", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("descriptor", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("maxValue", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("minValue", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("units", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("peakResponse", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("bitsPerValue", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("toneGradation", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("scaleFactor", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("offset", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?, maxValue?, minValue?, units?, peakResponse?, bitsPerValue?, toneGradation?, scaleFactor?, offset?)
        /// </para>
        /// </summary>
        public MD_Band_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?, maxValue?, minValue?, units?, peakResponse?, bitsPerValue?, toneGradation?, scaleFactor?, offset?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType maxValue
        {
            get
            {
                XElement x=this.GetElement(XName.Get("maxValue", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Real_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("maxValue", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?, maxValue?, minValue?, units?, peakResponse?, bitsPerValue?, toneGradation?, scaleFactor?, offset?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType minValue
        {
            get
            {
                XElement x=this.GetElement(XName.Get("minValue", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Real_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("minValue", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?, maxValue?, minValue?, units?, peakResponse?, bitsPerValue?, toneGradation?, scaleFactor?, offset?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.UomLength_PropertyType units
        {
            get
            {
                XElement x=this.GetElement(XName.Get("units", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.UomLength_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("units", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?, maxValue?, minValue?, units?, peakResponse?, bitsPerValue?, toneGradation?, scaleFactor?, offset?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType peakResponse
        {
            get
            {
                XElement x=this.GetElement(XName.Get("peakResponse", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Real_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("peakResponse", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?, maxValue?, minValue?, units?, peakResponse?, bitsPerValue?, toneGradation?, scaleFactor?, offset?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Integer_PropertyType bitsPerValue
        {
            get
            {
                XElement x=this.GetElement(XName.Get("bitsPerValue", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Integer_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("bitsPerValue", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?, maxValue?, minValue?, units?, peakResponse?, bitsPerValue?, toneGradation?, scaleFactor?, offset?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Integer_PropertyType toneGradation
        {
            get
            {
                XElement x=this.GetElement(XName.Get("toneGradation", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Integer_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("toneGradation", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?, maxValue?, minValue?, units?, peakResponse?, bitsPerValue?, toneGradation?, scaleFactor?, offset?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType scaleFactor
        {
            get
            {
                XElement x=this.GetElement(XName.Get("scaleFactor", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Real_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("scaleFactor", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?, maxValue?, minValue?, units?, peakResponse?, bitsPerValue?, toneGradation?, scaleFactor?, offset?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType offset
        {
            get
            {
                XElement x=this.GetElement(XName.Get("offset", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Real_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("offset", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Band_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Band_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("sequenceIdentifier", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.MemberName_PropertyType));
            localElementDictionary.Add(XName.Get("descriptor", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("maxValue", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Real_PropertyType));
            localElementDictionary.Add(XName.Get("minValue", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Real_PropertyType));
            localElementDictionary.Add(XName.Get("units", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.UomLength_PropertyType));
            localElementDictionary.Add(XName.Get("peakResponse", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Real_PropertyType));
            localElementDictionary.Add(XName.Get("bitsPerValue", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Integer_PropertyType));
            localElementDictionary.Add(XName.Get("toneGradation", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Integer_PropertyType));
            localElementDictionary.Add(XName.Get("scaleFactor", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Real_PropertyType));
            localElementDictionary.Add(XName.Get("offset", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Real_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Band_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Band_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_Band)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Band_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Band_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Band_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_Band_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Band_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_Band", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_Band)?
        /// </para>
        /// </summary>
        public MD_Band_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_Band)?
        /// </para>
        /// </summary>
        public MD_Band MD_Band
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_Band", "http://www.isotc211.org/2005/gmd"));
                return ((MD_Band)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_Band", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Band_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Band_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_Band", "http://www.isotc211.org/2005/gmd"), typeof(MD_Band));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Band_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Band_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_CoverageContentTypeCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_CoverageContentTypeCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_CoverageContentTypeCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_CoverageContentTypeCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_CoverageContentTypeCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_CoverageContentTypeCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_CoverageContentTypeCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_CoverageContentTypeCode)?
        /// </para>
        /// </summary>
        public MD_CoverageContentTypeCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_CoverageContentTypeCode)?
        /// </para>
        /// </summary>
        public MD_CoverageContentTypeCode MD_CoverageContentTypeCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_CoverageContentTypeCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_CoverageContentTypeCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_CoverageContentTypeCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_CoverageContentTypeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_CoverageContentTypeCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_CoverageContentTypeCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_CoverageContentTypeCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_CoverageContentTypeCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_CoverageContentTypeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_ImagingConditionCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ImagingConditionCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ImagingConditionCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_ImagingConditionCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_ImagingConditionCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_ImagingConditionCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_ImagingConditionCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_ImagingConditionCode)?
        /// </para>
        /// </summary>
        public MD_ImagingConditionCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_ImagingConditionCode)?
        /// </para>
        /// </summary>
        public MD_ImagingConditionCode MD_ImagingConditionCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_ImagingConditionCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_ImagingConditionCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_ImagingConditionCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ImagingConditionCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_ImagingConditionCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_ImagingConditionCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_ImagingConditionCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_ImagingConditionCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_ImagingConditionCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Information about the application schema used to build the dataset
    /// </para>
    /// <para>
    /// Regular expression: (name, schemaLanguage, constraintLanguage, schemaAscii?, graphicsFile?, softwareDevelopmentFile?, softwareDevelopmentFileFormat?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ApplicationSchemaInformation_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ApplicationSchemaInformation_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_ApplicationSchemaInformation_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_ApplicationSchemaInformation_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_ApplicationSchemaInformation_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("name", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("schemaLanguage", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("constraintLanguage", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("schemaAscii", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("graphicsFile", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("softwareDevelopmentFile", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("softwareDevelopmentFileFormat", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Information about the application schema used to build the dataset
        /// </para>
        /// <para>
        /// Regular expression: (name, schemaLanguage, constraintLanguage, schemaAscii?, graphicsFile?, softwareDevelopmentFile?, softwareDevelopmentFileFormat?)
        /// </para>
        /// </summary>
        public MD_ApplicationSchemaInformation_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, schemaLanguage, constraintLanguage, schemaAscii?, graphicsFile?, softwareDevelopmentFile?, softwareDevelopmentFileFormat?)
        /// </para>
        /// </summary>
        public CI_Citation_PropertyType name
        {
            get
            {
                XElement x=this.GetElement(XName.Get("name", "http://www.isotc211.org/2005/gmd"));
                return ((CI_Citation_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("name", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, schemaLanguage, constraintLanguage, schemaAscii?, graphicsFile?, softwareDevelopmentFile?, softwareDevelopmentFileFormat?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType schemaLanguage
        {
            get
            {
                XElement x=this.GetElement(XName.Get("schemaLanguage", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("schemaLanguage", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, schemaLanguage, constraintLanguage, schemaAscii?, graphicsFile?, softwareDevelopmentFile?, softwareDevelopmentFileFormat?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType constraintLanguage
        {
            get
            {
                XElement x=this.GetElement(XName.Get("constraintLanguage", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("constraintLanguage", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, schemaLanguage, constraintLanguage, schemaAscii?, graphicsFile?, softwareDevelopmentFile?, softwareDevelopmentFileFormat?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType schemaAscii
        {
            get
            {
                XElement x=this.GetElement(XName.Get("schemaAscii", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("schemaAscii", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, schemaLanguage, constraintLanguage, schemaAscii?, graphicsFile?, softwareDevelopmentFile?, softwareDevelopmentFileFormat?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Binary_PropertyType graphicsFile
        {
            get
            {
                XElement x=this.GetElement(XName.Get("graphicsFile", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Binary_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("graphicsFile", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, schemaLanguage, constraintLanguage, schemaAscii?, graphicsFile?, softwareDevelopmentFile?, softwareDevelopmentFileFormat?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Binary_PropertyType softwareDevelopmentFile
        {
            get
            {
                XElement x=this.GetElement(XName.Get("softwareDevelopmentFile", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Binary_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("softwareDevelopmentFile", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, schemaLanguage, constraintLanguage, schemaAscii?, graphicsFile?, softwareDevelopmentFile?, softwareDevelopmentFileFormat?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType softwareDevelopmentFileFormat
        {
            get
            {
                XElement x=this.GetElement(XName.Get("softwareDevelopmentFileFormat", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("softwareDevelopmentFileFormat", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ApplicationSchemaInformation_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_ApplicationSchemaInformation_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("name", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("schemaLanguage", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("constraintLanguage", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("schemaAscii", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("graphicsFile", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Binary_PropertyType));
            localElementDictionary.Add(XName.Get("softwareDevelopmentFile", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Binary_PropertyType));
            localElementDictionary.Add(XName.Get("softwareDevelopmentFileFormat", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_ApplicationSchemaInformation_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_ApplicationSchemaInformation_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_ApplicationSchemaInformation)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ApplicationSchemaInformation_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ApplicationSchemaInformation_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_ApplicationSchemaInformation_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_ApplicationSchemaInformation_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_ApplicationSchemaInformation_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_ApplicationSchemaInformation", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_ApplicationSchemaInformation)?
        /// </para>
        /// </summary>
        public MD_ApplicationSchemaInformation_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_ApplicationSchemaInformation)?
        /// </para>
        /// </summary>
        public MD_ApplicationSchemaInformation MD_ApplicationSchemaInformation
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_ApplicationSchemaInformation", "http://www.isotc211.org/2005/gmd"));
                return ((MD_ApplicationSchemaInformation)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_ApplicationSchemaInformation", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ApplicationSchemaInformation_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_ApplicationSchemaInformation_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_ApplicationSchemaInformation", "http://www.isotc211.org/2005/gmd"), typeof(MD_ApplicationSchemaInformation));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_ApplicationSchemaInformation_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_ApplicationSchemaInformation_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Information identifing the portrayal catalogue used
    /// </para>
    /// <para>
    /// Regular expression: (portrayalCatalogueCitation+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_PortrayalCatalogueReference_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_PortrayalCatalogueReference_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CI_Citation_PropertyType> portrayalCatalogueCitationField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_PortrayalCatalogueReference_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_PortrayalCatalogueReference_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_PortrayalCatalogueReference_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("portrayalCatalogueCitation", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Information identifing the portrayal catalogue used
        /// </para>
        /// <para>
        /// Regular expression: (portrayalCatalogueCitation+)
        /// </para>
        /// </summary>
        public MD_PortrayalCatalogueReference_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (portrayalCatalogueCitation+)
        /// </para>
        /// </summary>
        public IList<CI_Citation_PropertyType> portrayalCatalogueCitation
        {
            get
            {
                if ((this.portrayalCatalogueCitationField==null))
                {
                    this.portrayalCatalogueCitationField=new XTypedList<CI_Citation_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("portrayalCatalogueCitation", "http://www.isotc211.org/2005/gmd"));
                }
                return this.portrayalCatalogueCitationField;
            }
            set
            {
                if ((value==null))
                {
                    this.portrayalCatalogueCitationField=null;
                } else
                {
                    if ((this.portrayalCatalogueCitationField==null))
                    {
                        this.portrayalCatalogueCitationField=XTypedList<CI_Citation_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("portrayalCatalogueCitation", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<CI_Citation_PropertyType>(this.portrayalCatalogueCitationField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_PortrayalCatalogueReference_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_PortrayalCatalogueReference_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("portrayalCatalogueCitation", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_PortrayalCatalogueReference_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_PortrayalCatalogueReference_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_PortrayalCatalogueReference)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_PortrayalCatalogueReference_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_PortrayalCatalogueReference_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_PortrayalCatalogueReference_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_PortrayalCatalogueReference_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_PortrayalCatalogueReference_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_PortrayalCatalogueReference", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_PortrayalCatalogueReference)?
        /// </para>
        /// </summary>
        public MD_PortrayalCatalogueReference_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_PortrayalCatalogueReference)?
        /// </para>
        /// </summary>
        public MD_PortrayalCatalogueReference MD_PortrayalCatalogueReference
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_PortrayalCatalogueReference", "http://www.isotc211.org/2005/gmd"));
                return ((MD_PortrayalCatalogueReference)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_PortrayalCatalogueReference", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_PortrayalCatalogueReference_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_PortrayalCatalogueReference_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_PortrayalCatalogueReference", "http://www.isotc211.org/2005/gmd"), typeof(MD_PortrayalCatalogueReference));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_PortrayalCatalogueReference_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_PortrayalCatalogueReference_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (description, rationale?, dateTime?, processor*, source*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("LI_ProcessStep_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class LI_ProcessStep_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CI_ResponsibleParty_PropertyType> processorField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<LI_Source_PropertyType> sourceField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator LI_ProcessStep_Type(XElement xe) { return XTypedServices.ToXTypedElement<LI_ProcessStep_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static LI_ProcessStep_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("description", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("rationale", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("processor", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("source", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (description, rationale?, dateTime?, processor*, source*)
        /// </para>
        /// </summary>
        public LI_ProcessStep_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (description, rationale?, dateTime?, processor*, source*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType description
        {
            get
            {
                XElement x=this.GetElement(XName.Get("description", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("description", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (description, rationale?, dateTime?, processor*, source*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType rationale
        {
            get
            {
                XElement x=this.GetElement(XName.Get("rationale", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("rationale", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (description, rationale?, dateTime?, processor*, source*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType dateTime
        {
            get
            {
                XElement x=this.GetElement(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (description, rationale?, dateTime?, processor*, source*)
        /// </para>
        /// </summary>
        public IList<CI_ResponsibleParty_PropertyType> processor
        {
            get
            {
                if ((this.processorField==null))
                {
                    this.processorField=new XTypedList<CI_ResponsibleParty_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("processor", "http://www.isotc211.org/2005/gmd"));
                }
                return this.processorField;
            }
            set
            {
                if ((value==null))
                {
                    this.processorField=null;
                } else
                {
                    if ((this.processorField==null))
                    {
                        this.processorField=XTypedList<CI_ResponsibleParty_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("processor", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<CI_ResponsibleParty_PropertyType>(this.processorField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (description, rationale?, dateTime?, processor*, source*)
        /// </para>
        /// </summary>
        public IList<LI_Source_PropertyType> source
        {
            get
            {
                if ((this.sourceField==null))
                {
                    this.sourceField=new XTypedList<LI_Source_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("source", "http://www.isotc211.org/2005/gmd"));
                }
                return this.sourceField;
            }
            set
            {
                if ((value==null))
                {
                    this.sourceField=null;
                } else
                {
                    if ((this.sourceField==null))
                    {
                        this.sourceField=XTypedList<LI_Source_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("source", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<LI_Source_PropertyType>(this.sourceField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("LI_ProcessStep_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<LI_ProcessStep_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("description", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("rationale", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("processor", "http://www.isotc211.org/2005/gmd"), typeof(CI_ResponsibleParty_PropertyType));
            localElementDictionary.Add(XName.Get("source", "http://www.isotc211.org/2005/gmd"), typeof(LI_Source_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName LI_ProcessStep_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("LI_ProcessStep_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (LI_ProcessStep)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("LI_ProcessStep_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class LI_ProcessStep_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator LI_ProcessStep_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<LI_ProcessStep_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static LI_ProcessStep_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("LI_ProcessStep", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (LI_ProcessStep)?
        /// </para>
        /// </summary>
        public LI_ProcessStep_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (LI_ProcessStep)?
        /// </para>
        /// </summary>
        public LI_ProcessStep LI_ProcessStep
        {
            get
            {
                XElement x=this.GetElement(XName.Get("LI_ProcessStep", "http://www.isotc211.org/2005/gmd"));
                return ((LI_ProcessStep)(x));
            }
            set
            {
                this.SetElement(XName.Get("LI_ProcessStep", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("LI_ProcessStep_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<LI_ProcessStep_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("LI_ProcessStep", "http://www.isotc211.org/2005/gmd"), typeof(LI_ProcessStep));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName LI_ProcessStep_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("LI_ProcessStep_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (description?, scaleDenominator?, sourceReferenceSystem?, sourceCitation?, sourceExtent*, sourceStep*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("LI_Source_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class LI_Source_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<EX_Extent_PropertyType> sourceExtentField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<LI_ProcessStep_PropertyType> sourceStepField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator LI_Source_Type(XElement xe) { return XTypedServices.ToXTypedElement<LI_Source_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static LI_Source_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("description", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("scaleDenominator", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("sourceReferenceSystem", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("sourceCitation", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("sourceExtent", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("sourceStep", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (description?, scaleDenominator?, sourceReferenceSystem?, sourceCitation?, sourceExtent*, sourceStep*)
        /// </para>
        /// </summary>
        public LI_Source_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (description?, scaleDenominator?, sourceReferenceSystem?, sourceCitation?, sourceExtent*, sourceStep*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType description
        {
            get
            {
                XElement x=this.GetElement(XName.Get("description", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("description", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (description?, scaleDenominator?, sourceReferenceSystem?, sourceCitation?, sourceExtent*, sourceStep*)
        /// </para>
        /// </summary>
        public MD_RepresentativeFraction_PropertyType scaleDenominator
        {
            get
            {
                XElement x=this.GetElement(XName.Get("scaleDenominator", "http://www.isotc211.org/2005/gmd"));
                return ((MD_RepresentativeFraction_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("scaleDenominator", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (description?, scaleDenominator?, sourceReferenceSystem?, sourceCitation?, sourceExtent*, sourceStep*)
        /// </para>
        /// </summary>
        public MD_ReferenceSystem_PropertyType sourceReferenceSystem
        {
            get
            {
                XElement x=this.GetElement(XName.Get("sourceReferenceSystem", "http://www.isotc211.org/2005/gmd"));
                return ((MD_ReferenceSystem_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("sourceReferenceSystem", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (description?, scaleDenominator?, sourceReferenceSystem?, sourceCitation?, sourceExtent*, sourceStep*)
        /// </para>
        /// </summary>
        public CI_Citation_PropertyType sourceCitation
        {
            get
            {
                XElement x=this.GetElement(XName.Get("sourceCitation", "http://www.isotc211.org/2005/gmd"));
                return ((CI_Citation_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("sourceCitation", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (description?, scaleDenominator?, sourceReferenceSystem?, sourceCitation?, sourceExtent*, sourceStep*)
        /// </para>
        /// </summary>
        public IList<EX_Extent_PropertyType> sourceExtent
        {
            get
            {
                if ((this.sourceExtentField==null))
                {
                    this.sourceExtentField=new XTypedList<EX_Extent_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("sourceExtent", "http://www.isotc211.org/2005/gmd"));
                }
                return this.sourceExtentField;
            }
            set
            {
                if ((value==null))
                {
                    this.sourceExtentField=null;
                } else
                {
                    if ((this.sourceExtentField==null))
                    {
                        this.sourceExtentField=XTypedList<EX_Extent_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("sourceExtent", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<EX_Extent_PropertyType>(this.sourceExtentField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (description?, scaleDenominator?, sourceReferenceSystem?, sourceCitation?, sourceExtent*, sourceStep*)
        /// </para>
        /// </summary>
        public IList<LI_ProcessStep_PropertyType> sourceStep
        {
            get
            {
                if ((this.sourceStepField==null))
                {
                    this.sourceStepField=new XTypedList<LI_ProcessStep_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("sourceStep", "http://www.isotc211.org/2005/gmd"));
                }
                return this.sourceStepField;
            }
            set
            {
                if ((value==null))
                {
                    this.sourceStepField=null;
                } else
                {
                    if ((this.sourceStepField==null))
                    {
                        this.sourceStepField=XTypedList<LI_ProcessStep_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("sourceStep", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<LI_ProcessStep_PropertyType>(this.sourceStepField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("LI_Source_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<LI_Source_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("description", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("scaleDenominator", "http://www.isotc211.org/2005/gmd"), typeof(MD_RepresentativeFraction_PropertyType));
            localElementDictionary.Add(XName.Get("sourceReferenceSystem", "http://www.isotc211.org/2005/gmd"), typeof(MD_ReferenceSystem_PropertyType));
            localElementDictionary.Add(XName.Get("sourceCitation", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("sourceExtent", "http://www.isotc211.org/2005/gmd"), typeof(EX_Extent_PropertyType));
            localElementDictionary.Add(XName.Get("sourceStep", "http://www.isotc211.org/2005/gmd"), typeof(LI_ProcessStep_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName LI_Source_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("LI_Source_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (LI_Source)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("LI_Source_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class LI_Source_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator LI_Source_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<LI_Source_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static LI_Source_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("LI_Source", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (LI_Source)?
        /// </para>
        /// </summary>
        public LI_Source_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (LI_Source)?
        /// </para>
        /// </summary>
        public LI_Source LI_Source
        {
            get
            {
                XElement x=this.GetElement(XName.Get("LI_Source", "http://www.isotc211.org/2005/gmd"));
                return ((LI_Source)(x));
            }
            set
            {
                this.SetElement(XName.Get("LI_Source", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("LI_Source_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<LI_Source_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("LI_Source", "http://www.isotc211.org/2005/gmd"), typeof(LI_Source));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName LI_Source_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("LI_Source_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (statement?, processStep*, source*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("LI_Lineage_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class LI_Lineage_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<LI_ProcessStep_PropertyType> processStepField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<LI_Source_PropertyType> sourceField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator LI_Lineage_Type(XElement xe) { return XTypedServices.ToXTypedElement<LI_Lineage_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static LI_Lineage_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("statement", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("processStep", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("source", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (statement?, processStep*, source*)
        /// </para>
        /// </summary>
        public LI_Lineage_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (statement?, processStep*, source*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType statement
        {
            get
            {
                XElement x=this.GetElement(XName.Get("statement", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("statement", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (statement?, processStep*, source*)
        /// </para>
        /// </summary>
        public IList<LI_ProcessStep_PropertyType> processStep
        {
            get
            {
                if ((this.processStepField==null))
                {
                    this.processStepField=new XTypedList<LI_ProcessStep_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("processStep", "http://www.isotc211.org/2005/gmd"));
                }
                return this.processStepField;
            }
            set
            {
                if ((value==null))
                {
                    this.processStepField=null;
                } else
                {
                    if ((this.processStepField==null))
                    {
                        this.processStepField=XTypedList<LI_ProcessStep_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("processStep", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<LI_ProcessStep_PropertyType>(this.processStepField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (statement?, processStep*, source*)
        /// </para>
        /// </summary>
        public IList<LI_Source_PropertyType> source
        {
            get
            {
                if ((this.sourceField==null))
                {
                    this.sourceField=new XTypedList<LI_Source_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("source", "http://www.isotc211.org/2005/gmd"));
                }
                return this.sourceField;
            }
            set
            {
                if ((value==null))
                {
                    this.sourceField=null;
                } else
                {
                    if ((this.sourceField==null))
                    {
                        this.sourceField=XTypedList<LI_Source_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("source", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<LI_Source_PropertyType>(this.sourceField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("LI_Lineage_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<LI_Lineage_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("statement", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("processStep", "http://www.isotc211.org/2005/gmd"), typeof(LI_ProcessStep_PropertyType));
            localElementDictionary.Add(XName.Get("source", "http://www.isotc211.org/2005/gmd"), typeof(LI_Source_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName LI_Lineage_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("LI_Lineage_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (LI_Lineage)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("LI_Lineage_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class LI_Lineage_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator LI_Lineage_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<LI_Lineage_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static LI_Lineage_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("LI_Lineage", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (LI_Lineage)?
        /// </para>
        /// </summary>
        public LI_Lineage_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (LI_Lineage)?
        /// </para>
        /// </summary>
        public LI_Lineage LI_Lineage
        {
            get
            {
                XElement x=this.GetElement(XName.Get("LI_Lineage", "http://www.isotc211.org/2005/gmd"));
                return ((LI_Lineage)(x));
            }
            set
            {
                this.SetElement(XName.Get("LI_Lineage", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("LI_Lineage_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<LI_Lineage_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("LI_Lineage", "http://www.isotc211.org/2005/gmd"), typeof(LI_Lineage));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName LI_Lineage_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("LI_Lineage_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// quantitative_result from Quality Procedures -  - renamed to remove implied use limitiation.
    /// </para>
    /// <para>
    /// Regular expression: (specification, explanation, pass)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_ConformanceResult_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_ConformanceResult_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_Result_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_ConformanceResult_Type(XElement xe) { return XTypedServices.ToXTypedElement<DQ_ConformanceResult_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_ConformanceResult_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("specification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("explanation", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("pass", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// quantitative_result from Quality Procedures -  - renamed to remove implied use limitiation.
        /// </para>
        /// <para>
        /// Regular expression: (specification, explanation, pass)
        /// </para>
        /// </summary>
        public DQ_ConformanceResult_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (specification, explanation, pass)
        /// </para>
        /// </summary>
        public CI_Citation_PropertyType specification
        {
            get
            {
                XElement x=this.GetElement(XName.Get("specification", "http://www.isotc211.org/2005/gmd"));
                return ((CI_Citation_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("specification", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (specification, explanation, pass)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType explanation
        {
            get
            {
                XElement x=this.GetElement(XName.Get("explanation", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("explanation", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (specification, explanation, pass)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType pass
        {
            get
            {
                XElement x=this.GetElement(XName.Get("pass", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("pass", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_ConformanceResult_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_ConformanceResult_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("specification", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("explanation", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("pass", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_ConformanceResult_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_ConformanceResult_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DQ_ConformanceResult)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_ConformanceResult_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_ConformanceResult_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_ConformanceResult_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_ConformanceResult_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_ConformanceResult_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DQ_ConformanceResult", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DQ_ConformanceResult)?
        /// </para>
        /// </summary>
        public DQ_ConformanceResult_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DQ_ConformanceResult)?
        /// </para>
        /// </summary>
        public DQ_ConformanceResult DQ_ConformanceResult
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DQ_ConformanceResult", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_ConformanceResult)(x));
            }
            set
            {
                this.SetElement(XName.Get("DQ_ConformanceResult", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_ConformanceResult_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_ConformanceResult_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DQ_ConformanceResult", "http://www.isotc211.org/2005/gmd"), typeof(DQ_ConformanceResult));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_ConformanceResult_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_ConformanceResult_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Quantitative_conformance_measure from Quality Procedures.  -  - Renamed to remove implied use limitation -  - OCL - -- result is type specified by valueDomain - result.tupleType = valueDomain
    /// </para>
    /// <para>
    /// Regular expression: (valueType?, valueUnit, errorStatistic?, value+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_QuantitativeResult_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_QuantitativeResult_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_Result_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.Record_PropertyType> valueField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_QuantitativeResult_Type(XElement xe) { return XTypedServices.ToXTypedElement<DQ_QuantitativeResult_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_QuantitativeResult_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("valueType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("valueUnit", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("errorStatistic", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("value", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Quantitative_conformance_measure from Quality Procedures.  -  - Renamed to remove implied use limitation -  - OCL - -- result is type specified by valueDomain - result.tupleType = valueDomain
        /// </para>
        /// <para>
        /// Regular expression: (valueType?, valueUnit, errorStatistic?, value+)
        /// </para>
        /// </summary>
        public DQ_QuantitativeResult_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (valueType?, valueUnit, errorStatistic?, value+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.RecordType_PropertyType valueType
        {
            get
            {
                XElement x=this.GetElement(XName.Get("valueType", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.RecordType_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("valueType", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (valueType?, valueUnit, errorStatistic?, value+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.UnitOfMeasure_PropertyType valueUnit
        {
            get
            {
                XElement x=this.GetElement(XName.Get("valueUnit", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.UnitOfMeasure_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("valueUnit", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (valueType?, valueUnit, errorStatistic?, value+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType errorStatistic
        {
            get
            {
                XElement x=this.GetElement(XName.Get("errorStatistic", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("errorStatistic", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (valueType?, valueUnit, errorStatistic?, value+)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.Record_PropertyType> value
        {
            get
            {
                if ((this.valueField==null))
                {
                    this.valueField=new XTypedList<GeoSik.Iso.Ts19139.Gco.Record_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("value", "http://www.isotc211.org/2005/gmd"));
                }
                return this.valueField;
            }
            set
            {
                if ((value==null))
                {
                    this.valueField=null;
                } else
                {
                    if ((this.valueField==null))
                    {
                        this.valueField=XTypedList<GeoSik.Iso.Ts19139.Gco.Record_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("value", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.Record_PropertyType>(this.valueField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_QuantitativeResult_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_QuantitativeResult_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("valueType", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.RecordType_PropertyType));
            localElementDictionary.Add(XName.Get("valueUnit", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.UnitOfMeasure_PropertyType));
            localElementDictionary.Add(XName.Get("errorStatistic", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("value", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Record_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_QuantitativeResult_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_QuantitativeResult_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DQ_QuantitativeResult)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_QuantitativeResult_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_QuantitativeResult_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_QuantitativeResult_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_QuantitativeResult_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_QuantitativeResult_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DQ_QuantitativeResult", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DQ_QuantitativeResult)?
        /// </para>
        /// </summary>
        public DQ_QuantitativeResult_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DQ_QuantitativeResult)?
        /// </para>
        /// </summary>
        public DQ_QuantitativeResult DQ_QuantitativeResult
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DQ_QuantitativeResult", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_QuantitativeResult)(x));
            }
            set
            {
                this.SetElement(XName.Get("DQ_QuantitativeResult", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_QuantitativeResult_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_QuantitativeResult_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DQ_QuantitativeResult", "http://www.isotc211.org/2005/gmd"), typeof(DQ_QuantitativeResult));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_QuantitativeResult_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_QuantitativeResult_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    [XmlSchemaProviderAttribute("AbstractDQ_Result_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractDQ_Result_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        public static explicit operator AbstractDQ_Result_Type(XElement xe) { return (AbstractDQ_Result_Type)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public AbstractDQ_Result_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractDQ_Result_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlQualifiedName AbstractDQ_Result_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("AbstractDQ_Result_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (AbstractDQ_Result)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_Result_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_Result_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_Result_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_Result_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_Result_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("AbstractDQ_Result", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_ConformanceResult", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_QuantitativeResult", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (AbstractDQ_Result)?
        /// </para>
        /// </summary>
        public DQ_Result_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: AbstractDQ_Result, DQ_ConformanceResult, DQ_QuantitativeResult
        /// </para>
        /// <para>
        /// Regular expression: (AbstractDQ_Result)?
        /// </para>
        /// </summary>
        public AbstractDQ_Result AbstractDQ_Result
        {
            get
            {
                XTypedElement x=XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("AbstractDQ_Result", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_ConformanceResult", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_QuantitativeResult", "http://www.isotc211.org/2005/gmd"));
                return ((AbstractDQ_Result)(x));
            }
            set
            {
                this.SetElement(XName.Get("AbstractDQ_Result", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_Result_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_Result_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("AbstractDQ_Result", "http://www.isotc211.org/2005/gmd"), typeof(AbstractDQ_Result));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_Result_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_Result_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_TemporalValidity_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_TemporalValidity_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_TemporalAccuracy_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_TemporalValidity_Type(XElement xe) { return XTypedServices.ToXTypedElement<DQ_TemporalValidity_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_TemporalValidity_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("result", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public DQ_TemporalValidity_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_TemporalValidity_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_TemporalValidity_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("result", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Result_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_TemporalValidity_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_TemporalValidity_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DQ_TemporalValidity)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_TemporalValidity_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_TemporalValidity_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_TemporalValidity_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_TemporalValidity_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_TemporalValidity_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DQ_TemporalValidity", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DQ_TemporalValidity)?
        /// </para>
        /// </summary>
        public DQ_TemporalValidity_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DQ_TemporalValidity)?
        /// </para>
        /// </summary>
        public DQ_TemporalValidity DQ_TemporalValidity
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DQ_TemporalValidity", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_TemporalValidity)(x));
            }
            set
            {
                this.SetElement(XName.Get("DQ_TemporalValidity", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_TemporalValidity_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_TemporalValidity_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DQ_TemporalValidity", "http://www.isotc211.org/2005/gmd"), typeof(DQ_TemporalValidity));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_TemporalValidity_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_TemporalValidity_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_TemporalConsistency_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_TemporalConsistency_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_TemporalAccuracy_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_TemporalConsistency_Type(XElement xe) { return XTypedServices.ToXTypedElement<DQ_TemporalConsistency_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_TemporalConsistency_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("result", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public DQ_TemporalConsistency_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_TemporalConsistency_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_TemporalConsistency_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("result", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Result_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_TemporalConsistency_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_TemporalConsistency_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DQ_TemporalConsistency)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_TemporalConsistency_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_TemporalConsistency_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_TemporalConsistency_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_TemporalConsistency_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_TemporalConsistency_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DQ_TemporalConsistency", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DQ_TemporalConsistency)?
        /// </para>
        /// </summary>
        public DQ_TemporalConsistency_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DQ_TemporalConsistency)?
        /// </para>
        /// </summary>
        public DQ_TemporalConsistency DQ_TemporalConsistency
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DQ_TemporalConsistency", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_TemporalConsistency)(x));
            }
            set
            {
                this.SetElement(XName.Get("DQ_TemporalConsistency", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_TemporalConsistency_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_TemporalConsistency_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DQ_TemporalConsistency", "http://www.isotc211.org/2005/gmd"), typeof(DQ_TemporalConsistency));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_TemporalConsistency_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_TemporalConsistency_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_AccuracyOfATimeMeasurement_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_AccuracyOfATimeMeasurement_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_TemporalAccuracy_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_AccuracyOfATimeMeasurement_Type(XElement xe) { return XTypedServices.ToXTypedElement<DQ_AccuracyOfATimeMeasurement_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_AccuracyOfATimeMeasurement_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("result", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public DQ_AccuracyOfATimeMeasurement_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_AccuracyOfATimeMeasurement_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_AccuracyOfATimeMeasurement_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("result", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Result_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_AccuracyOfATimeMeasurement_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_AccuracyOfATimeMeasurement_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DQ_AccuracyOfATimeMeasurement)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_AccuracyOfATimeMeasurement_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_AccuracyOfATimeMeasurement_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_AccuracyOfATimeMeasurement_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_AccuracyOfATimeMeasurement_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_AccuracyOfATimeMeasurement_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DQ_AccuracyOfATimeMeasurement", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DQ_AccuracyOfATimeMeasurement)?
        /// </para>
        /// </summary>
        public DQ_AccuracyOfATimeMeasurement_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DQ_AccuracyOfATimeMeasurement)?
        /// </para>
        /// </summary>
        public DQ_AccuracyOfATimeMeasurement DQ_AccuracyOfATimeMeasurement
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DQ_AccuracyOfATimeMeasurement", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_AccuracyOfATimeMeasurement)(x));
            }
            set
            {
                this.SetElement(XName.Get("DQ_AccuracyOfATimeMeasurement", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_AccuracyOfATimeMeasurement_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_AccuracyOfATimeMeasurement_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DQ_AccuracyOfATimeMeasurement", "http://www.isotc211.org/2005/gmd"), typeof(DQ_AccuracyOfATimeMeasurement));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_AccuracyOfATimeMeasurement_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_AccuracyOfATimeMeasurement_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_QuantitativeAttributeAccuracy_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_QuantitativeAttributeAccuracy_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_ThematicAccuracy_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_QuantitativeAttributeAccuracy_Type(XElement xe) { return XTypedServices.ToXTypedElement<DQ_QuantitativeAttributeAccuracy_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_QuantitativeAttributeAccuracy_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("result", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public DQ_QuantitativeAttributeAccuracy_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_QuantitativeAttributeAccuracy_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_QuantitativeAttributeAccuracy_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("result", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Result_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_QuantitativeAttributeAccuracy_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_QuantitativeAttributeAccuracy_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DQ_QuantitativeAttributeAccuracy)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_QuantitativeAttributeAccuracy_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_QuantitativeAttributeAccuracy_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_QuantitativeAttributeAccuracy_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_QuantitativeAttributeAccuracy_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_QuantitativeAttributeAccuracy_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DQ_QuantitativeAttributeAccuracy", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DQ_QuantitativeAttributeAccuracy)?
        /// </para>
        /// </summary>
        public DQ_QuantitativeAttributeAccuracy_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DQ_QuantitativeAttributeAccuracy)?
        /// </para>
        /// </summary>
        public DQ_QuantitativeAttributeAccuracy DQ_QuantitativeAttributeAccuracy
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DQ_QuantitativeAttributeAccuracy", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_QuantitativeAttributeAccuracy)(x));
            }
            set
            {
                this.SetElement(XName.Get("DQ_QuantitativeAttributeAccuracy", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_QuantitativeAttributeAccuracy_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_QuantitativeAttributeAccuracy_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DQ_QuantitativeAttributeAccuracy", "http://www.isotc211.org/2005/gmd"), typeof(DQ_QuantitativeAttributeAccuracy));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_QuantitativeAttributeAccuracy_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_QuantitativeAttributeAccuracy_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_NonQuantitativeAttributeAccuracy_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_NonQuantitativeAttributeAccuracy_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_ThematicAccuracy_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_NonQuantitativeAttributeAccuracy_Type(XElement xe) { return XTypedServices.ToXTypedElement<DQ_NonQuantitativeAttributeAccuracy_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_NonQuantitativeAttributeAccuracy_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("result", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public DQ_NonQuantitativeAttributeAccuracy_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_NonQuantitativeAttributeAccuracy_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_NonQuantitativeAttributeAccuracy_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("result", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Result_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_NonQuantitativeAttributeAccuracy_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_NonQuantitativeAttributeAccuracy_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DQ_NonQuantitativeAttributeAccuracy)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_NonQuantitativeAttributeAccuracy_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_NonQuantitativeAttributeAccuracy_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_NonQuantitativeAttributeAccuracy_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_NonQuantitativeAttributeAccuracy_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_NonQuantitativeAttributeAccuracy_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DQ_NonQuantitativeAttributeAccuracy", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DQ_NonQuantitativeAttributeAccuracy)?
        /// </para>
        /// </summary>
        public DQ_NonQuantitativeAttributeAccuracy_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DQ_NonQuantitativeAttributeAccuracy)?
        /// </para>
        /// </summary>
        public DQ_NonQuantitativeAttributeAccuracy DQ_NonQuantitativeAttributeAccuracy
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DQ_NonQuantitativeAttributeAccuracy", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_NonQuantitativeAttributeAccuracy)(x));
            }
            set
            {
                this.SetElement(XName.Get("DQ_NonQuantitativeAttributeAccuracy", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_NonQuantitativeAttributeAccuracy_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_NonQuantitativeAttributeAccuracy_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DQ_NonQuantitativeAttributeAccuracy", "http://www.isotc211.org/2005/gmd"), typeof(DQ_NonQuantitativeAttributeAccuracy));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_NonQuantitativeAttributeAccuracy_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_NonQuantitativeAttributeAccuracy_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_ThematicClassificationCorrectness_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_ThematicClassificationCorrectness_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_ThematicAccuracy_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_ThematicClassificationCorrectness_Type(XElement xe) { return XTypedServices.ToXTypedElement<DQ_ThematicClassificationCorrectness_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_ThematicClassificationCorrectness_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("result", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public DQ_ThematicClassificationCorrectness_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_ThematicClassificationCorrectness_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_ThematicClassificationCorrectness_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("result", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Result_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_ThematicClassificationCorrectness_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_ThematicClassificationCorrectness_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DQ_ThematicClassificationCorrectness)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_ThematicClassificationCorrectness_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_ThematicClassificationCorrectness_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_ThematicClassificationCorrectness_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_ThematicClassificationCorrectness_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_ThematicClassificationCorrectness_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DQ_ThematicClassificationCorrectness", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DQ_ThematicClassificationCorrectness)?
        /// </para>
        /// </summary>
        public DQ_ThematicClassificationCorrectness_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DQ_ThematicClassificationCorrectness)?
        /// </para>
        /// </summary>
        public DQ_ThematicClassificationCorrectness DQ_ThematicClassificationCorrectness
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DQ_ThematicClassificationCorrectness", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_ThematicClassificationCorrectness)(x));
            }
            set
            {
                this.SetElement(XName.Get("DQ_ThematicClassificationCorrectness", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_ThematicClassificationCorrectness_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_ThematicClassificationCorrectness_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DQ_ThematicClassificationCorrectness", "http://www.isotc211.org/2005/gmd"), typeof(DQ_ThematicClassificationCorrectness));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_ThematicClassificationCorrectness_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_ThematicClassificationCorrectness_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_RelativeInternalPositionalAccuracy_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_RelativeInternalPositionalAccuracy_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_PositionalAccuracy_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_RelativeInternalPositionalAccuracy_Type(XElement xe) { return XTypedServices.ToXTypedElement<DQ_RelativeInternalPositionalAccuracy_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_RelativeInternalPositionalAccuracy_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("result", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public DQ_RelativeInternalPositionalAccuracy_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_RelativeInternalPositionalAccuracy_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_RelativeInternalPositionalAccuracy_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("result", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Result_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_RelativeInternalPositionalAccuracy_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_RelativeInternalPositionalAccuracy_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DQ_RelativeInternalPositionalAccuracy)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_RelativeInternalPositionalAccuracy_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_RelativeInternalPositionalAccuracy_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_RelativeInternalPositionalAccuracy_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_RelativeInternalPositionalAccuracy_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_RelativeInternalPositionalAccuracy_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DQ_RelativeInternalPositionalAccuracy", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DQ_RelativeInternalPositionalAccuracy)?
        /// </para>
        /// </summary>
        public DQ_RelativeInternalPositionalAccuracy_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DQ_RelativeInternalPositionalAccuracy)?
        /// </para>
        /// </summary>
        public DQ_RelativeInternalPositionalAccuracy DQ_RelativeInternalPositionalAccuracy
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DQ_RelativeInternalPositionalAccuracy", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_RelativeInternalPositionalAccuracy)(x));
            }
            set
            {
                this.SetElement(XName.Get("DQ_RelativeInternalPositionalAccuracy", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_RelativeInternalPositionalAccuracy_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_RelativeInternalPositionalAccuracy_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DQ_RelativeInternalPositionalAccuracy", "http://www.isotc211.org/2005/gmd"), typeof(DQ_RelativeInternalPositionalAccuracy));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_RelativeInternalPositionalAccuracy_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_RelativeInternalPositionalAccuracy_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_GriddedDataPositionalAccuracy_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_GriddedDataPositionalAccuracy_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_PositionalAccuracy_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_GriddedDataPositionalAccuracy_Type(XElement xe) { return XTypedServices.ToXTypedElement<DQ_GriddedDataPositionalAccuracy_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_GriddedDataPositionalAccuracy_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("result", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public DQ_GriddedDataPositionalAccuracy_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_GriddedDataPositionalAccuracy_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_GriddedDataPositionalAccuracy_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("result", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Result_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_GriddedDataPositionalAccuracy_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_GriddedDataPositionalAccuracy_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DQ_GriddedDataPositionalAccuracy)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_GriddedDataPositionalAccuracy_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_GriddedDataPositionalAccuracy_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_GriddedDataPositionalAccuracy_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_GriddedDataPositionalAccuracy_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_GriddedDataPositionalAccuracy_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DQ_GriddedDataPositionalAccuracy", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DQ_GriddedDataPositionalAccuracy)?
        /// </para>
        /// </summary>
        public DQ_GriddedDataPositionalAccuracy_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DQ_GriddedDataPositionalAccuracy)?
        /// </para>
        /// </summary>
        public DQ_GriddedDataPositionalAccuracy DQ_GriddedDataPositionalAccuracy
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DQ_GriddedDataPositionalAccuracy", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_GriddedDataPositionalAccuracy)(x));
            }
            set
            {
                this.SetElement(XName.Get("DQ_GriddedDataPositionalAccuracy", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_GriddedDataPositionalAccuracy_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_GriddedDataPositionalAccuracy_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DQ_GriddedDataPositionalAccuracy", "http://www.isotc211.org/2005/gmd"), typeof(DQ_GriddedDataPositionalAccuracy));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_GriddedDataPositionalAccuracy_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_GriddedDataPositionalAccuracy_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_AbsoluteExternalPositionalAccuracy_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_AbsoluteExternalPositionalAccuracy_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_PositionalAccuracy_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_AbsoluteExternalPositionalAccuracy_Type(XElement xe) { return XTypedServices.ToXTypedElement<DQ_AbsoluteExternalPositionalAccuracy_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_AbsoluteExternalPositionalAccuracy_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("result", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public DQ_AbsoluteExternalPositionalAccuracy_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_AbsoluteExternalPositionalAccuracy_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_AbsoluteExternalPositionalAccuracy_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("result", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Result_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_AbsoluteExternalPositionalAccuracy_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_AbsoluteExternalPositionalAccuracy_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DQ_AbsoluteExternalPositionalAccuracy)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_AbsoluteExternalPositionalAccuracy_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_AbsoluteExternalPositionalAccuracy_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_AbsoluteExternalPositionalAccuracy_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_AbsoluteExternalPositionalAccuracy_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_AbsoluteExternalPositionalAccuracy_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DQ_AbsoluteExternalPositionalAccuracy", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DQ_AbsoluteExternalPositionalAccuracy)?
        /// </para>
        /// </summary>
        public DQ_AbsoluteExternalPositionalAccuracy_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DQ_AbsoluteExternalPositionalAccuracy)?
        /// </para>
        /// </summary>
        public DQ_AbsoluteExternalPositionalAccuracy DQ_AbsoluteExternalPositionalAccuracy
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DQ_AbsoluteExternalPositionalAccuracy", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_AbsoluteExternalPositionalAccuracy)(x));
            }
            set
            {
                this.SetElement(XName.Get("DQ_AbsoluteExternalPositionalAccuracy", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_AbsoluteExternalPositionalAccuracy_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_AbsoluteExternalPositionalAccuracy_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DQ_AbsoluteExternalPositionalAccuracy", "http://www.isotc211.org/2005/gmd"), typeof(DQ_AbsoluteExternalPositionalAccuracy));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_AbsoluteExternalPositionalAccuracy_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_AbsoluteExternalPositionalAccuracy_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_TopologicalConsistency_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_TopologicalConsistency_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_LogicalConsistency_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_TopologicalConsistency_Type(XElement xe) { return XTypedServices.ToXTypedElement<DQ_TopologicalConsistency_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_TopologicalConsistency_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("result", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public DQ_TopologicalConsistency_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_TopologicalConsistency_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_TopologicalConsistency_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("result", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Result_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_TopologicalConsistency_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_TopologicalConsistency_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DQ_TopologicalConsistency)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_TopologicalConsistency_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_TopologicalConsistency_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_TopologicalConsistency_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_TopologicalConsistency_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_TopologicalConsistency_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DQ_TopologicalConsistency", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DQ_TopologicalConsistency)?
        /// </para>
        /// </summary>
        public DQ_TopologicalConsistency_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DQ_TopologicalConsistency)?
        /// </para>
        /// </summary>
        public DQ_TopologicalConsistency DQ_TopologicalConsistency
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DQ_TopologicalConsistency", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_TopologicalConsistency)(x));
            }
            set
            {
                this.SetElement(XName.Get("DQ_TopologicalConsistency", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_TopologicalConsistency_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_TopologicalConsistency_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DQ_TopologicalConsistency", "http://www.isotc211.org/2005/gmd"), typeof(DQ_TopologicalConsistency));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_TopologicalConsistency_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_TopologicalConsistency_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_FormatConsistency_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_FormatConsistency_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_LogicalConsistency_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_FormatConsistency_Type(XElement xe) { return XTypedServices.ToXTypedElement<DQ_FormatConsistency_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_FormatConsistency_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("result", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public DQ_FormatConsistency_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_FormatConsistency_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_FormatConsistency_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("result", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Result_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_FormatConsistency_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_FormatConsistency_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DQ_FormatConsistency)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_FormatConsistency_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_FormatConsistency_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_FormatConsistency_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_FormatConsistency_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_FormatConsistency_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DQ_FormatConsistency", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DQ_FormatConsistency)?
        /// </para>
        /// </summary>
        public DQ_FormatConsistency_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DQ_FormatConsistency)?
        /// </para>
        /// </summary>
        public DQ_FormatConsistency DQ_FormatConsistency
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DQ_FormatConsistency", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_FormatConsistency)(x));
            }
            set
            {
                this.SetElement(XName.Get("DQ_FormatConsistency", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_FormatConsistency_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_FormatConsistency_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DQ_FormatConsistency", "http://www.isotc211.org/2005/gmd"), typeof(DQ_FormatConsistency));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_FormatConsistency_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_FormatConsistency_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_DomainConsistency_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_DomainConsistency_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_LogicalConsistency_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_DomainConsistency_Type(XElement xe) { return XTypedServices.ToXTypedElement<DQ_DomainConsistency_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_DomainConsistency_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("result", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public DQ_DomainConsistency_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_DomainConsistency_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_DomainConsistency_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("result", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Result_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_DomainConsistency_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_DomainConsistency_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DQ_DomainConsistency)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_DomainConsistency_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_DomainConsistency_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_DomainConsistency_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_DomainConsistency_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_DomainConsistency_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DQ_DomainConsistency", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DQ_DomainConsistency)?
        /// </para>
        /// </summary>
        public DQ_DomainConsistency_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DQ_DomainConsistency)?
        /// </para>
        /// </summary>
        public DQ_DomainConsistency DQ_DomainConsistency
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DQ_DomainConsistency", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_DomainConsistency)(x));
            }
            set
            {
                this.SetElement(XName.Get("DQ_DomainConsistency", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_DomainConsistency_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_DomainConsistency_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DQ_DomainConsistency", "http://www.isotc211.org/2005/gmd"), typeof(DQ_DomainConsistency));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_DomainConsistency_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_DomainConsistency_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_ConceptualConsistency_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_ConceptualConsistency_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_LogicalConsistency_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_ConceptualConsistency_Type(XElement xe) { return XTypedServices.ToXTypedElement<DQ_ConceptualConsistency_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_ConceptualConsistency_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("result", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public DQ_ConceptualConsistency_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_ConceptualConsistency_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_ConceptualConsistency_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("result", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Result_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_ConceptualConsistency_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_ConceptualConsistency_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DQ_ConceptualConsistency)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_ConceptualConsistency_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_ConceptualConsistency_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_ConceptualConsistency_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_ConceptualConsistency_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_ConceptualConsistency_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DQ_ConceptualConsistency", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DQ_ConceptualConsistency)?
        /// </para>
        /// </summary>
        public DQ_ConceptualConsistency_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DQ_ConceptualConsistency)?
        /// </para>
        /// </summary>
        public DQ_ConceptualConsistency DQ_ConceptualConsistency
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DQ_ConceptualConsistency", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_ConceptualConsistency)(x));
            }
            set
            {
                this.SetElement(XName.Get("DQ_ConceptualConsistency", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_ConceptualConsistency_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_ConceptualConsistency_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DQ_ConceptualConsistency", "http://www.isotc211.org/2005/gmd"), typeof(DQ_ConceptualConsistency));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_ConceptualConsistency_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_ConceptualConsistency_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_CompletenessOmission_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_CompletenessOmission_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_Completeness_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_CompletenessOmission_Type(XElement xe) { return XTypedServices.ToXTypedElement<DQ_CompletenessOmission_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_CompletenessOmission_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("result", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public DQ_CompletenessOmission_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_CompletenessOmission_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_CompletenessOmission_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("result", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Result_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_CompletenessOmission_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_CompletenessOmission_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DQ_CompletenessOmission)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_CompletenessOmission_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_CompletenessOmission_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_CompletenessOmission_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_CompletenessOmission_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_CompletenessOmission_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DQ_CompletenessOmission", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DQ_CompletenessOmission)?
        /// </para>
        /// </summary>
        public DQ_CompletenessOmission_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DQ_CompletenessOmission)?
        /// </para>
        /// </summary>
        public DQ_CompletenessOmission DQ_CompletenessOmission
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DQ_CompletenessOmission", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_CompletenessOmission)(x));
            }
            set
            {
                this.SetElement(XName.Get("DQ_CompletenessOmission", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_CompletenessOmission_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_CompletenessOmission_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DQ_CompletenessOmission", "http://www.isotc211.org/2005/gmd"), typeof(DQ_CompletenessOmission));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_CompletenessOmission_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_CompletenessOmission_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_CompletenessCommission_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_CompletenessCommission_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_Completeness_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_CompletenessCommission_Type(XElement xe) { return XTypedServices.ToXTypedElement<DQ_CompletenessCommission_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_CompletenessCommission_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("result", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public DQ_CompletenessCommission_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_CompletenessCommission_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_CompletenessCommission_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("result", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Result_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_CompletenessCommission_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_CompletenessCommission_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DQ_CompletenessCommission)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_CompletenessCommission_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_CompletenessCommission_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_CompletenessCommission_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_CompletenessCommission_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_CompletenessCommission_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DQ_CompletenessCommission", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DQ_CompletenessCommission)?
        /// </para>
        /// </summary>
        public DQ_CompletenessCommission_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DQ_CompletenessCommission)?
        /// </para>
        /// </summary>
        public DQ_CompletenessCommission DQ_CompletenessCommission
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DQ_CompletenessCommission", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_CompletenessCommission)(x));
            }
            set
            {
                this.SetElement(XName.Get("DQ_CompletenessCommission", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_CompletenessCommission_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_CompletenessCommission_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DQ_CompletenessCommission", "http://www.isotc211.org/2005/gmd"), typeof(DQ_CompletenessCommission));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_CompletenessCommission_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_CompletenessCommission_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("AbstractDQ_TemporalAccuracy_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractDQ_TemporalAccuracy_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_Element_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator AbstractDQ_TemporalAccuracy_Type(XElement xe) { return (AbstractDQ_TemporalAccuracy_Type)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static AbstractDQ_TemporalAccuracy_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("result", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public AbstractDQ_TemporalAccuracy_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractDQ_TemporalAccuracy_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("result", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Result_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName AbstractDQ_TemporalAccuracy_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("AbstractDQ_TemporalAccuracy_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (AbstractDQ_TemporalAccuracy)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_TemporalAccuracy_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_TemporalAccuracy_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_TemporalAccuracy_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_TemporalAccuracy_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_TemporalAccuracy_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("AbstractDQ_TemporalAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_TemporalValidity", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_TemporalConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_AccuracyOfATimeMeasurement", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (AbstractDQ_TemporalAccuracy)?
        /// </para>
        /// </summary>
        public DQ_TemporalAccuracy_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: AbstractDQ_TemporalAccuracy, DQ_TemporalValidity, DQ_TemporalConsistency, DQ_AccuracyOfATimeMeasurement
        /// </para>
        /// <para>
        /// Regular expression: (AbstractDQ_TemporalAccuracy)?
        /// </para>
        /// </summary>
        public AbstractDQ_TemporalAccuracy AbstractDQ_TemporalAccuracy
        {
            get
            {
                XTypedElement x=XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("AbstractDQ_TemporalAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_TemporalValidity", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_TemporalConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_AccuracyOfATimeMeasurement", "http://www.isotc211.org/2005/gmd"));
                return ((AbstractDQ_TemporalAccuracy)(x));
            }
            set
            {
                this.SetElement(XName.Get("AbstractDQ_TemporalAccuracy", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_TemporalAccuracy_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_TemporalAccuracy_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("AbstractDQ_TemporalAccuracy", "http://www.isotc211.org/2005/gmd"), typeof(AbstractDQ_TemporalAccuracy));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_TemporalAccuracy_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_TemporalAccuracy_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("AbstractDQ_ThematicAccuracy_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractDQ_ThematicAccuracy_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_Element_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator AbstractDQ_ThematicAccuracy_Type(XElement xe) { return (AbstractDQ_ThematicAccuracy_Type)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static AbstractDQ_ThematicAccuracy_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("result", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public AbstractDQ_ThematicAccuracy_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractDQ_ThematicAccuracy_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("result", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Result_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName AbstractDQ_ThematicAccuracy_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("AbstractDQ_ThematicAccuracy_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (AbstractDQ_ThematicAccuracy)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_ThematicAccuracy_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_ThematicAccuracy_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_ThematicAccuracy_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_ThematicAccuracy_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_ThematicAccuracy_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("AbstractDQ_ThematicAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_QuantitativeAttributeAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_NonQuantitativeAttributeAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_ThematicClassificationCorrectness", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (AbstractDQ_ThematicAccuracy)?
        /// </para>
        /// </summary>
        public DQ_ThematicAccuracy_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: AbstractDQ_ThematicAccuracy, DQ_QuantitativeAttributeAccuracy, DQ_NonQuantitativeAttributeAccuracy, DQ_ThematicClassificationCorrectness
        /// </para>
        /// <para>
        /// Regular expression: (AbstractDQ_ThematicAccuracy)?
        /// </para>
        /// </summary>
        public AbstractDQ_ThematicAccuracy AbstractDQ_ThematicAccuracy
        {
            get
            {
                XTypedElement x=XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("AbstractDQ_ThematicAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_QuantitativeAttributeAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_NonQuantitativeAttributeAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_ThematicClassificationCorrectness", "http://www.isotc211.org/2005/gmd"));
                return ((AbstractDQ_ThematicAccuracy)(x));
            }
            set
            {
                this.SetElement(XName.Get("AbstractDQ_ThematicAccuracy", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_ThematicAccuracy_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_ThematicAccuracy_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("AbstractDQ_ThematicAccuracy", "http://www.isotc211.org/2005/gmd"), typeof(AbstractDQ_ThematicAccuracy));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_ThematicAccuracy_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_ThematicAccuracy_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("AbstractDQ_PositionalAccuracy_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractDQ_PositionalAccuracy_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_Element_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator AbstractDQ_PositionalAccuracy_Type(XElement xe) { return (AbstractDQ_PositionalAccuracy_Type)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static AbstractDQ_PositionalAccuracy_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("result", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public AbstractDQ_PositionalAccuracy_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractDQ_PositionalAccuracy_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("result", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Result_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName AbstractDQ_PositionalAccuracy_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("AbstractDQ_PositionalAccuracy_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (AbstractDQ_PositionalAccuracy)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_PositionalAccuracy_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_PositionalAccuracy_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_PositionalAccuracy_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_PositionalAccuracy_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_PositionalAccuracy_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("AbstractDQ_PositionalAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_RelativeInternalPositionalAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_GriddedDataPositionalAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_AbsoluteExternalPositionalAccuracy", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (AbstractDQ_PositionalAccuracy)?
        /// </para>
        /// </summary>
        public DQ_PositionalAccuracy_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: AbstractDQ_PositionalAccuracy, DQ_RelativeInternalPositionalAccuracy, DQ_GriddedDataPositionalAccuracy, DQ_AbsoluteExternalPositionalAccuracy
        /// </para>
        /// <para>
        /// Regular expression: (AbstractDQ_PositionalAccuracy)?
        /// </para>
        /// </summary>
        public AbstractDQ_PositionalAccuracy AbstractDQ_PositionalAccuracy
        {
            get
            {
                XTypedElement x=XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("AbstractDQ_PositionalAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_RelativeInternalPositionalAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_GriddedDataPositionalAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_AbsoluteExternalPositionalAccuracy", "http://www.isotc211.org/2005/gmd"));
                return ((AbstractDQ_PositionalAccuracy)(x));
            }
            set
            {
                this.SetElement(XName.Get("AbstractDQ_PositionalAccuracy", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_PositionalAccuracy_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_PositionalAccuracy_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("AbstractDQ_PositionalAccuracy", "http://www.isotc211.org/2005/gmd"), typeof(AbstractDQ_PositionalAccuracy));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_PositionalAccuracy_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_PositionalAccuracy_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("AbstractDQ_LogicalConsistency_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractDQ_LogicalConsistency_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_Element_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator AbstractDQ_LogicalConsistency_Type(XElement xe) { return (AbstractDQ_LogicalConsistency_Type)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static AbstractDQ_LogicalConsistency_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("result", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public AbstractDQ_LogicalConsistency_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractDQ_LogicalConsistency_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("result", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Result_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName AbstractDQ_LogicalConsistency_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("AbstractDQ_LogicalConsistency_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (AbstractDQ_LogicalConsistency)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_LogicalConsistency_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_LogicalConsistency_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_LogicalConsistency_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_LogicalConsistency_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_LogicalConsistency_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("AbstractDQ_LogicalConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_TopologicalConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_FormatConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_DomainConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_ConceptualConsistency", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (AbstractDQ_LogicalConsistency)?
        /// </para>
        /// </summary>
        public DQ_LogicalConsistency_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: AbstractDQ_LogicalConsistency, DQ_TopologicalConsistency, DQ_FormatConsistency, DQ_DomainConsistency, DQ_ConceptualConsistency
        /// </para>
        /// <para>
        /// Regular expression: (AbstractDQ_LogicalConsistency)?
        /// </para>
        /// </summary>
        public AbstractDQ_LogicalConsistency AbstractDQ_LogicalConsistency
        {
            get
            {
                XTypedElement x=XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("AbstractDQ_LogicalConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_TopologicalConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_FormatConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_DomainConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_ConceptualConsistency", "http://www.isotc211.org/2005/gmd"));
                return ((AbstractDQ_LogicalConsistency)(x));
            }
            set
            {
                this.SetElement(XName.Get("AbstractDQ_LogicalConsistency", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_LogicalConsistency_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_LogicalConsistency_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("AbstractDQ_LogicalConsistency", "http://www.isotc211.org/2005/gmd"), typeof(AbstractDQ_LogicalConsistency));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_LogicalConsistency_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_LogicalConsistency_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("AbstractDQ_Completeness_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractDQ_Completeness_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_Element_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator AbstractDQ_Completeness_Type(XElement xe) { return (AbstractDQ_Completeness_Type)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static AbstractDQ_Completeness_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("result", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public AbstractDQ_Completeness_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractDQ_Completeness_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("result", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Result_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName AbstractDQ_Completeness_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("AbstractDQ_Completeness_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (AbstractDQ_Completeness)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_Completeness_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_Completeness_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_Completeness_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_Completeness_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_Completeness_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("AbstractDQ_Completeness", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_CompletenessOmission", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_CompletenessCommission", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (AbstractDQ_Completeness)?
        /// </para>
        /// </summary>
        public DQ_Completeness_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: AbstractDQ_Completeness, DQ_CompletenessOmission, DQ_CompletenessCommission
        /// </para>
        /// <para>
        /// Regular expression: (AbstractDQ_Completeness)?
        /// </para>
        /// </summary>
        public AbstractDQ_Completeness AbstractDQ_Completeness
        {
            get
            {
                XTypedElement x=XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("AbstractDQ_Completeness", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_CompletenessOmission", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_CompletenessCommission", "http://www.isotc211.org/2005/gmd"));
                return ((AbstractDQ_Completeness)(x));
            }
            set
            {
                this.SetElement(XName.Get("AbstractDQ_Completeness", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_Completeness_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_Completeness_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("AbstractDQ_Completeness", "http://www.isotc211.org/2005/gmd"), typeof(AbstractDQ_Completeness));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_Completeness_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_Completeness_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("AbstractDQ_Element_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractDQ_Element_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> nameOfMeasureField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType> dateTimeField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<DQ_Result_PropertyType> resultField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator AbstractDQ_Element_Type(XElement xe) { return (AbstractDQ_Element_Type)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static AbstractDQ_Element_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("result", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public AbstractDQ_Element_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> nameOfMeasure
        {
            get
            {
                if ((this.nameOfMeasureField==null))
                {
                    this.nameOfMeasureField=new XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"));
                }
                return this.nameOfMeasureField;
            }
            set
            {
                if ((value==null))
                {
                    this.nameOfMeasureField=null;
                } else
                {
                    if ((this.nameOfMeasureField==null))
                    {
                        this.nameOfMeasureField=XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this.nameOfMeasureField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public MD_Identifier_PropertyType measureIdentification
        {
            get
            {
                XElement x=this.GetElement(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"));
                return ((MD_Identifier_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType measureDescription
        {
            get
            {
                XElement x=this.GetElement(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public DQ_EvaluationMethodTypeCode_PropertyType evaluationMethodType
        {
            get
            {
                XElement x=this.GetElement(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_EvaluationMethodTypeCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType evaluationMethodDescription
        {
            get
            {
                XElement x=this.GetElement(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public CI_Citation_PropertyType evaluationProcedure
        {
            get
            {
                XElement x=this.GetElement(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"));
                return ((CI_Citation_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType> dateTime
        {
            get
            {
                if ((this.dateTimeField==null))
                {
                    this.dateTimeField=new XTypedList<GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"));
                }
                return this.dateTimeField;
            }
            set
            {
                if ((value==null))
                {
                    this.dateTimeField=null;
                } else
                {
                    if ((this.dateTimeField==null))
                    {
                        this.dateTimeField=XTypedList<GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType>(this.dateTimeField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public IList<DQ_Result_PropertyType> result
        {
            get
            {
                if ((this.resultField==null))
                {
                    this.resultField=new XTypedList<DQ_Result_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("result", "http://www.isotc211.org/2005/gmd"));
                }
                return this.resultField;
            }
            set
            {
                if ((value==null))
                {
                    this.resultField=null;
                } else
                {
                    if ((this.resultField==null))
                    {
                        this.resultField=XTypedList<DQ_Result_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("result", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<DQ_Result_PropertyType>(this.resultField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractDQ_Element_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("nameOfMeasure", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("measureIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("measureDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodType", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationMethodDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("evaluationProcedure", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("dateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("result", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Result_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName AbstractDQ_Element_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("AbstractDQ_Element_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (AbstractDQ_Element)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_Element_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_Element_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_Element_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_Element_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_Element_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("AbstractDQ_Element", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_TemporalValidity", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_TemporalConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_AccuracyOfATimeMeasurement", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_QuantitativeAttributeAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_NonQuantitativeAttributeAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_ThematicClassificationCorrectness", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_RelativeInternalPositionalAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_GriddedDataPositionalAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_AbsoluteExternalPositionalAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_TopologicalConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_FormatConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_DomainConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_ConceptualConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_CompletenessOmission", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_CompletenessCommission", "http://www.isotc211.org/2005/gmd"), XName.Get("AbstractDQ_TemporalAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("AbstractDQ_ThematicAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("AbstractDQ_PositionalAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("AbstractDQ_LogicalConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("AbstractDQ_Completeness", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (AbstractDQ_Element)?
        /// </para>
        /// </summary>
        public DQ_Element_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: AbstractDQ_Element, DQ_TemporalValidity, DQ_TemporalConsistency, DQ_AccuracyOfATimeMeasurement, DQ_QuantitativeAttributeAccuracy, DQ_NonQuantitativeAttributeAccuracy, DQ_ThematicClassificationCorrectness, DQ_RelativeInternalPositionalAccuracy, DQ_GriddedDataPositionalAccuracy, DQ_AbsoluteExternalPositionalAccuracy, DQ_TopologicalConsistency, DQ_FormatConsistency, DQ_DomainConsistency, DQ_ConceptualConsistency, DQ_CompletenessOmission, DQ_CompletenessCommission, AbstractDQ_TemporalAccuracy, AbstractDQ_ThematicAccuracy, AbstractDQ_PositionalAccuracy, AbstractDQ_LogicalConsistency, AbstractDQ_Completeness
        /// </para>
        /// <para>
        /// Regular expression: (AbstractDQ_Element)?
        /// </para>
        /// </summary>
        public AbstractDQ_Element AbstractDQ_Element
        {
            get
            {
                XTypedElement x=XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("AbstractDQ_Element", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_TemporalValidity", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_TemporalConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_AccuracyOfATimeMeasurement", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_QuantitativeAttributeAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_NonQuantitativeAttributeAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_ThematicClassificationCorrectness", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_RelativeInternalPositionalAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_GriddedDataPositionalAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_AbsoluteExternalPositionalAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_TopologicalConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_FormatConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_DomainConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_ConceptualConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_CompletenessOmission", "http://www.isotc211.org/2005/gmd"), XName.Get("DQ_CompletenessCommission", "http://www.isotc211.org/2005/gmd"), XName.Get("AbstractDQ_TemporalAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("AbstractDQ_ThematicAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("AbstractDQ_PositionalAccuracy", "http://www.isotc211.org/2005/gmd"), XName.Get("AbstractDQ_LogicalConsistency", "http://www.isotc211.org/2005/gmd"), XName.Get("AbstractDQ_Completeness", "http://www.isotc211.org/2005/gmd"));
                return ((AbstractDQ_Element)(x));
            }
            set
            {
                this.SetElement(XName.Get("AbstractDQ_Element", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_Element_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_Element_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("AbstractDQ_Element", "http://www.isotc211.org/2005/gmd"), typeof(AbstractDQ_Element));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_Element_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_Element_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (scope, report*, lineage?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_DataQuality_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_DataQuality_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<DQ_Element_PropertyType> reportField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_DataQuality_Type(XElement xe) { return XTypedServices.ToXTypedElement<DQ_DataQuality_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_DataQuality_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("scope", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("report", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("lineage", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (scope, report*, lineage?)
        /// </para>
        /// </summary>
        public DQ_DataQuality_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (scope, report*, lineage?)
        /// </para>
        /// </summary>
        public DQ_Scope_PropertyType scope
        {
            get
            {
                XElement x=this.GetElement(XName.Get("scope", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_Scope_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("scope", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (scope, report*, lineage?)
        /// </para>
        /// </summary>
        public IList<DQ_Element_PropertyType> report
        {
            get
            {
                if ((this.reportField==null))
                {
                    this.reportField=new XTypedList<DQ_Element_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("report", "http://www.isotc211.org/2005/gmd"));
                }
                return this.reportField;
            }
            set
            {
                if ((value==null))
                {
                    this.reportField=null;
                } else
                {
                    if ((this.reportField==null))
                    {
                        this.reportField=XTypedList<DQ_Element_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("report", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<DQ_Element_PropertyType>(this.reportField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (scope, report*, lineage?)
        /// </para>
        /// </summary>
        public LI_Lineage_PropertyType lineage
        {
            get
            {
                XElement x=this.GetElement(XName.Get("lineage", "http://www.isotc211.org/2005/gmd"));
                return ((LI_Lineage_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("lineage", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_DataQuality_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_DataQuality_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("scope", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Scope_PropertyType));
            localElementDictionary.Add(XName.Get("report", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Element_PropertyType));
            localElementDictionary.Add(XName.Get("lineage", "http://www.isotc211.org/2005/gmd"), typeof(LI_Lineage_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_DataQuality_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_DataQuality_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DQ_DataQuality)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_DataQuality_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_DataQuality_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_DataQuality_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_DataQuality_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_DataQuality_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DQ_DataQuality", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DQ_DataQuality)?
        /// </para>
        /// </summary>
        public DQ_DataQuality_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DQ_DataQuality)?
        /// </para>
        /// </summary>
        public DQ_DataQuality DQ_DataQuality
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DQ_DataQuality", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_DataQuality)(x));
            }
            set
            {
                this.SetElement(XName.Get("DQ_DataQuality", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_DataQuality_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_DataQuality_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DQ_DataQuality", "http://www.isotc211.org/2005/gmd"), typeof(DQ_DataQuality));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_DataQuality_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_DataQuality_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (level, extent?, levelDescription*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_Scope_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_Scope_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_ScopeDescription_PropertyType> levelDescriptionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_Scope_Type(XElement xe) { return XTypedServices.ToXTypedElement<DQ_Scope_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_Scope_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("level", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("extent", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("levelDescription", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (level, extent?, levelDescription*)
        /// </para>
        /// </summary>
        public DQ_Scope_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (level, extent?, levelDescription*)
        /// </para>
        /// </summary>
        public MD_ScopeCode_PropertyType level
        {
            get
            {
                XElement x=this.GetElement(XName.Get("level", "http://www.isotc211.org/2005/gmd"));
                return ((MD_ScopeCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("level", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (level, extent?, levelDescription*)
        /// </para>
        /// </summary>
        public EX_Extent_PropertyType extent
        {
            get
            {
                XElement x=this.GetElement(XName.Get("extent", "http://www.isotc211.org/2005/gmd"));
                return ((EX_Extent_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("extent", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (level, extent?, levelDescription*)
        /// </para>
        /// </summary>
        public IList<MD_ScopeDescription_PropertyType> levelDescription
        {
            get
            {
                if ((this.levelDescriptionField==null))
                {
                    this.levelDescriptionField=new XTypedList<MD_ScopeDescription_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("levelDescription", "http://www.isotc211.org/2005/gmd"));
                }
                return this.levelDescriptionField;
            }
            set
            {
                if ((value==null))
                {
                    this.levelDescriptionField=null;
                } else
                {
                    if ((this.levelDescriptionField==null))
                    {
                        this.levelDescriptionField=XTypedList<MD_ScopeDescription_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("levelDescription", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_ScopeDescription_PropertyType>(this.levelDescriptionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_Scope_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_Scope_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("level", "http://www.isotc211.org/2005/gmd"), typeof(MD_ScopeCode_PropertyType));
            localElementDictionary.Add(XName.Get("extent", "http://www.isotc211.org/2005/gmd"), typeof(EX_Extent_PropertyType));
            localElementDictionary.Add(XName.Get("levelDescription", "http://www.isotc211.org/2005/gmd"), typeof(MD_ScopeDescription_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_Scope_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_Scope_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DQ_Scope)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_Scope_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_Scope_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_Scope_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_Scope_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_Scope_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DQ_Scope", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DQ_Scope)?
        /// </para>
        /// </summary>
        public DQ_Scope_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DQ_Scope)?
        /// </para>
        /// </summary>
        public DQ_Scope DQ_Scope
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DQ_Scope", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_Scope)(x));
            }
            set
            {
                this.SetElement(XName.Get("DQ_Scope", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_Scope_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_Scope_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DQ_Scope", "http://www.isotc211.org/2005/gmd"), typeof(DQ_Scope));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_Scope_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_Scope_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DQ_EvaluationMethodTypeCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_EvaluationMethodTypeCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_EvaluationMethodTypeCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DQ_EvaluationMethodTypeCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DQ_EvaluationMethodTypeCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DQ_EvaluationMethodTypeCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DQ_EvaluationMethodTypeCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DQ_EvaluationMethodTypeCode)?
        /// </para>
        /// </summary>
        public DQ_EvaluationMethodTypeCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DQ_EvaluationMethodTypeCode)?
        /// </para>
        /// </summary>
        public DQ_EvaluationMethodTypeCode DQ_EvaluationMethodTypeCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DQ_EvaluationMethodTypeCode", "http://www.isotc211.org/2005/gmd"));
                return ((DQ_EvaluationMethodTypeCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("DQ_EvaluationMethodTypeCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_EvaluationMethodTypeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DQ_EvaluationMethodTypeCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DQ_EvaluationMethodTypeCode", "http://www.isotc211.org/2005/gmd"), typeof(DQ_EvaluationMethodTypeCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DQ_EvaluationMethodTypeCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DQ_EvaluationMethodTypeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Restrictions on the access and use of a dataset or metadata
    /// </para>
    /// <para>
    /// Regular expression: (useLimitation*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Constraints_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Constraints_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> useLimitationField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Constraints_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_Constraints_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Constraints_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("useLimitation", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Restrictions on the access and use of a dataset or metadata
        /// </para>
        /// <para>
        /// Regular expression: (useLimitation*)
        /// </para>
        /// </summary>
        public MD_Constraints_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (useLimitation*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> useLimitation
        {
            get
            {
                if ((this.useLimitationField==null))
                {
                    this.useLimitationField=new XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("useLimitation", "http://www.isotc211.org/2005/gmd"));
                }
                return this.useLimitationField;
            }
            set
            {
                if ((value==null))
                {
                    this.useLimitationField=null;
                } else
                {
                    if ((this.useLimitationField==null))
                    {
                        this.useLimitationField=XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("useLimitation", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this.useLimitationField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Constraints_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Constraints_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("useLimitation", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Constraints_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Constraints_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_Constraints)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Constraints_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Constraints_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Constraints_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_Constraints_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Constraints_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("MD_Constraints", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_LegalConstraints", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_SecurityConstraints", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_Constraints)?
        /// </para>
        /// </summary>
        public MD_Constraints_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: MD_Constraints, MD_LegalConstraints, MD_SecurityConstraints
        /// </para>
        /// <para>
        /// Regular expression: (MD_Constraints)?
        /// </para>
        /// </summary>
        public MD_Constraints MD_Constraints
        {
            get
            {
                XTypedElement x=XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("MD_Constraints", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_LegalConstraints", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_SecurityConstraints", "http://www.isotc211.org/2005/gmd"));
                return ((MD_Constraints)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_Constraints", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Constraints_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Constraints_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_Constraints", "http://www.isotc211.org/2005/gmd"), typeof(MD_Constraints));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Constraints_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Constraints_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Restrictions and legal prerequisites for accessing and using the dataset.
    /// </para>
    /// <para>
    /// Regular expression: (useLimitation*, accessConstraints*, useConstraints*, otherConstraints*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_LegalConstraints_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_LegalConstraints_Type: global::GeoSik.Iso.Ts19139.Gmd.MD_Constraints_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_RestrictionCode_PropertyType> accessConstraintsField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_RestrictionCode_PropertyType> useConstraintsField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> otherConstraintsField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_LegalConstraints_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_LegalConstraints_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_LegalConstraints_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("useLimitation", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("accessConstraints", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("useConstraints", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("otherConstraints", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Restrictions and legal prerequisites for accessing and using the dataset.
        /// </para>
        /// <para>
        /// Regular expression: (useLimitation*, accessConstraints*, useConstraints*, otherConstraints*)
        /// </para>
        /// </summary>
        public MD_LegalConstraints_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (useLimitation*, accessConstraints*, useConstraints*, otherConstraints*)
        /// </para>
        /// </summary>
        public IList<MD_RestrictionCode_PropertyType> accessConstraints
        {
            get
            {
                if ((this.accessConstraintsField==null))
                {
                    this.accessConstraintsField=new XTypedList<MD_RestrictionCode_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("accessConstraints", "http://www.isotc211.org/2005/gmd"));
                }
                return this.accessConstraintsField;
            }
            set
            {
                if ((value==null))
                {
                    this.accessConstraintsField=null;
                } else
                {
                    if ((this.accessConstraintsField==null))
                    {
                        this.accessConstraintsField=XTypedList<MD_RestrictionCode_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("accessConstraints", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_RestrictionCode_PropertyType>(this.accessConstraintsField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (useLimitation*, accessConstraints*, useConstraints*, otherConstraints*)
        /// </para>
        /// </summary>
        public IList<MD_RestrictionCode_PropertyType> useConstraints
        {
            get
            {
                if ((this.useConstraintsField==null))
                {
                    this.useConstraintsField=new XTypedList<MD_RestrictionCode_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("useConstraints", "http://www.isotc211.org/2005/gmd"));
                }
                return this.useConstraintsField;
            }
            set
            {
                if ((value==null))
                {
                    this.useConstraintsField=null;
                } else
                {
                    if ((this.useConstraintsField==null))
                    {
                        this.useConstraintsField=XTypedList<MD_RestrictionCode_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("useConstraints", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_RestrictionCode_PropertyType>(this.useConstraintsField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (useLimitation*, accessConstraints*, useConstraints*, otherConstraints*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> otherConstraints
        {
            get
            {
                if ((this.otherConstraintsField==null))
                {
                    this.otherConstraintsField=new XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("otherConstraints", "http://www.isotc211.org/2005/gmd"));
                }
                return this.otherConstraintsField;
            }
            set
            {
                if ((value==null))
                {
                    this.otherConstraintsField=null;
                } else
                {
                    if ((this.otherConstraintsField==null))
                    {
                        this.otherConstraintsField=XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("otherConstraints", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this.otherConstraintsField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_LegalConstraints_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_LegalConstraints_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("useLimitation", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("accessConstraints", "http://www.isotc211.org/2005/gmd"), typeof(MD_RestrictionCode_PropertyType));
            localElementDictionary.Add(XName.Get("useConstraints", "http://www.isotc211.org/2005/gmd"), typeof(MD_RestrictionCode_PropertyType));
            localElementDictionary.Add(XName.Get("otherConstraints", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_LegalConstraints_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_LegalConstraints_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_LegalConstraints)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_LegalConstraints_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_LegalConstraints_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_LegalConstraints_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_LegalConstraints_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_LegalConstraints_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_LegalConstraints", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_LegalConstraints)?
        /// </para>
        /// </summary>
        public MD_LegalConstraints_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_LegalConstraints)?
        /// </para>
        /// </summary>
        public MD_LegalConstraints MD_LegalConstraints
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_LegalConstraints", "http://www.isotc211.org/2005/gmd"));
                return ((MD_LegalConstraints)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_LegalConstraints", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_LegalConstraints_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_LegalConstraints_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_LegalConstraints", "http://www.isotc211.org/2005/gmd"), typeof(MD_LegalConstraints));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_LegalConstraints_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_LegalConstraints_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Handling restrictions imposed on the dataset because of national security, privacy, or other concerns
    /// </para>
    /// <para>
    /// Regular expression: (useLimitation*, classification, userNote?, classificationSystem?, handlingDescription?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_SecurityConstraints_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_SecurityConstraints_Type: global::GeoSik.Iso.Ts19139.Gmd.MD_Constraints_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_SecurityConstraints_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_SecurityConstraints_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_SecurityConstraints_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("useLimitation", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("classification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("userNote", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("classificationSystem", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("handlingDescription", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Handling restrictions imposed on the dataset because of national security, privacy, or other concerns
        /// </para>
        /// <para>
        /// Regular expression: (useLimitation*, classification, userNote?, classificationSystem?, handlingDescription?)
        /// </para>
        /// </summary>
        public MD_SecurityConstraints_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (useLimitation*, classification, userNote?, classificationSystem?, handlingDescription?)
        /// </para>
        /// </summary>
        public MD_ClassificationCode_PropertyType classification
        {
            get
            {
                XElement x=this.GetElement(XName.Get("classification", "http://www.isotc211.org/2005/gmd"));
                return ((MD_ClassificationCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("classification", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (useLimitation*, classification, userNote?, classificationSystem?, handlingDescription?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType userNote
        {
            get
            {
                XElement x=this.GetElement(XName.Get("userNote", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("userNote", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (useLimitation*, classification, userNote?, classificationSystem?, handlingDescription?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType classificationSystem
        {
            get
            {
                XElement x=this.GetElement(XName.Get("classificationSystem", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("classificationSystem", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (useLimitation*, classification, userNote?, classificationSystem?, handlingDescription?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType handlingDescription
        {
            get
            {
                XElement x=this.GetElement(XName.Get("handlingDescription", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("handlingDescription", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_SecurityConstraints_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_SecurityConstraints_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("useLimitation", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("classification", "http://www.isotc211.org/2005/gmd"), typeof(MD_ClassificationCode_PropertyType));
            localElementDictionary.Add(XName.Get("userNote", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("classificationSystem", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("handlingDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_SecurityConstraints_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_SecurityConstraints_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_SecurityConstraints)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_SecurityConstraints_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_SecurityConstraints_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_SecurityConstraints_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_SecurityConstraints_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_SecurityConstraints_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_SecurityConstraints", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_SecurityConstraints)?
        /// </para>
        /// </summary>
        public MD_SecurityConstraints_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_SecurityConstraints)?
        /// </para>
        /// </summary>
        public MD_SecurityConstraints MD_SecurityConstraints
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_SecurityConstraints", "http://www.isotc211.org/2005/gmd"));
                return ((MD_SecurityConstraints)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_SecurityConstraints", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_SecurityConstraints_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_SecurityConstraints_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_SecurityConstraints", "http://www.isotc211.org/2005/gmd"), typeof(MD_SecurityConstraints));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_SecurityConstraints_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_SecurityConstraints_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_ClassificationCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ClassificationCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ClassificationCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_ClassificationCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_ClassificationCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_ClassificationCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_ClassificationCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_ClassificationCode)?
        /// </para>
        /// </summary>
        public MD_ClassificationCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_ClassificationCode)?
        /// </para>
        /// </summary>
        public MD_ClassificationCode MD_ClassificationCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_ClassificationCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_ClassificationCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_ClassificationCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ClassificationCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_ClassificationCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_ClassificationCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_ClassificationCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_ClassificationCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_ClassificationCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_RestrictionCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_RestrictionCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_RestrictionCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_RestrictionCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_RestrictionCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_RestrictionCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_RestrictionCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_RestrictionCode)?
        /// </para>
        /// </summary>
        public MD_RestrictionCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_RestrictionCode)?
        /// </para>
        /// </summary>
        public MD_RestrictionCode MD_RestrictionCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_RestrictionCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_RestrictionCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_RestrictionCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_RestrictionCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_RestrictionCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_RestrictionCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_RestrictionCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_RestrictionCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_RestrictionCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Information about the media on which the data can be distributed
    /// </para>
    /// <para>
    /// Regular expression: (name?, density*, densityUnits?, volumes?, mediumFormat*, mediumNote?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Medium_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Medium_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.Real_PropertyType> densityField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_MediumFormatCode_PropertyType> mediumFormatField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Medium_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_Medium_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Medium_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("name", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("density", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("densityUnits", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("volumes", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("mediumFormat", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("mediumNote", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Information about the media on which the data can be distributed
        /// </para>
        /// <para>
        /// Regular expression: (name?, density*, densityUnits?, volumes?, mediumFormat*, mediumNote?)
        /// </para>
        /// </summary>
        public MD_Medium_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name?, density*, densityUnits?, volumes?, mediumFormat*, mediumNote?)
        /// </para>
        /// </summary>
        public MD_MediumNameCode_PropertyType name
        {
            get
            {
                XElement x=this.GetElement(XName.Get("name", "http://www.isotc211.org/2005/gmd"));
                return ((MD_MediumNameCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("name", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name?, density*, densityUnits?, volumes?, mediumFormat*, mediumNote?)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.Real_PropertyType> density
        {
            get
            {
                if ((this.densityField==null))
                {
                    this.densityField=new XTypedList<GeoSik.Iso.Ts19139.Gco.Real_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("density", "http://www.isotc211.org/2005/gmd"));
                }
                return this.densityField;
            }
            set
            {
                if ((value==null))
                {
                    this.densityField=null;
                } else
                {
                    if ((this.densityField==null))
                    {
                        this.densityField=XTypedList<GeoSik.Iso.Ts19139.Gco.Real_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("density", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.Real_PropertyType>(this.densityField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name?, density*, densityUnits?, volumes?, mediumFormat*, mediumNote?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType densityUnits
        {
            get
            {
                XElement x=this.GetElement(XName.Get("densityUnits", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("densityUnits", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name?, density*, densityUnits?, volumes?, mediumFormat*, mediumNote?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Integer_PropertyType volumes
        {
            get
            {
                XElement x=this.GetElement(XName.Get("volumes", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Integer_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("volumes", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name?, density*, densityUnits?, volumes?, mediumFormat*, mediumNote?)
        /// </para>
        /// </summary>
        public IList<MD_MediumFormatCode_PropertyType> mediumFormat
        {
            get
            {
                if ((this.mediumFormatField==null))
                {
                    this.mediumFormatField=new XTypedList<MD_MediumFormatCode_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("mediumFormat", "http://www.isotc211.org/2005/gmd"));
                }
                return this.mediumFormatField;
            }
            set
            {
                if ((value==null))
                {
                    this.mediumFormatField=null;
                } else
                {
                    if ((this.mediumFormatField==null))
                    {
                        this.mediumFormatField=XTypedList<MD_MediumFormatCode_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("mediumFormat", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_MediumFormatCode_PropertyType>(this.mediumFormatField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name?, density*, densityUnits?, volumes?, mediumFormat*, mediumNote?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType mediumNote
        {
            get
            {
                XElement x=this.GetElement(XName.Get("mediumNote", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("mediumNote", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Medium_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Medium_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("name", "http://www.isotc211.org/2005/gmd"), typeof(MD_MediumNameCode_PropertyType));
            localElementDictionary.Add(XName.Get("density", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Real_PropertyType));
            localElementDictionary.Add(XName.Get("densityUnits", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("volumes", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Integer_PropertyType));
            localElementDictionary.Add(XName.Get("mediumFormat", "http://www.isotc211.org/2005/gmd"), typeof(MD_MediumFormatCode_PropertyType));
            localElementDictionary.Add(XName.Get("mediumNote", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Medium_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Medium_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_Medium)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Medium_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Medium_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Medium_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_Medium_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Medium_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_Medium", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_Medium)?
        /// </para>
        /// </summary>
        public MD_Medium_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_Medium)?
        /// </para>
        /// </summary>
        public MD_Medium MD_Medium
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_Medium", "http://www.isotc211.org/2005/gmd"));
                return ((MD_Medium)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_Medium", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Medium_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Medium_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_Medium", "http://www.isotc211.org/2005/gmd"), typeof(MD_Medium));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Medium_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Medium_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Technical means and media by which a dataset is obtained from the distributor
    /// </para>
    /// <para>
    /// Regular expression: (unitsOfDistribution?, transferSize?, onLine*, offLine?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_DigitalTransferOptions_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_DigitalTransferOptions_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CI_OnlineResource_PropertyType> onLineField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_DigitalTransferOptions_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_DigitalTransferOptions_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_DigitalTransferOptions_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("unitsOfDistribution", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("transferSize", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("onLine", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("offLine", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Technical means and media by which a dataset is obtained from the distributor
        /// </para>
        /// <para>
        /// Regular expression: (unitsOfDistribution?, transferSize?, onLine*, offLine?)
        /// </para>
        /// </summary>
        public MD_DigitalTransferOptions_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (unitsOfDistribution?, transferSize?, onLine*, offLine?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType unitsOfDistribution
        {
            get
            {
                XElement x=this.GetElement(XName.Get("unitsOfDistribution", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("unitsOfDistribution", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (unitsOfDistribution?, transferSize?, onLine*, offLine?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType transferSize
        {
            get
            {
                XElement x=this.GetElement(XName.Get("transferSize", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Real_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("transferSize", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (unitsOfDistribution?, transferSize?, onLine*, offLine?)
        /// </para>
        /// </summary>
        public IList<CI_OnlineResource_PropertyType> onLine
        {
            get
            {
                if ((this.onLineField==null))
                {
                    this.onLineField=new XTypedList<CI_OnlineResource_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("onLine", "http://www.isotc211.org/2005/gmd"));
                }
                return this.onLineField;
            }
            set
            {
                if ((value==null))
                {
                    this.onLineField=null;
                } else
                {
                    if ((this.onLineField==null))
                    {
                        this.onLineField=XTypedList<CI_OnlineResource_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("onLine", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<CI_OnlineResource_PropertyType>(this.onLineField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (unitsOfDistribution?, transferSize?, onLine*, offLine?)
        /// </para>
        /// </summary>
        public MD_Medium_PropertyType offLine
        {
            get
            {
                XElement x=this.GetElement(XName.Get("offLine", "http://www.isotc211.org/2005/gmd"));
                return ((MD_Medium_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("offLine", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_DigitalTransferOptions_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_DigitalTransferOptions_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("unitsOfDistribution", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("transferSize", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Real_PropertyType));
            localElementDictionary.Add(XName.Get("onLine", "http://www.isotc211.org/2005/gmd"), typeof(CI_OnlineResource_PropertyType));
            localElementDictionary.Add(XName.Get("offLine", "http://www.isotc211.org/2005/gmd"), typeof(MD_Medium_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_DigitalTransferOptions_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_DigitalTransferOptions_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_DigitalTransferOptions)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_DigitalTransferOptions_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_DigitalTransferOptions_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_DigitalTransferOptions_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_DigitalTransferOptions_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_DigitalTransferOptions_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_DigitalTransferOptions", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_DigitalTransferOptions)?
        /// </para>
        /// </summary>
        public MD_DigitalTransferOptions_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_DigitalTransferOptions)?
        /// </para>
        /// </summary>
        public MD_DigitalTransferOptions MD_DigitalTransferOptions
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_DigitalTransferOptions", "http://www.isotc211.org/2005/gmd"));
                return ((MD_DigitalTransferOptions)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_DigitalTransferOptions", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_DigitalTransferOptions_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_DigitalTransferOptions_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_DigitalTransferOptions", "http://www.isotc211.org/2005/gmd"), typeof(MD_DigitalTransferOptions));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_DigitalTransferOptions_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_DigitalTransferOptions_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Common ways in which the dataset may be obtained or received, and related instructions and fee information
    /// </para>
    /// <para>
    /// Regular expression: (fees?, plannedAvailableDateTime?, orderingInstructions?, turnaround?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_StandardOrderProcess_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_StandardOrderProcess_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_StandardOrderProcess_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_StandardOrderProcess_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_StandardOrderProcess_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("fees", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("plannedAvailableDateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("orderingInstructions", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("turnaround", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Common ways in which the dataset may be obtained or received, and related instructions and fee information
        /// </para>
        /// <para>
        /// Regular expression: (fees?, plannedAvailableDateTime?, orderingInstructions?, turnaround?)
        /// </para>
        /// </summary>
        public MD_StandardOrderProcess_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fees?, plannedAvailableDateTime?, orderingInstructions?, turnaround?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType fees
        {
            get
            {
                XElement x=this.GetElement(XName.Get("fees", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("fees", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fees?, plannedAvailableDateTime?, orderingInstructions?, turnaround?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType plannedAvailableDateTime
        {
            get
            {
                XElement x=this.GetElement(XName.Get("plannedAvailableDateTime", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("plannedAvailableDateTime", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fees?, plannedAvailableDateTime?, orderingInstructions?, turnaround?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType orderingInstructions
        {
            get
            {
                XElement x=this.GetElement(XName.Get("orderingInstructions", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("orderingInstructions", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fees?, plannedAvailableDateTime?, orderingInstructions?, turnaround?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType turnaround
        {
            get
            {
                XElement x=this.GetElement(XName.Get("turnaround", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("turnaround", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_StandardOrderProcess_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_StandardOrderProcess_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("fees", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("plannedAvailableDateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("orderingInstructions", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("turnaround", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_StandardOrderProcess_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_StandardOrderProcess_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_StandardOrderProcess)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_StandardOrderProcess_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_StandardOrderProcess_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_StandardOrderProcess_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_StandardOrderProcess_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_StandardOrderProcess_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_StandardOrderProcess", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_StandardOrderProcess)?
        /// </para>
        /// </summary>
        public MD_StandardOrderProcess_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_StandardOrderProcess)?
        /// </para>
        /// </summary>
        public MD_StandardOrderProcess MD_StandardOrderProcess
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_StandardOrderProcess", "http://www.isotc211.org/2005/gmd"));
                return ((MD_StandardOrderProcess)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_StandardOrderProcess", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_StandardOrderProcess_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_StandardOrderProcess_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_StandardOrderProcess", "http://www.isotc211.org/2005/gmd"), typeof(MD_StandardOrderProcess));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_StandardOrderProcess_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_StandardOrderProcess_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Information about the distributor
    /// </para>
    /// <para>
    /// Regular expression: (distributorContact, distributionOrderProcess*, distributorFormat*, distributorTransferOptions*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Distributor_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Distributor_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_StandardOrderProcess_PropertyType> distributionOrderProcessField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_Format_PropertyType> distributorFormatField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_DigitalTransferOptions_PropertyType> distributorTransferOptionsField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Distributor_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_Distributor_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Distributor_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("distributorContact", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("distributionOrderProcess", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("distributorFormat", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("distributorTransferOptions", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Information about the distributor
        /// </para>
        /// <para>
        /// Regular expression: (distributorContact, distributionOrderProcess*, distributorFormat*, distributorTransferOptions*)
        /// </para>
        /// </summary>
        public MD_Distributor_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (distributorContact, distributionOrderProcess*, distributorFormat*, distributorTransferOptions*)
        /// </para>
        /// </summary>
        public CI_ResponsibleParty_PropertyType distributorContact
        {
            get
            {
                XElement x=this.GetElement(XName.Get("distributorContact", "http://www.isotc211.org/2005/gmd"));
                return ((CI_ResponsibleParty_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("distributorContact", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (distributorContact, distributionOrderProcess*, distributorFormat*, distributorTransferOptions*)
        /// </para>
        /// </summary>
        public IList<MD_StandardOrderProcess_PropertyType> distributionOrderProcess
        {
            get
            {
                if ((this.distributionOrderProcessField==null))
                {
                    this.distributionOrderProcessField=new XTypedList<MD_StandardOrderProcess_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("distributionOrderProcess", "http://www.isotc211.org/2005/gmd"));
                }
                return this.distributionOrderProcessField;
            }
            set
            {
                if ((value==null))
                {
                    this.distributionOrderProcessField=null;
                } else
                {
                    if ((this.distributionOrderProcessField==null))
                    {
                        this.distributionOrderProcessField=XTypedList<MD_StandardOrderProcess_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("distributionOrderProcess", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_StandardOrderProcess_PropertyType>(this.distributionOrderProcessField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (distributorContact, distributionOrderProcess*, distributorFormat*, distributorTransferOptions*)
        /// </para>
        /// </summary>
        public IList<MD_Format_PropertyType> distributorFormat
        {
            get
            {
                if ((this.distributorFormatField==null))
                {
                    this.distributorFormatField=new XTypedList<MD_Format_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("distributorFormat", "http://www.isotc211.org/2005/gmd"));
                }
                return this.distributorFormatField;
            }
            set
            {
                if ((value==null))
                {
                    this.distributorFormatField=null;
                } else
                {
                    if ((this.distributorFormatField==null))
                    {
                        this.distributorFormatField=XTypedList<MD_Format_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("distributorFormat", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_Format_PropertyType>(this.distributorFormatField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (distributorContact, distributionOrderProcess*, distributorFormat*, distributorTransferOptions*)
        /// </para>
        /// </summary>
        public IList<MD_DigitalTransferOptions_PropertyType> distributorTransferOptions
        {
            get
            {
                if ((this.distributorTransferOptionsField==null))
                {
                    this.distributorTransferOptionsField=new XTypedList<MD_DigitalTransferOptions_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("distributorTransferOptions", "http://www.isotc211.org/2005/gmd"));
                }
                return this.distributorTransferOptionsField;
            }
            set
            {
                if ((value==null))
                {
                    this.distributorTransferOptionsField=null;
                } else
                {
                    if ((this.distributorTransferOptionsField==null))
                    {
                        this.distributorTransferOptionsField=XTypedList<MD_DigitalTransferOptions_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("distributorTransferOptions", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_DigitalTransferOptions_PropertyType>(this.distributorTransferOptionsField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Distributor_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Distributor_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("distributorContact", "http://www.isotc211.org/2005/gmd"), typeof(CI_ResponsibleParty_PropertyType));
            localElementDictionary.Add(XName.Get("distributionOrderProcess", "http://www.isotc211.org/2005/gmd"), typeof(MD_StandardOrderProcess_PropertyType));
            localElementDictionary.Add(XName.Get("distributorFormat", "http://www.isotc211.org/2005/gmd"), typeof(MD_Format_PropertyType));
            localElementDictionary.Add(XName.Get("distributorTransferOptions", "http://www.isotc211.org/2005/gmd"), typeof(MD_DigitalTransferOptions_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Distributor_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Distributor_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_Distributor)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Distributor_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Distributor_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Distributor_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_Distributor_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Distributor_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_Distributor", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_Distributor)?
        /// </para>
        /// </summary>
        public MD_Distributor_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_Distributor)?
        /// </para>
        /// </summary>
        public MD_Distributor MD_Distributor
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_Distributor", "http://www.isotc211.org/2005/gmd"));
                return ((MD_Distributor)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_Distributor", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Distributor_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Distributor_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_Distributor", "http://www.isotc211.org/2005/gmd"), typeof(MD_Distributor));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Distributor_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Distributor_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Information about the distributor of and options for obtaining the dataset
    /// </para>
    /// <para>
    /// Regular expression: (distributionFormat*, distributor*, transferOptions*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Distribution_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Distribution_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_Format_PropertyType> distributionFormatField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_Distributor_PropertyType> distributorField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_DigitalTransferOptions_PropertyType> transferOptionsField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Distribution_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_Distribution_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Distribution_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("distributionFormat", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("distributor", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("transferOptions", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Information about the distributor of and options for obtaining the dataset
        /// </para>
        /// <para>
        /// Regular expression: (distributionFormat*, distributor*, transferOptions*)
        /// </para>
        /// </summary>
        public MD_Distribution_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (distributionFormat*, distributor*, transferOptions*)
        /// </para>
        /// </summary>
        public IList<MD_Format_PropertyType> distributionFormat
        {
            get
            {
                if ((this.distributionFormatField==null))
                {
                    this.distributionFormatField=new XTypedList<MD_Format_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("distributionFormat", "http://www.isotc211.org/2005/gmd"));
                }
                return this.distributionFormatField;
            }
            set
            {
                if ((value==null))
                {
                    this.distributionFormatField=null;
                } else
                {
                    if ((this.distributionFormatField==null))
                    {
                        this.distributionFormatField=XTypedList<MD_Format_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("distributionFormat", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_Format_PropertyType>(this.distributionFormatField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (distributionFormat*, distributor*, transferOptions*)
        /// </para>
        /// </summary>
        public IList<MD_Distributor_PropertyType> distributor
        {
            get
            {
                if ((this.distributorField==null))
                {
                    this.distributorField=new XTypedList<MD_Distributor_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("distributor", "http://www.isotc211.org/2005/gmd"));
                }
                return this.distributorField;
            }
            set
            {
                if ((value==null))
                {
                    this.distributorField=null;
                } else
                {
                    if ((this.distributorField==null))
                    {
                        this.distributorField=XTypedList<MD_Distributor_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("distributor", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_Distributor_PropertyType>(this.distributorField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (distributionFormat*, distributor*, transferOptions*)
        /// </para>
        /// </summary>
        public IList<MD_DigitalTransferOptions_PropertyType> transferOptions
        {
            get
            {
                if ((this.transferOptionsField==null))
                {
                    this.transferOptionsField=new XTypedList<MD_DigitalTransferOptions_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("transferOptions", "http://www.isotc211.org/2005/gmd"));
                }
                return this.transferOptionsField;
            }
            set
            {
                if ((value==null))
                {
                    this.transferOptionsField=null;
                } else
                {
                    if ((this.transferOptionsField==null))
                    {
                        this.transferOptionsField=XTypedList<MD_DigitalTransferOptions_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("transferOptions", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_DigitalTransferOptions_PropertyType>(this.transferOptionsField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Distribution_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Distribution_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("distributionFormat", "http://www.isotc211.org/2005/gmd"), typeof(MD_Format_PropertyType));
            localElementDictionary.Add(XName.Get("distributor", "http://www.isotc211.org/2005/gmd"), typeof(MD_Distributor_PropertyType));
            localElementDictionary.Add(XName.Get("transferOptions", "http://www.isotc211.org/2005/gmd"), typeof(MD_DigitalTransferOptions_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Distribution_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Distribution_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_Distribution)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Distribution_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Distribution_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Distribution_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_Distribution_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Distribution_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_Distribution", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_Distribution)?
        /// </para>
        /// </summary>
        public MD_Distribution_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_Distribution)?
        /// </para>
        /// </summary>
        public MD_Distribution MD_Distribution
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_Distribution", "http://www.isotc211.org/2005/gmd"));
                return ((MD_Distribution)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_Distribution", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Distribution_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Distribution_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_Distribution", "http://www.isotc211.org/2005/gmd"), typeof(MD_Distribution));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Distribution_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Distribution_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Description of the form of the data to be distributed
    /// </para>
    /// <para>
    /// Regular expression: (name, version, amendmentNumber?, specification?, fileDecompressionTechnique?, formatDistributor*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Format_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Format_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_Distributor_PropertyType> formatDistributorField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Format_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_Format_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Format_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("name", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("version", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("amendmentNumber", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("specification", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("fileDecompressionTechnique", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("formatDistributor", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Description of the form of the data to be distributed
        /// </para>
        /// <para>
        /// Regular expression: (name, version, amendmentNumber?, specification?, fileDecompressionTechnique?, formatDistributor*)
        /// </para>
        /// </summary>
        public MD_Format_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, version, amendmentNumber?, specification?, fileDecompressionTechnique?, formatDistributor*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType name
        {
            get
            {
                XElement x=this.GetElement(XName.Get("name", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("name", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, version, amendmentNumber?, specification?, fileDecompressionTechnique?, formatDistributor*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType version
        {
            get
            {
                XElement x=this.GetElement(XName.Get("version", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("version", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, version, amendmentNumber?, specification?, fileDecompressionTechnique?, formatDistributor*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType amendmentNumber
        {
            get
            {
                XElement x=this.GetElement(XName.Get("amendmentNumber", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("amendmentNumber", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, version, amendmentNumber?, specification?, fileDecompressionTechnique?, formatDistributor*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType specification
        {
            get
            {
                XElement x=this.GetElement(XName.Get("specification", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("specification", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, version, amendmentNumber?, specification?, fileDecompressionTechnique?, formatDistributor*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType fileDecompressionTechnique
        {
            get
            {
                XElement x=this.GetElement(XName.Get("fileDecompressionTechnique", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("fileDecompressionTechnique", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, version, amendmentNumber?, specification?, fileDecompressionTechnique?, formatDistributor*)
        /// </para>
        /// </summary>
        public IList<MD_Distributor_PropertyType> formatDistributor
        {
            get
            {
                if ((this.formatDistributorField==null))
                {
                    this.formatDistributorField=new XTypedList<MD_Distributor_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("formatDistributor", "http://www.isotc211.org/2005/gmd"));
                }
                return this.formatDistributorField;
            }
            set
            {
                if ((value==null))
                {
                    this.formatDistributorField=null;
                } else
                {
                    if ((this.formatDistributorField==null))
                    {
                        this.formatDistributorField=XTypedList<MD_Distributor_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("formatDistributor", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_Distributor_PropertyType>(this.formatDistributorField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Format_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Format_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("name", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("version", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("amendmentNumber", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("specification", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("fileDecompressionTechnique", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("formatDistributor", "http://www.isotc211.org/2005/gmd"), typeof(MD_Distributor_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Format_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Format_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_Format)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Format_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Format_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Format_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_Format_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Format_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_Format", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_Format)?
        /// </para>
        /// </summary>
        public MD_Format_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_Format)?
        /// </para>
        /// </summary>
        public MD_Format MD_Format
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_Format", "http://www.isotc211.org/2005/gmd"));
                return ((MD_Format)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_Format", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Format_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Format_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_Format", "http://www.isotc211.org/2005/gmd"), typeof(MD_Format));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Format_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Format_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_DistributionUnits)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_DistributionUnits_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_DistributionUnits_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_DistributionUnits_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_DistributionUnits_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_DistributionUnits_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_DistributionUnits", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_DistributionUnits)?
        /// </para>
        /// </summary>
        public MD_DistributionUnits_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_DistributionUnits)?
        /// </para>
        /// </summary>
        public MD_DistributionUnits MD_DistributionUnits
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_DistributionUnits", "http://www.isotc211.org/2005/gmd"));
                return ((MD_DistributionUnits)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_DistributionUnits", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_DistributionUnits_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_DistributionUnits_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_DistributionUnits", "http://www.isotc211.org/2005/gmd"), typeof(MD_DistributionUnits));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_DistributionUnits_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_DistributionUnits_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_MediumFormatCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_MediumFormatCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_MediumFormatCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_MediumFormatCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_MediumFormatCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_MediumFormatCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_MediumFormatCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_MediumFormatCode)?
        /// </para>
        /// </summary>
        public MD_MediumFormatCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_MediumFormatCode)?
        /// </para>
        /// </summary>
        public MD_MediumFormatCode MD_MediumFormatCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_MediumFormatCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_MediumFormatCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_MediumFormatCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_MediumFormatCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_MediumFormatCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_MediumFormatCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_MediumFormatCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_MediumFormatCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_MediumFormatCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_MediumNameCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_MediumNameCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_MediumNameCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_MediumNameCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_MediumNameCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_MediumNameCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_MediumNameCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_MediumNameCode)?
        /// </para>
        /// </summary>
        public MD_MediumNameCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_MediumNameCode)?
        /// </para>
        /// </summary>
        public MD_MediumNameCode MD_MediumNameCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_MediumNameCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_MediumNameCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_MediumNameCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_MediumNameCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_MediumNameCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_MediumNameCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_MediumNameCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_MediumNameCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_MediumNameCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Information about the scope and frequency of updating
    /// </para>
    /// <para>
    /// Regular expression: (maintenanceAndUpdateFrequency, dateOfNextUpdate?, userDefinedMaintenanceFrequency?, updateScope*, updateScopeDescription*, maintenanceNote*, contact*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_MaintenanceInformation_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_MaintenanceInformation_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_ScopeCode_PropertyType> updateScopeField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_ScopeDescription_PropertyType> updateScopeDescriptionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> maintenanceNoteField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CI_ResponsibleParty_PropertyType> contactField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_MaintenanceInformation_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_MaintenanceInformation_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_MaintenanceInformation_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("maintenanceAndUpdateFrequency", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateOfNextUpdate", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("userDefinedMaintenanceFrequency", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("updateScope", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("updateScopeDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("maintenanceNote", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("contact", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Information about the scope and frequency of updating
        /// </para>
        /// <para>
        /// Regular expression: (maintenanceAndUpdateFrequency, dateOfNextUpdate?, userDefinedMaintenanceFrequency?, updateScope*, updateScopeDescription*, maintenanceNote*, contact*)
        /// </para>
        /// </summary>
        public MD_MaintenanceInformation_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (maintenanceAndUpdateFrequency, dateOfNextUpdate?, userDefinedMaintenanceFrequency?, updateScope*, updateScopeDescription*, maintenanceNote*, contact*)
        /// </para>
        /// </summary>
        public MD_MaintenanceFrequencyCode_PropertyType maintenanceAndUpdateFrequency
        {
            get
            {
                XElement x=this.GetElement(XName.Get("maintenanceAndUpdateFrequency", "http://www.isotc211.org/2005/gmd"));
                return ((MD_MaintenanceFrequencyCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("maintenanceAndUpdateFrequency", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (maintenanceAndUpdateFrequency, dateOfNextUpdate?, userDefinedMaintenanceFrequency?, updateScope*, updateScopeDescription*, maintenanceNote*, contact*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Date_PropertyType dateOfNextUpdate
        {
            get
            {
                XElement x=this.GetElement(XName.Get("dateOfNextUpdate", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Date_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("dateOfNextUpdate", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (maintenanceAndUpdateFrequency, dateOfNextUpdate?, userDefinedMaintenanceFrequency?, updateScope*, updateScopeDescription*, maintenanceNote*, contact*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gts.TM_PeriodDuration_PropertyType userDefinedMaintenanceFrequency
        {
            get
            {
                XElement x=this.GetElement(XName.Get("userDefinedMaintenanceFrequency", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gts.TM_PeriodDuration_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("userDefinedMaintenanceFrequency", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (maintenanceAndUpdateFrequency, dateOfNextUpdate?, userDefinedMaintenanceFrequency?, updateScope*, updateScopeDescription*, maintenanceNote*, contact*)
        /// </para>
        /// </summary>
        public IList<MD_ScopeCode_PropertyType> updateScope
        {
            get
            {
                if ((this.updateScopeField==null))
                {
                    this.updateScopeField=new XTypedList<MD_ScopeCode_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("updateScope", "http://www.isotc211.org/2005/gmd"));
                }
                return this.updateScopeField;
            }
            set
            {
                if ((value==null))
                {
                    this.updateScopeField=null;
                } else
                {
                    if ((this.updateScopeField==null))
                    {
                        this.updateScopeField=XTypedList<MD_ScopeCode_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("updateScope", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_ScopeCode_PropertyType>(this.updateScopeField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (maintenanceAndUpdateFrequency, dateOfNextUpdate?, userDefinedMaintenanceFrequency?, updateScope*, updateScopeDescription*, maintenanceNote*, contact*)
        /// </para>
        /// </summary>
        public IList<MD_ScopeDescription_PropertyType> updateScopeDescription
        {
            get
            {
                if ((this.updateScopeDescriptionField==null))
                {
                    this.updateScopeDescriptionField=new XTypedList<MD_ScopeDescription_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("updateScopeDescription", "http://www.isotc211.org/2005/gmd"));
                }
                return this.updateScopeDescriptionField;
            }
            set
            {
                if ((value==null))
                {
                    this.updateScopeDescriptionField=null;
                } else
                {
                    if ((this.updateScopeDescriptionField==null))
                    {
                        this.updateScopeDescriptionField=XTypedList<MD_ScopeDescription_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("updateScopeDescription", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_ScopeDescription_PropertyType>(this.updateScopeDescriptionField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (maintenanceAndUpdateFrequency, dateOfNextUpdate?, userDefinedMaintenanceFrequency?, updateScope*, updateScopeDescription*, maintenanceNote*, contact*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> maintenanceNote
        {
            get
            {
                if ((this.maintenanceNoteField==null))
                {
                    this.maintenanceNoteField=new XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("maintenanceNote", "http://www.isotc211.org/2005/gmd"));
                }
                return this.maintenanceNoteField;
            }
            set
            {
                if ((value==null))
                {
                    this.maintenanceNoteField=null;
                } else
                {
                    if ((this.maintenanceNoteField==null))
                    {
                        this.maintenanceNoteField=XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("maintenanceNote", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this.maintenanceNoteField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (maintenanceAndUpdateFrequency, dateOfNextUpdate?, userDefinedMaintenanceFrequency?, updateScope*, updateScopeDescription*, maintenanceNote*, contact*)
        /// </para>
        /// </summary>
        public IList<CI_ResponsibleParty_PropertyType> contact
        {
            get
            {
                if ((this.contactField==null))
                {
                    this.contactField=new XTypedList<CI_ResponsibleParty_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("contact", "http://www.isotc211.org/2005/gmd"));
                }
                return this.contactField;
            }
            set
            {
                if ((value==null))
                {
                    this.contactField=null;
                } else
                {
                    if ((this.contactField==null))
                    {
                        this.contactField=XTypedList<CI_ResponsibleParty_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("contact", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<CI_ResponsibleParty_PropertyType>(this.contactField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_MaintenanceInformation_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_MaintenanceInformation_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("maintenanceAndUpdateFrequency", "http://www.isotc211.org/2005/gmd"), typeof(MD_MaintenanceFrequencyCode_PropertyType));
            localElementDictionary.Add(XName.Get("dateOfNextUpdate", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Date_PropertyType));
            localElementDictionary.Add(XName.Get("userDefinedMaintenanceFrequency", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gts.TM_PeriodDuration_PropertyType));
            localElementDictionary.Add(XName.Get("updateScope", "http://www.isotc211.org/2005/gmd"), typeof(MD_ScopeCode_PropertyType));
            localElementDictionary.Add(XName.Get("updateScopeDescription", "http://www.isotc211.org/2005/gmd"), typeof(MD_ScopeDescription_PropertyType));
            localElementDictionary.Add(XName.Get("maintenanceNote", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("contact", "http://www.isotc211.org/2005/gmd"), typeof(CI_ResponsibleParty_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_MaintenanceInformation_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_MaintenanceInformation_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_MaintenanceInformation)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_MaintenanceInformation_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_MaintenanceInformation_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_MaintenanceInformation_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_MaintenanceInformation_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_MaintenanceInformation_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_MaintenanceInformation", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_MaintenanceInformation)?
        /// </para>
        /// </summary>
        public MD_MaintenanceInformation_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_MaintenanceInformation)?
        /// </para>
        /// </summary>
        public MD_MaintenanceInformation MD_MaintenanceInformation
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_MaintenanceInformation", "http://www.isotc211.org/2005/gmd"));
                return ((MD_MaintenanceInformation)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_MaintenanceInformation", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_MaintenanceInformation_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_MaintenanceInformation_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_MaintenanceInformation", "http://www.isotc211.org/2005/gmd"), typeof(MD_MaintenanceInformation));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_MaintenanceInformation_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_MaintenanceInformation_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Description of the class of information covered by the information
    /// </para>
    /// <para>
    /// Regular expression: (attributes+ | features+ | featureInstances+ | attributeInstances+ | dataset | other)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ScopeDescription_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ScopeDescription_Type: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType> attributesField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType> featuresField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType> featureInstancesField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType> attributeInstancesField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_ScopeDescription_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_ScopeDescription_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_ScopeDescription_Type()
        {
            BuildElementDictionary();
            contentModel=new ChoiceContentModelEntity(new NamedContentModelEntity(XName.Get("attributes", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("features", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("featureInstances", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("attributeInstances", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dataset", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("other", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Description of the class of information covered by the information
        /// </para>
        /// <para>
        /// Regular expression: (attributes+ | features+ | featureInstances+ | attributeInstances+ | dataset | other)
        /// </para>
        /// </summary>
        public MD_ScopeDescription_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating, choice
        /// </para>
        /// <para>
        /// Regular expression: (attributes+ | features+ | featureInstances+ | attributeInstances+ | dataset | other)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType> attributes
        {
            get
            {
                if ((this.attributesField==null))
                {
                    this.attributesField=new XTypedList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("attributes", "http://www.isotc211.org/2005/gmd"));
                }
                return this.attributesField;
            }
            set
            {
                if ((value==null))
                {
                    this.attributesField=null;
                } else
                {
                    if ((this.attributesField==null))
                    {
                        this.attributesField=XTypedList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("attributes", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType>(this.attributesField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating, choice
        /// </para>
        /// <para>
        /// Regular expression: (attributes+ | features+ | featureInstances+ | attributeInstances+ | dataset | other)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType> features
        {
            get
            {
                if ((this.featuresField==null))
                {
                    this.featuresField=new XTypedList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("features", "http://www.isotc211.org/2005/gmd"));
                }
                return this.featuresField;
            }
            set
            {
                if ((value==null))
                {
                    this.featuresField=null;
                } else
                {
                    if ((this.featuresField==null))
                    {
                        this.featuresField=XTypedList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("features", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType>(this.featuresField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating, choice
        /// </para>
        /// <para>
        /// Regular expression: (attributes+ | features+ | featureInstances+ | attributeInstances+ | dataset | other)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType> featureInstances
        {
            get
            {
                if ((this.featureInstancesField==null))
                {
                    this.featureInstancesField=new XTypedList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("featureInstances", "http://www.isotc211.org/2005/gmd"));
                }
                return this.featureInstancesField;
            }
            set
            {
                if ((value==null))
                {
                    this.featureInstancesField=null;
                } else
                {
                    if ((this.featureInstancesField==null))
                    {
                        this.featureInstancesField=XTypedList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("featureInstances", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType>(this.featureInstancesField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating, choice
        /// </para>
        /// <para>
        /// Regular expression: (attributes+ | features+ | featureInstances+ | attributeInstances+ | dataset | other)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType> attributeInstances
        {
            get
            {
                if ((this.attributeInstancesField==null))
                {
                    this.attributeInstancesField=new XTypedList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("attributeInstances", "http://www.isotc211.org/2005/gmd"));
                }
                return this.attributeInstancesField;
            }
            set
            {
                if ((value==null))
                {
                    this.attributeInstancesField=null;
                } else
                {
                    if ((this.attributeInstancesField==null))
                    {
                        this.attributeInstancesField=XTypedList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("attributeInstances", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType>(this.attributeInstancesField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, choice
        /// </para>
        /// <para>
        /// Regular expression: (attributes+ | features+ | featureInstances+ | attributeInstances+ | dataset | other)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType dataset
        {
            get
            {
                XElement x=this.GetElement(XName.Get("dataset", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("dataset", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, choice
        /// </para>
        /// <para>
        /// Regular expression: (attributes+ | features+ | featureInstances+ | attributeInstances+ | dataset | other)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType other
        {
            get
            {
                XElement x=this.GetElement(XName.Get("other", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("other", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ScopeDescription_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_ScopeDescription_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("attributes", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType));
            localElementDictionary.Add(XName.Get("features", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType));
            localElementDictionary.Add(XName.Get("featureInstances", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType));
            localElementDictionary.Add(XName.Get("attributeInstances", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType));
            localElementDictionary.Add(XName.Get("dataset", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("other", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_ScopeDescription_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_ScopeDescription_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_ScopeDescription)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ScopeDescription_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ScopeDescription_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_ScopeDescription_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_ScopeDescription_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_ScopeDescription_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_ScopeDescription", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_ScopeDescription)?
        /// </para>
        /// </summary>
        public MD_ScopeDescription_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_ScopeDescription)?
        /// </para>
        /// </summary>
        public MD_ScopeDescription MD_ScopeDescription
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_ScopeDescription", "http://www.isotc211.org/2005/gmd"));
                return ((MD_ScopeDescription)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_ScopeDescription", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ScopeDescription_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_ScopeDescription_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_ScopeDescription", "http://www.isotc211.org/2005/gmd"), typeof(MD_ScopeDescription));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_ScopeDescription_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_ScopeDescription_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_MaintenanceFrequencyCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_MaintenanceFrequencyCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_MaintenanceFrequencyCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_MaintenanceFrequencyCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_MaintenanceFrequencyCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_MaintenanceFrequencyCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_MaintenanceFrequencyCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_MaintenanceFrequencyCode)?
        /// </para>
        /// </summary>
        public MD_MaintenanceFrequencyCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_MaintenanceFrequencyCode)?
        /// </para>
        /// </summary>
        public MD_MaintenanceFrequencyCode MD_MaintenanceFrequencyCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_MaintenanceFrequencyCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_MaintenanceFrequencyCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_MaintenanceFrequencyCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_MaintenanceFrequencyCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_MaintenanceFrequencyCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_MaintenanceFrequencyCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_MaintenanceFrequencyCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_MaintenanceFrequencyCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_MaintenanceFrequencyCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_ScopeCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ScopeCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ScopeCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_ScopeCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_ScopeCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_ScopeCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_ScopeCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_ScopeCode)?
        /// </para>
        /// </summary>
        public MD_ScopeCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_ScopeCode)?
        /// </para>
        /// </summary>
        public MD_ScopeCode MD_ScopeCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_ScopeCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_ScopeCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_ScopeCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ScopeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_ScopeCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_ScopeCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_ScopeCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_ScopeCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_ScopeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Basic information about data
    /// </para>
    /// <para>
    /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("AbstractMD_Identification_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractMD_Identification_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> creditField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_ProgressCode_PropertyType> statusField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CI_ResponsibleParty_PropertyType> pointOfContactField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_MaintenanceInformation_PropertyType> resourceMaintenanceField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_BrowseGraphic_PropertyType> graphicOverviewField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_Format_PropertyType> resourceFormatField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_Keywords_PropertyType> descriptiveKeywordsField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_Usage_PropertyType> resourceSpecificUsageField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_Constraints_PropertyType> resourceConstraintsField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_AggregateInformation_PropertyType> aggregationInfoField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator AbstractMD_Identification_Type(XElement xe) { return (AbstractMD_Identification_Type)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static AbstractMD_Identification_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("citation", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("abstract", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("purpose", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("credit", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("status", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("pointOfContact", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("resourceMaintenance", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("graphicOverview", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("resourceFormat", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("descriptiveKeywords", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("resourceSpecificUsage", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("resourceConstraints", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("aggregationInfo", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Basic information about data
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public AbstractMD_Identification_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public CI_Citation_PropertyType citation
        {
            get
            {
                XElement x=this.GetElement(XName.Get("citation", "http://www.isotc211.org/2005/gmd"));
                return ((CI_Citation_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("citation", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType @abstract
        {
            get
            {
                XElement x=this.GetElement(XName.Get("abstract", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("abstract", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType purpose
        {
            get
            {
                XElement x=this.GetElement(XName.Get("purpose", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("purpose", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> credit
        {
            get
            {
                if ((this.creditField==null))
                {
                    this.creditField=new XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("credit", "http://www.isotc211.org/2005/gmd"));
                }
                return this.creditField;
            }
            set
            {
                if ((value==null))
                {
                    this.creditField=null;
                } else
                {
                    if ((this.creditField==null))
                    {
                        this.creditField=XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("credit", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this.creditField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public IList<MD_ProgressCode_PropertyType> status
        {
            get
            {
                if ((this.statusField==null))
                {
                    this.statusField=new XTypedList<MD_ProgressCode_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("status", "http://www.isotc211.org/2005/gmd"));
                }
                return this.statusField;
            }
            set
            {
                if ((value==null))
                {
                    this.statusField=null;
                } else
                {
                    if ((this.statusField==null))
                    {
                        this.statusField=XTypedList<MD_ProgressCode_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("status", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_ProgressCode_PropertyType>(this.statusField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public IList<CI_ResponsibleParty_PropertyType> pointOfContact
        {
            get
            {
                if ((this.pointOfContactField==null))
                {
                    this.pointOfContactField=new XTypedList<CI_ResponsibleParty_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("pointOfContact", "http://www.isotc211.org/2005/gmd"));
                }
                return this.pointOfContactField;
            }
            set
            {
                if ((value==null))
                {
                    this.pointOfContactField=null;
                } else
                {
                    if ((this.pointOfContactField==null))
                    {
                        this.pointOfContactField=XTypedList<CI_ResponsibleParty_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("pointOfContact", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<CI_ResponsibleParty_PropertyType>(this.pointOfContactField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public IList<MD_MaintenanceInformation_PropertyType> resourceMaintenance
        {
            get
            {
                if ((this.resourceMaintenanceField==null))
                {
                    this.resourceMaintenanceField=new XTypedList<MD_MaintenanceInformation_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("resourceMaintenance", "http://www.isotc211.org/2005/gmd"));
                }
                return this.resourceMaintenanceField;
            }
            set
            {
                if ((value==null))
                {
                    this.resourceMaintenanceField=null;
                } else
                {
                    if ((this.resourceMaintenanceField==null))
                    {
                        this.resourceMaintenanceField=XTypedList<MD_MaintenanceInformation_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("resourceMaintenance", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_MaintenanceInformation_PropertyType>(this.resourceMaintenanceField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public IList<MD_BrowseGraphic_PropertyType> graphicOverview
        {
            get
            {
                if ((this.graphicOverviewField==null))
                {
                    this.graphicOverviewField=new XTypedList<MD_BrowseGraphic_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("graphicOverview", "http://www.isotc211.org/2005/gmd"));
                }
                return this.graphicOverviewField;
            }
            set
            {
                if ((value==null))
                {
                    this.graphicOverviewField=null;
                } else
                {
                    if ((this.graphicOverviewField==null))
                    {
                        this.graphicOverviewField=XTypedList<MD_BrowseGraphic_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("graphicOverview", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_BrowseGraphic_PropertyType>(this.graphicOverviewField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public IList<MD_Format_PropertyType> resourceFormat
        {
            get
            {
                if ((this.resourceFormatField==null))
                {
                    this.resourceFormatField=new XTypedList<MD_Format_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("resourceFormat", "http://www.isotc211.org/2005/gmd"));
                }
                return this.resourceFormatField;
            }
            set
            {
                if ((value==null))
                {
                    this.resourceFormatField=null;
                } else
                {
                    if ((this.resourceFormatField==null))
                    {
                        this.resourceFormatField=XTypedList<MD_Format_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("resourceFormat", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_Format_PropertyType>(this.resourceFormatField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public IList<MD_Keywords_PropertyType> descriptiveKeywords
        {
            get
            {
                if ((this.descriptiveKeywordsField==null))
                {
                    this.descriptiveKeywordsField=new XTypedList<MD_Keywords_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("descriptiveKeywords", "http://www.isotc211.org/2005/gmd"));
                }
                return this.descriptiveKeywordsField;
            }
            set
            {
                if ((value==null))
                {
                    this.descriptiveKeywordsField=null;
                } else
                {
                    if ((this.descriptiveKeywordsField==null))
                    {
                        this.descriptiveKeywordsField=XTypedList<MD_Keywords_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("descriptiveKeywords", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_Keywords_PropertyType>(this.descriptiveKeywordsField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public IList<MD_Usage_PropertyType> resourceSpecificUsage
        {
            get
            {
                if ((this.resourceSpecificUsageField==null))
                {
                    this.resourceSpecificUsageField=new XTypedList<MD_Usage_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("resourceSpecificUsage", "http://www.isotc211.org/2005/gmd"));
                }
                return this.resourceSpecificUsageField;
            }
            set
            {
                if ((value==null))
                {
                    this.resourceSpecificUsageField=null;
                } else
                {
                    if ((this.resourceSpecificUsageField==null))
                    {
                        this.resourceSpecificUsageField=XTypedList<MD_Usage_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("resourceSpecificUsage", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_Usage_PropertyType>(this.resourceSpecificUsageField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public IList<MD_Constraints_PropertyType> resourceConstraints
        {
            get
            {
                if ((this.resourceConstraintsField==null))
                {
                    this.resourceConstraintsField=new XTypedList<MD_Constraints_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("resourceConstraints", "http://www.isotc211.org/2005/gmd"));
                }
                return this.resourceConstraintsField;
            }
            set
            {
                if ((value==null))
                {
                    this.resourceConstraintsField=null;
                } else
                {
                    if ((this.resourceConstraintsField==null))
                    {
                        this.resourceConstraintsField=XTypedList<MD_Constraints_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("resourceConstraints", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_Constraints_PropertyType>(this.resourceConstraintsField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public IList<MD_AggregateInformation_PropertyType> aggregationInfo
        {
            get
            {
                if ((this.aggregationInfoField==null))
                {
                    this.aggregationInfoField=new XTypedList<MD_AggregateInformation_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("aggregationInfo", "http://www.isotc211.org/2005/gmd"));
                }
                return this.aggregationInfoField;
            }
            set
            {
                if ((value==null))
                {
                    this.aggregationInfoField=null;
                } else
                {
                    if ((this.aggregationInfoField==null))
                    {
                        this.aggregationInfoField=XTypedList<MD_AggregateInformation_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("aggregationInfo", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_AggregateInformation_PropertyType>(this.aggregationInfoField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractMD_Identification_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("citation", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("abstract", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("purpose", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("credit", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("status", "http://www.isotc211.org/2005/gmd"), typeof(MD_ProgressCode_PropertyType));
            localElementDictionary.Add(XName.Get("pointOfContact", "http://www.isotc211.org/2005/gmd"), typeof(CI_ResponsibleParty_PropertyType));
            localElementDictionary.Add(XName.Get("resourceMaintenance", "http://www.isotc211.org/2005/gmd"), typeof(MD_MaintenanceInformation_PropertyType));
            localElementDictionary.Add(XName.Get("graphicOverview", "http://www.isotc211.org/2005/gmd"), typeof(MD_BrowseGraphic_PropertyType));
            localElementDictionary.Add(XName.Get("resourceFormat", "http://www.isotc211.org/2005/gmd"), typeof(MD_Format_PropertyType));
            localElementDictionary.Add(XName.Get("descriptiveKeywords", "http://www.isotc211.org/2005/gmd"), typeof(MD_Keywords_PropertyType));
            localElementDictionary.Add(XName.Get("resourceSpecificUsage", "http://www.isotc211.org/2005/gmd"), typeof(MD_Usage_PropertyType));
            localElementDictionary.Add(XName.Get("resourceConstraints", "http://www.isotc211.org/2005/gmd"), typeof(MD_Constraints_PropertyType));
            localElementDictionary.Add(XName.Get("aggregationInfo", "http://www.isotc211.org/2005/gmd"), typeof(MD_AggregateInformation_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName AbstractMD_Identification_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("AbstractMD_Identification_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (AbstractMD_Identification)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Identification_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Identification_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Identification_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_Identification_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Identification_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("AbstractMD_Identification", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_DataIdentification", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_ServiceIdentification", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (AbstractMD_Identification)?
        /// </para>
        /// </summary>
        public MD_Identification_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: AbstractMD_Identification, MD_DataIdentification, MD_ServiceIdentification
        /// </para>
        /// <para>
        /// Regular expression: (AbstractMD_Identification)?
        /// </para>
        /// </summary>
        public AbstractMD_Identification AbstractMD_Identification
        {
            get
            {
                XTypedElement x=XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("AbstractMD_Identification", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_DataIdentification", "http://www.isotc211.org/2005/gmd"), XName.Get("MD_ServiceIdentification", "http://www.isotc211.org/2005/gmd"));
                return ((AbstractMD_Identification)(x));
            }
            set
            {
                this.SetElement(XName.Get("AbstractMD_Identification", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Identification_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Identification_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("AbstractMD_Identification", "http://www.isotc211.org/2005/gmd"), typeof(AbstractMD_Identification));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Identification_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Identification_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Graphic that provides an illustration of the dataset (should include a legend for the graphic)
    /// </para>
    /// <para>
    /// Regular expression: (fileName, fileDescription?, fileType?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_BrowseGraphic_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_BrowseGraphic_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_BrowseGraphic_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_BrowseGraphic_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_BrowseGraphic_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("fileName", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("fileDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("fileType", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Graphic that provides an illustration of the dataset (should include a legend for the graphic)
        /// </para>
        /// <para>
        /// Regular expression: (fileName, fileDescription?, fileType?)
        /// </para>
        /// </summary>
        public MD_BrowseGraphic_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (fileName, fileDescription?, fileType?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType fileName
        {
            get
            {
                XElement x=this.GetElement(XName.Get("fileName", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("fileName", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileName, fileDescription?, fileType?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType fileDescription
        {
            get
            {
                XElement x=this.GetElement(XName.Get("fileDescription", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("fileDescription", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileName, fileDescription?, fileType?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType fileType
        {
            get
            {
                XElement x=this.GetElement(XName.Get("fileType", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("fileType", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_BrowseGraphic_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_BrowseGraphic_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("fileName", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("fileDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("fileType", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_BrowseGraphic_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_BrowseGraphic_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_BrowseGraphic)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_BrowseGraphic_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_BrowseGraphic_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_BrowseGraphic_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_BrowseGraphic_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_BrowseGraphic_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_BrowseGraphic", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_BrowseGraphic)?
        /// </para>
        /// </summary>
        public MD_BrowseGraphic_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_BrowseGraphic)?
        /// </para>
        /// </summary>
        public MD_BrowseGraphic MD_BrowseGraphic
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_BrowseGraphic", "http://www.isotc211.org/2005/gmd"));
                return ((MD_BrowseGraphic)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_BrowseGraphic", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_BrowseGraphic_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_BrowseGraphic_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_BrowseGraphic", "http://www.isotc211.org/2005/gmd"), typeof(MD_BrowseGraphic));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_BrowseGraphic_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_BrowseGraphic_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*, spatialRepresentationType*, spatialResolution*, language+, characterSet*, topicCategory*, environmentDescription?, extent*, supplementalInformation?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_DataIdentification_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_DataIdentification_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractMD_Identification_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_SpatialRepresentationTypeCode_PropertyType> spatialRepresentationTypeField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_Resolution_PropertyType> spatialResolutionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> languageField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_CharacterSetCode_PropertyType> characterSetField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_TopicCategoryCode_PropertyType> topicCategoryField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<EX_Extent_PropertyType> extentField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_DataIdentification_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_DataIdentification_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_DataIdentification_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("citation", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("abstract", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("purpose", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("credit", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("status", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("pointOfContact", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("resourceMaintenance", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("graphicOverview", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("resourceFormat", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("descriptiveKeywords", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("resourceSpecificUsage", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("resourceConstraints", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("aggregationInfo", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("spatialRepresentationType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("spatialResolution", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("language", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("characterSet", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("topicCategory", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("environmentDescription", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("extent", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("supplementalInformation", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*, spatialRepresentationType*, spatialResolution*, language+, characterSet*, topicCategory*, environmentDescription?, extent*, supplementalInformation?)
        /// </para>
        /// </summary>
        public MD_DataIdentification_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*, spatialRepresentationType*, spatialResolution*, language+, characterSet*, topicCategory*, environmentDescription?, extent*, supplementalInformation?)
        /// </para>
        /// </summary>
        public IList<MD_SpatialRepresentationTypeCode_PropertyType> spatialRepresentationType
        {
            get
            {
                if ((this.spatialRepresentationTypeField==null))
                {
                    this.spatialRepresentationTypeField=new XTypedList<MD_SpatialRepresentationTypeCode_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("spatialRepresentationType", "http://www.isotc211.org/2005/gmd"));
                }
                return this.spatialRepresentationTypeField;
            }
            set
            {
                if ((value==null))
                {
                    this.spatialRepresentationTypeField=null;
                } else
                {
                    if ((this.spatialRepresentationTypeField==null))
                    {
                        this.spatialRepresentationTypeField=XTypedList<MD_SpatialRepresentationTypeCode_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("spatialRepresentationType", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_SpatialRepresentationTypeCode_PropertyType>(this.spatialRepresentationTypeField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*, spatialRepresentationType*, spatialResolution*, language+, characterSet*, topicCategory*, environmentDescription?, extent*, supplementalInformation?)
        /// </para>
        /// </summary>
        public IList<MD_Resolution_PropertyType> spatialResolution
        {
            get
            {
                if ((this.spatialResolutionField==null))
                {
                    this.spatialResolutionField=new XTypedList<MD_Resolution_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("spatialResolution", "http://www.isotc211.org/2005/gmd"));
                }
                return this.spatialResolutionField;
            }
            set
            {
                if ((value==null))
                {
                    this.spatialResolutionField=null;
                } else
                {
                    if ((this.spatialResolutionField==null))
                    {
                        this.spatialResolutionField=XTypedList<MD_Resolution_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("spatialResolution", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_Resolution_PropertyType>(this.spatialResolutionField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*, spatialRepresentationType*, spatialResolution*, language+, characterSet*, topicCategory*, environmentDescription?, extent*, supplementalInformation?)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> language
        {
            get
            {
                if ((this.languageField==null))
                {
                    this.languageField=new XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("language", "http://www.isotc211.org/2005/gmd"));
                }
                return this.languageField;
            }
            set
            {
                if ((value==null))
                {
                    this.languageField=null;
                } else
                {
                    if ((this.languageField==null))
                    {
                        this.languageField=XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("language", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this.languageField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*, spatialRepresentationType*, spatialResolution*, language+, characterSet*, topicCategory*, environmentDescription?, extent*, supplementalInformation?)
        /// </para>
        /// </summary>
        public IList<MD_CharacterSetCode_PropertyType> characterSet
        {
            get
            {
                if ((this.characterSetField==null))
                {
                    this.characterSetField=new XTypedList<MD_CharacterSetCode_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("characterSet", "http://www.isotc211.org/2005/gmd"));
                }
                return this.characterSetField;
            }
            set
            {
                if ((value==null))
                {
                    this.characterSetField=null;
                } else
                {
                    if ((this.characterSetField==null))
                    {
                        this.characterSetField=XTypedList<MD_CharacterSetCode_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("characterSet", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_CharacterSetCode_PropertyType>(this.characterSetField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*, spatialRepresentationType*, spatialResolution*, language+, characterSet*, topicCategory*, environmentDescription?, extent*, supplementalInformation?)
        /// </para>
        /// </summary>
        public IList<MD_TopicCategoryCode_PropertyType> topicCategory
        {
            get
            {
                if ((this.topicCategoryField==null))
                {
                    this.topicCategoryField=new XTypedList<MD_TopicCategoryCode_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("topicCategory", "http://www.isotc211.org/2005/gmd"));
                }
                return this.topicCategoryField;
            }
            set
            {
                if ((value==null))
                {
                    this.topicCategoryField=null;
                } else
                {
                    if ((this.topicCategoryField==null))
                    {
                        this.topicCategoryField=XTypedList<MD_TopicCategoryCode_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("topicCategory", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_TopicCategoryCode_PropertyType>(this.topicCategoryField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*, spatialRepresentationType*, spatialResolution*, language+, characterSet*, topicCategory*, environmentDescription?, extent*, supplementalInformation?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType environmentDescription
        {
            get
            {
                XElement x=this.GetElement(XName.Get("environmentDescription", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("environmentDescription", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*, spatialRepresentationType*, spatialResolution*, language+, characterSet*, topicCategory*, environmentDescription?, extent*, supplementalInformation?)
        /// </para>
        /// </summary>
        public IList<EX_Extent_PropertyType> extent
        {
            get
            {
                if ((this.extentField==null))
                {
                    this.extentField=new XTypedList<EX_Extent_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("extent", "http://www.isotc211.org/2005/gmd"));
                }
                return this.extentField;
            }
            set
            {
                if ((value==null))
                {
                    this.extentField=null;
                } else
                {
                    if ((this.extentField==null))
                    {
                        this.extentField=XTypedList<EX_Extent_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("extent", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<EX_Extent_PropertyType>(this.extentField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*, spatialRepresentationType*, spatialResolution*, language+, characterSet*, topicCategory*, environmentDescription?, extent*, supplementalInformation?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType supplementalInformation
        {
            get
            {
                XElement x=this.GetElement(XName.Get("supplementalInformation", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("supplementalInformation", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_DataIdentification_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_DataIdentification_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("citation", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("abstract", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("purpose", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("credit", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("status", "http://www.isotc211.org/2005/gmd"), typeof(MD_ProgressCode_PropertyType));
            localElementDictionary.Add(XName.Get("pointOfContact", "http://www.isotc211.org/2005/gmd"), typeof(CI_ResponsibleParty_PropertyType));
            localElementDictionary.Add(XName.Get("resourceMaintenance", "http://www.isotc211.org/2005/gmd"), typeof(MD_MaintenanceInformation_PropertyType));
            localElementDictionary.Add(XName.Get("graphicOverview", "http://www.isotc211.org/2005/gmd"), typeof(MD_BrowseGraphic_PropertyType));
            localElementDictionary.Add(XName.Get("resourceFormat", "http://www.isotc211.org/2005/gmd"), typeof(MD_Format_PropertyType));
            localElementDictionary.Add(XName.Get("descriptiveKeywords", "http://www.isotc211.org/2005/gmd"), typeof(MD_Keywords_PropertyType));
            localElementDictionary.Add(XName.Get("resourceSpecificUsage", "http://www.isotc211.org/2005/gmd"), typeof(MD_Usage_PropertyType));
            localElementDictionary.Add(XName.Get("resourceConstraints", "http://www.isotc211.org/2005/gmd"), typeof(MD_Constraints_PropertyType));
            localElementDictionary.Add(XName.Get("aggregationInfo", "http://www.isotc211.org/2005/gmd"), typeof(MD_AggregateInformation_PropertyType));
            localElementDictionary.Add(XName.Get("spatialRepresentationType", "http://www.isotc211.org/2005/gmd"), typeof(MD_SpatialRepresentationTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("spatialResolution", "http://www.isotc211.org/2005/gmd"), typeof(MD_Resolution_PropertyType));
            localElementDictionary.Add(XName.Get("language", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("characterSet", "http://www.isotc211.org/2005/gmd"), typeof(MD_CharacterSetCode_PropertyType));
            localElementDictionary.Add(XName.Get("topicCategory", "http://www.isotc211.org/2005/gmd"), typeof(MD_TopicCategoryCode_PropertyType));
            localElementDictionary.Add(XName.Get("environmentDescription", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("extent", "http://www.isotc211.org/2005/gmd"), typeof(EX_Extent_PropertyType));
            localElementDictionary.Add(XName.Get("supplementalInformation", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_DataIdentification_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_DataIdentification_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_DataIdentification)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_DataIdentification_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_DataIdentification_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_DataIdentification_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_DataIdentification_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_DataIdentification_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_DataIdentification", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_DataIdentification)?
        /// </para>
        /// </summary>
        public MD_DataIdentification_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_DataIdentification)?
        /// </para>
        /// </summary>
        public MD_DataIdentification MD_DataIdentification
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_DataIdentification", "http://www.isotc211.org/2005/gmd"));
                return ((MD_DataIdentification)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_DataIdentification", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_DataIdentification_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_DataIdentification_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_DataIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_DataIdentification));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_DataIdentification_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_DataIdentification_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// See 19119 for further info
    /// </para>
    /// <para>
    /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ServiceIdentification_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ServiceIdentification_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractMD_Identification_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_ServiceIdentification_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_ServiceIdentification_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_ServiceIdentification_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("citation", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("abstract", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("purpose", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("credit", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("status", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("pointOfContact", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("resourceMaintenance", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("graphicOverview", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("resourceFormat", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("descriptiveKeywords", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("resourceSpecificUsage", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("resourceConstraints", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("aggregationInfo", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// See 19119 for further info
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public MD_ServiceIdentification_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ServiceIdentification_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_ServiceIdentification_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("citation", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("abstract", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("purpose", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("credit", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("status", "http://www.isotc211.org/2005/gmd"), typeof(MD_ProgressCode_PropertyType));
            localElementDictionary.Add(XName.Get("pointOfContact", "http://www.isotc211.org/2005/gmd"), typeof(CI_ResponsibleParty_PropertyType));
            localElementDictionary.Add(XName.Get("resourceMaintenance", "http://www.isotc211.org/2005/gmd"), typeof(MD_MaintenanceInformation_PropertyType));
            localElementDictionary.Add(XName.Get("graphicOverview", "http://www.isotc211.org/2005/gmd"), typeof(MD_BrowseGraphic_PropertyType));
            localElementDictionary.Add(XName.Get("resourceFormat", "http://www.isotc211.org/2005/gmd"), typeof(MD_Format_PropertyType));
            localElementDictionary.Add(XName.Get("descriptiveKeywords", "http://www.isotc211.org/2005/gmd"), typeof(MD_Keywords_PropertyType));
            localElementDictionary.Add(XName.Get("resourceSpecificUsage", "http://www.isotc211.org/2005/gmd"), typeof(MD_Usage_PropertyType));
            localElementDictionary.Add(XName.Get("resourceConstraints", "http://www.isotc211.org/2005/gmd"), typeof(MD_Constraints_PropertyType));
            localElementDictionary.Add(XName.Get("aggregationInfo", "http://www.isotc211.org/2005/gmd"), typeof(MD_AggregateInformation_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_ServiceIdentification_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_ServiceIdentification_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_ServiceIdentification)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ServiceIdentification_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ServiceIdentification_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_ServiceIdentification_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_ServiceIdentification_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_ServiceIdentification_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_ServiceIdentification", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_ServiceIdentification)?
        /// </para>
        /// </summary>
        public MD_ServiceIdentification_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_ServiceIdentification)?
        /// </para>
        /// </summary>
        public MD_ServiceIdentification MD_ServiceIdentification
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_ServiceIdentification", "http://www.isotc211.org/2005/gmd"));
                return ((MD_ServiceIdentification)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_ServiceIdentification", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ServiceIdentification_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_ServiceIdentification_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_ServiceIdentification", "http://www.isotc211.org/2005/gmd"), typeof(MD_ServiceIdentification));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_ServiceIdentification_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_ServiceIdentification_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (denominator)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_RepresentativeFraction_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_RepresentativeFraction_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_RepresentativeFraction_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_RepresentativeFraction_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_RepresentativeFraction_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("denominator", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (denominator)
        /// </para>
        /// </summary>
        public MD_RepresentativeFraction_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (denominator)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Integer_PropertyType denominator
        {
            get
            {
                XElement x=this.GetElement(XName.Get("denominator", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Integer_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("denominator", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_RepresentativeFraction_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_RepresentativeFraction_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("denominator", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Integer_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_RepresentativeFraction_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_RepresentativeFraction_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_RepresentativeFraction)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_RepresentativeFraction_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_RepresentativeFraction_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_RepresentativeFraction_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_RepresentativeFraction_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_RepresentativeFraction_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_RepresentativeFraction", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_RepresentativeFraction)?
        /// </para>
        /// </summary>
        public MD_RepresentativeFraction_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_RepresentativeFraction)?
        /// </para>
        /// </summary>
        public MD_RepresentativeFraction MD_RepresentativeFraction
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_RepresentativeFraction", "http://www.isotc211.org/2005/gmd"));
                return ((MD_RepresentativeFraction)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_RepresentativeFraction", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_RepresentativeFraction_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_RepresentativeFraction_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_RepresentativeFraction", "http://www.isotc211.org/2005/gmd"), typeof(MD_RepresentativeFraction));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_RepresentativeFraction_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_RepresentativeFraction_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Brief description of ways in which the dataset is currently used.
    /// </para>
    /// <para>
    /// Regular expression: (specificUsage, usageDateTime?, userDeterminedLimitations?, userContactInfo+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Usage_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Usage_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CI_ResponsibleParty_PropertyType> userContactInfoField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Usage_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_Usage_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Usage_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("specificUsage", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("usageDateTime", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("userDeterminedLimitations", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("userContactInfo", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Brief description of ways in which the dataset is currently used.
        /// </para>
        /// <para>
        /// Regular expression: (specificUsage, usageDateTime?, userDeterminedLimitations?, userContactInfo+)
        /// </para>
        /// </summary>
        public MD_Usage_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (specificUsage, usageDateTime?, userDeterminedLimitations?, userContactInfo+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType specificUsage
        {
            get
            {
                XElement x=this.GetElement(XName.Get("specificUsage", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("specificUsage", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (specificUsage, usageDateTime?, userDeterminedLimitations?, userContactInfo+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType usageDateTime
        {
            get
            {
                XElement x=this.GetElement(XName.Get("usageDateTime", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("usageDateTime", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (specificUsage, usageDateTime?, userDeterminedLimitations?, userContactInfo+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType userDeterminedLimitations
        {
            get
            {
                XElement x=this.GetElement(XName.Get("userDeterminedLimitations", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("userDeterminedLimitations", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (specificUsage, usageDateTime?, userDeterminedLimitations?, userContactInfo+)
        /// </para>
        /// </summary>
        public IList<CI_ResponsibleParty_PropertyType> userContactInfo
        {
            get
            {
                if ((this.userContactInfoField==null))
                {
                    this.userContactInfoField=new XTypedList<CI_ResponsibleParty_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("userContactInfo", "http://www.isotc211.org/2005/gmd"));
                }
                return this.userContactInfoField;
            }
            set
            {
                if ((value==null))
                {
                    this.userContactInfoField=null;
                } else
                {
                    if ((this.userContactInfoField==null))
                    {
                        this.userContactInfoField=XTypedList<CI_ResponsibleParty_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("userContactInfo", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<CI_ResponsibleParty_PropertyType>(this.userContactInfoField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Usage_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Usage_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("specificUsage", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("usageDateTime", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType));
            localElementDictionary.Add(XName.Get("userDeterminedLimitations", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("userContactInfo", "http://www.isotc211.org/2005/gmd"), typeof(CI_ResponsibleParty_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Usage_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Usage_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_Usage)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Usage_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Usage_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Usage_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_Usage_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Usage_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_Usage", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_Usage)?
        /// </para>
        /// </summary>
        public MD_Usage_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_Usage)?
        /// </para>
        /// </summary>
        public MD_Usage MD_Usage
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_Usage", "http://www.isotc211.org/2005/gmd"));
                return ((MD_Usage)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_Usage", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Usage_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Usage_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_Usage", "http://www.isotc211.org/2005/gmd"), typeof(MD_Usage));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Usage_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Usage_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Keywords, their type and reference source
    /// </para>
    /// <para>
    /// Regular expression: (keyword+, type?, thesaurusName?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Keywords_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Keywords_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> keywordField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Keywords_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_Keywords_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Keywords_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("keyword", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("type", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("thesaurusName", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Keywords, their type and reference source
        /// </para>
        /// <para>
        /// Regular expression: (keyword+, type?, thesaurusName?)
        /// </para>
        /// </summary>
        public MD_Keywords_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (keyword+, type?, thesaurusName?)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> keyword
        {
            get
            {
                if ((this.keywordField==null))
                {
                    this.keywordField=new XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("keyword", "http://www.isotc211.org/2005/gmd"));
                }
                return this.keywordField;
            }
            set
            {
                if ((value==null))
                {
                    this.keywordField=null;
                } else
                {
                    if ((this.keywordField==null))
                    {
                        this.keywordField=XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("keyword", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this.keywordField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (keyword+, type?, thesaurusName?)
        /// </para>
        /// </summary>
        public MD_KeywordTypeCode_PropertyType type
        {
            get
            {
                XElement x=this.GetElement(XName.Get("type", "http://www.isotc211.org/2005/gmd"));
                return ((MD_KeywordTypeCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("type", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (keyword+, type?, thesaurusName?)
        /// </para>
        /// </summary>
        public CI_Citation_PropertyType thesaurusName
        {
            get
            {
                XElement x=this.GetElement(XName.Get("thesaurusName", "http://www.isotc211.org/2005/gmd"));
                return ((CI_Citation_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("thesaurusName", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Keywords_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Keywords_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("keyword", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("type", "http://www.isotc211.org/2005/gmd"), typeof(MD_KeywordTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("thesaurusName", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Keywords_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Keywords_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_Keywords)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Keywords_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Keywords_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Keywords_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_Keywords_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Keywords_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_Keywords", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_Keywords)?
        /// </para>
        /// </summary>
        public MD_Keywords_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_Keywords)?
        /// </para>
        /// </summary>
        public MD_Keywords MD_Keywords
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_Keywords", "http://www.isotc211.org/2005/gmd"));
                return ((MD_Keywords)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_Keywords", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Keywords_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Keywords_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_Keywords", "http://www.isotc211.org/2005/gmd"), typeof(MD_Keywords));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Keywords_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Keywords_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    [XmlSchemaProviderAttribute("DS_Association_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_Association_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        public static explicit operator DS_Association_Type(XElement xe) { return XTypedServices.ToXTypedElement<DS_Association_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DS_Association_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_Association_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DS_Association_Type>(this);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlQualifiedName DS_Association_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DS_Association_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DS_Association)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DS_Association_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_Association_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DS_Association_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DS_Association_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DS_Association_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DS_Association", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DS_Association)?
        /// </para>
        /// </summary>
        public DS_Association_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DS_Association)?
        /// </para>
        /// </summary>
        public DS_Association DS_Association
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DS_Association", "http://www.isotc211.org/2005/gmd"));
                return ((DS_Association)(x));
            }
            set
            {
                this.SetElement(XName.Get("DS_Association", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_Association_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DS_Association_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DS_Association", "http://www.isotc211.org/2005/gmd"), typeof(DS_Association));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DS_Association_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DS_Association_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Encapsulates the dataset aggregation information
    /// </para>
    /// <para>
    /// Regular expression: (aggregateDataSetName?, aggregateDataSetIdentifier?, associationType, initiativeType?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_AggregateInformation_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_AggregateInformation_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_AggregateInformation_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_AggregateInformation_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_AggregateInformation_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("aggregateDataSetName", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("aggregateDataSetIdentifier", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("associationType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("initiativeType", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Encapsulates the dataset aggregation information
        /// </para>
        /// <para>
        /// Regular expression: (aggregateDataSetName?, aggregateDataSetIdentifier?, associationType, initiativeType?)
        /// </para>
        /// </summary>
        public MD_AggregateInformation_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (aggregateDataSetName?, aggregateDataSetIdentifier?, associationType, initiativeType?)
        /// </para>
        /// </summary>
        public CI_Citation_PropertyType aggregateDataSetName
        {
            get
            {
                XElement x=this.GetElement(XName.Get("aggregateDataSetName", "http://www.isotc211.org/2005/gmd"));
                return ((CI_Citation_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("aggregateDataSetName", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (aggregateDataSetName?, aggregateDataSetIdentifier?, associationType, initiativeType?)
        /// </para>
        /// </summary>
        public MD_Identifier_PropertyType aggregateDataSetIdentifier
        {
            get
            {
                XElement x=this.GetElement(XName.Get("aggregateDataSetIdentifier", "http://www.isotc211.org/2005/gmd"));
                return ((MD_Identifier_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("aggregateDataSetIdentifier", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aggregateDataSetName?, aggregateDataSetIdentifier?, associationType, initiativeType?)
        /// </para>
        /// </summary>
        public DS_AssociationTypeCode_PropertyType associationType
        {
            get
            {
                XElement x=this.GetElement(XName.Get("associationType", "http://www.isotc211.org/2005/gmd"));
                return ((DS_AssociationTypeCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("associationType", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (aggregateDataSetName?, aggregateDataSetIdentifier?, associationType, initiativeType?)
        /// </para>
        /// </summary>
        public DS_InitiativeTypeCode_PropertyType initiativeType
        {
            get
            {
                XElement x=this.GetElement(XName.Get("initiativeType", "http://www.isotc211.org/2005/gmd"));
                return ((DS_InitiativeTypeCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("initiativeType", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_AggregateInformation_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_AggregateInformation_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("aggregateDataSetName", "http://www.isotc211.org/2005/gmd"), typeof(CI_Citation_PropertyType));
            localElementDictionary.Add(XName.Get("aggregateDataSetIdentifier", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identifier_PropertyType));
            localElementDictionary.Add(XName.Get("associationType", "http://www.isotc211.org/2005/gmd"), typeof(DS_AssociationTypeCode_PropertyType));
            localElementDictionary.Add(XName.Get("initiativeType", "http://www.isotc211.org/2005/gmd"), typeof(DS_InitiativeTypeCode_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_AggregateInformation_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_AggregateInformation_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_AggregateInformation)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_AggregateInformation_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_AggregateInformation_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_AggregateInformation_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_AggregateInformation_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_AggregateInformation_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_AggregateInformation", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_AggregateInformation)?
        /// </para>
        /// </summary>
        public MD_AggregateInformation_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_AggregateInformation)?
        /// </para>
        /// </summary>
        public MD_AggregateInformation MD_AggregateInformation
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_AggregateInformation", "http://www.isotc211.org/2005/gmd"));
                return ((MD_AggregateInformation)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_AggregateInformation", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_AggregateInformation_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_AggregateInformation_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_AggregateInformation", "http://www.isotc211.org/2005/gmd"), typeof(MD_AggregateInformation));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_AggregateInformation_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_AggregateInformation_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (equivalentScale | distance)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Resolution_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Resolution_Type: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Resolution_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_Resolution_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Resolution_Type()
        {
            BuildElementDictionary();
            contentModel=new ChoiceContentModelEntity(new NamedContentModelEntity(XName.Get("equivalentScale", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("distance", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (equivalentScale | distance)
        /// </para>
        /// </summary>
        public MD_Resolution_Type()
        {
        }

        public MD_Resolution_Type(MD_RepresentativeFraction_PropertyType equivalentScale)
        {
            this.equivalentScale=equivalentScale;
        }

        public MD_Resolution_Type(GeoSik.Iso.Ts19139.Gco.Distance_PropertyType distance)
        {
            this.distance=distance;
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, choice
        /// </para>
        /// <para>
        /// Regular expression: (equivalentScale | distance)
        /// </para>
        /// </summary>
        public MD_RepresentativeFraction_PropertyType equivalentScale
        {
            get
            {
                XElement x=this.GetElement(XName.Get("equivalentScale", "http://www.isotc211.org/2005/gmd"));
                return ((MD_RepresentativeFraction_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("equivalentScale", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, choice
        /// </para>
        /// <para>
        /// Regular expression: (equivalentScale | distance)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Distance_PropertyType distance
        {
            get
            {
                XElement x=this.GetElement(XName.Get("distance", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Distance_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("distance", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Resolution_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Resolution_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("equivalentScale", "http://www.isotc211.org/2005/gmd"), typeof(MD_RepresentativeFraction_PropertyType));
            localElementDictionary.Add(XName.Get("distance", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Distance_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Resolution_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Resolution_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_Resolution)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Resolution_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Resolution_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Resolution_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_Resolution_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Resolution_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_Resolution", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_Resolution)?
        /// </para>
        /// </summary>
        public MD_Resolution_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_Resolution)?
        /// </para>
        /// </summary>
        public MD_Resolution MD_Resolution
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_Resolution", "http://www.isotc211.org/2005/gmd"));
                return ((MD_Resolution)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_Resolution", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Resolution_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Resolution_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_Resolution", "http://www.isotc211.org/2005/gmd"), typeof(MD_Resolution));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Resolution_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Resolution_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// High-level geospatial data thematic classification to assist in the grouping and search of available geospatial datasets
    /// </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public sealed class MD_TopicCategoryCode_Type
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition=new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(16)), new object[] {
                        "farming",
                        "biota",
                        "boundaries",
                        "climatologyMeteorologyAtmosphere",
                        "economy",
                        "elevation",
                        "environment",
                        "geoscientificInformation",
                        "health",
                        "imageryBaseMapsEarthCover",
                        "intelligenceMilitary",
                        "inlandWaters",
                        "location",
                        "oceans",
                        "planningCadastre",
                        "society",
                        "structure",
                        "transportation",
                        "utilitiesCommunication"}, 0, 0, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));

        private MD_TopicCategoryCode_Type()
        {
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_TopicCategoryCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_TopicCategoryCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_TopicCategoryCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_TopicCategoryCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_TopicCategoryCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_TopicCategoryCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_TopicCategoryCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_TopicCategoryCode)?
        /// </para>
        /// </summary>
        public MD_TopicCategoryCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_TopicCategoryCode)?
        /// </para>
        /// </summary>
        public MD_TopicCategoryCode MD_TopicCategoryCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_TopicCategoryCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_TopicCategoryCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_TopicCategoryCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_TopicCategoryCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_TopicCategoryCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_TopicCategoryCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_TopicCategoryCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_TopicCategoryCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_TopicCategoryCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_CharacterSetCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_CharacterSetCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_CharacterSetCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_CharacterSetCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_CharacterSetCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_CharacterSetCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_CharacterSetCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_CharacterSetCode)?
        /// </para>
        /// </summary>
        public MD_CharacterSetCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_CharacterSetCode)?
        /// </para>
        /// </summary>
        public MD_CharacterSetCode MD_CharacterSetCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_CharacterSetCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_CharacterSetCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_CharacterSetCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_CharacterSetCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_CharacterSetCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_CharacterSetCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_CharacterSetCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_CharacterSetCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_CharacterSetCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_SpatialRepresentationTypeCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_SpatialRepresentationTypeCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_SpatialRepresentationTypeCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_SpatialRepresentationTypeCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_SpatialRepresentationTypeCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_SpatialRepresentationTypeCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_SpatialRepresentationTypeCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_SpatialRepresentationTypeCode)?
        /// </para>
        /// </summary>
        public MD_SpatialRepresentationTypeCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_SpatialRepresentationTypeCode)?
        /// </para>
        /// </summary>
        public MD_SpatialRepresentationTypeCode MD_SpatialRepresentationTypeCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_SpatialRepresentationTypeCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_SpatialRepresentationTypeCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_SpatialRepresentationTypeCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_SpatialRepresentationTypeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_SpatialRepresentationTypeCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_SpatialRepresentationTypeCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_SpatialRepresentationTypeCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_SpatialRepresentationTypeCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_SpatialRepresentationTypeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_ProgressCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ProgressCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ProgressCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_ProgressCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_ProgressCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_ProgressCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_ProgressCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_ProgressCode)?
        /// </para>
        /// </summary>
        public MD_ProgressCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_ProgressCode)?
        /// </para>
        /// </summary>
        public MD_ProgressCode MD_ProgressCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_ProgressCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_ProgressCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_ProgressCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ProgressCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_ProgressCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_ProgressCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_ProgressCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_ProgressCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_ProgressCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_KeywordTypeCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_KeywordTypeCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_KeywordTypeCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_KeywordTypeCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_KeywordTypeCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_KeywordTypeCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_KeywordTypeCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_KeywordTypeCode)?
        /// </para>
        /// </summary>
        public MD_KeywordTypeCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_KeywordTypeCode)?
        /// </para>
        /// </summary>
        public MD_KeywordTypeCode MD_KeywordTypeCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_KeywordTypeCode", "http://www.isotc211.org/2005/gmd"));
                return ((MD_KeywordTypeCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_KeywordTypeCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_KeywordTypeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_KeywordTypeCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_KeywordTypeCode", "http://www.isotc211.org/2005/gmd"), typeof(MD_KeywordTypeCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_KeywordTypeCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_KeywordTypeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DS_AssociationTypeCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DS_AssociationTypeCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_AssociationTypeCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DS_AssociationTypeCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DS_AssociationTypeCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DS_AssociationTypeCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DS_AssociationTypeCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DS_AssociationTypeCode)?
        /// </para>
        /// </summary>
        public DS_AssociationTypeCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DS_AssociationTypeCode)?
        /// </para>
        /// </summary>
        public DS_AssociationTypeCode DS_AssociationTypeCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DS_AssociationTypeCode", "http://www.isotc211.org/2005/gmd"));
                return ((DS_AssociationTypeCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("DS_AssociationTypeCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_AssociationTypeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DS_AssociationTypeCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DS_AssociationTypeCode", "http://www.isotc211.org/2005/gmd"), typeof(DS_AssociationTypeCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DS_AssociationTypeCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DS_AssociationTypeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DS_InitiativeTypeCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DS_InitiativeTypeCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_InitiativeTypeCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DS_InitiativeTypeCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DS_InitiativeTypeCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DS_InitiativeTypeCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DS_InitiativeTypeCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DS_InitiativeTypeCode)?
        /// </para>
        /// </summary>
        public DS_InitiativeTypeCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DS_InitiativeTypeCode)?
        /// </para>
        /// </summary>
        public DS_InitiativeTypeCode DS_InitiativeTypeCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DS_InitiativeTypeCode", "http://www.isotc211.org/2005/gmd"));
                return ((DS_InitiativeTypeCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("DS_InitiativeTypeCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_InitiativeTypeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DS_InitiativeTypeCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DS_InitiativeTypeCode", "http://www.isotc211.org/2005/gmd"), typeof(DS_InitiativeTypeCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DS_InitiativeTypeCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DS_InitiativeTypeCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (textGroup+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("PT_FreeText_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class PT_FreeText_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<LocalisedCharacterString_PropertyType> textGroupField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator PT_FreeText_Type(XElement xe) { return XTypedServices.ToXTypedElement<PT_FreeText_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static PT_FreeText_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("textGroup", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (textGroup+)
        /// </para>
        /// </summary>
        public PT_FreeText_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (textGroup+)
        /// </para>
        /// </summary>
        public IList<LocalisedCharacterString_PropertyType> textGroup
        {
            get
            {
                if ((this.textGroupField==null))
                {
                    this.textGroupField=new XTypedList<LocalisedCharacterString_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("textGroup", "http://www.isotc211.org/2005/gmd"));
                }
                return this.textGroupField;
            }
            set
            {
                if ((value==null))
                {
                    this.textGroupField=null;
                } else
                {
                    if ((this.textGroupField==null))
                    {
                        this.textGroupField=XTypedList<LocalisedCharacterString_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("textGroup", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<LocalisedCharacterString_PropertyType>(this.textGroupField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("PT_FreeText_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<PT_FreeText_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("textGroup", "http://www.isotc211.org/2005/gmd"), typeof(LocalisedCharacterString_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName PT_FreeText_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("PT_FreeText_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: ((CharacterString)?, (PT_FreeText)?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("PT_FreeText_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class PT_FreeText_PropertyType: global::GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        public static explicit operator PT_FreeText_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<PT_FreeText_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static PT_FreeText_PropertyType()
        {
            BuildElementDictionary();
        }

        /// <summary>
        /// <para>
        /// Regular expression: ((CharacterString)?, (PT_FreeText)?)
        /// </para>
        /// </summary>
        public PT_FreeText_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Setter: Appends
        /// </para>
        /// <para>
        /// Regular expression: ((CharacterString)?, (PT_FreeText)?)
        /// </para>
        /// </summary>
        public PT_FreeText PT_FreeText
        {
            get
            {
                XElement x=this.GetElement(XName.Get("PT_FreeText", "http://www.isotc211.org/2005/gmd"));
                return ((PT_FreeText)(x));
            }
            set
            {
                this.SetElement(XName.Get("PT_FreeText", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("PT_FreeText_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<PT_FreeText_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CharacterString", "http://www.isotc211.org/2005/gco"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString));
            localElementDictionary.Add(XName.Get("PT_FreeText", "http://www.isotc211.org/2005/gmd"), typeof(PT_FreeText));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlQualifiedName PT_FreeText_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("PT_FreeText_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (languageCode, country?, characterEncoding)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("PT_Locale_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class PT_Locale_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator PT_Locale_Type(XElement xe) { return XTypedServices.ToXTypedElement<PT_Locale_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static PT_Locale_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("languageCode", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("country", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("characterEncoding", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (languageCode, country?, characterEncoding)
        /// </para>
        /// </summary>
        public PT_Locale_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (languageCode, country?, characterEncoding)
        /// </para>
        /// </summary>
        public LanguageCode_PropertyType languageCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("languageCode", "http://www.isotc211.org/2005/gmd"));
                return ((LanguageCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("languageCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (languageCode, country?, characterEncoding)
        /// </para>
        /// </summary>
        public Country_PropertyType country
        {
            get
            {
                XElement x=this.GetElement(XName.Get("country", "http://www.isotc211.org/2005/gmd"));
                return ((Country_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("country", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (languageCode, country?, characterEncoding)
        /// </para>
        /// </summary>
        public MD_CharacterSetCode_PropertyType characterEncoding
        {
            get
            {
                XElement x=this.GetElement(XName.Get("characterEncoding", "http://www.isotc211.org/2005/gmd"));
                return ((MD_CharacterSetCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("characterEncoding", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("PT_Locale_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<PT_Locale_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("languageCode", "http://www.isotc211.org/2005/gmd"), typeof(LanguageCode_PropertyType));
            localElementDictionary.Add(XName.Get("country", "http://www.isotc211.org/2005/gmd"), typeof(Country_PropertyType));
            localElementDictionary.Add(XName.Get("characterEncoding", "http://www.isotc211.org/2005/gmd"), typeof(MD_CharacterSetCode_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName PT_Locale_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("PT_Locale_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (PT_Locale)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("PT_Locale_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class PT_Locale_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator PT_Locale_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<PT_Locale_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static PT_Locale_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("PT_Locale", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (PT_Locale)?
        /// </para>
        /// </summary>
        public PT_Locale_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (PT_Locale)?
        /// </para>
        /// </summary>
        public PT_Locale PT_Locale
        {
            get
            {
                XElement x=this.GetElement(XName.Get("PT_Locale", "http://www.isotc211.org/2005/gmd"));
                return ((PT_Locale)(x));
            }
            set
            {
                this.SetElement(XName.Get("PT_Locale", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("PT_Locale_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<PT_Locale_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("PT_Locale", "http://www.isotc211.org/2005/gmd"), typeof(PT_Locale));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName PT_Locale_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("PT_Locale_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    [XmlSchemaProviderAttribute("LocalisedCharacterString_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class LocalisedCharacterString_Type: XTypedElement, IXMetaData, IXmlSerializable
    {

        public static explicit operator LocalisedCharacterString_Type(XElement xe) { return XTypedServices.ToXTypedElement<LocalisedCharacterString_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public LocalisedCharacterString_Type()
        {
        }

        public string TypedValue
        {
            get
            {
                XElement x=this.Untyped;
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string id
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("id", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Id).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("id", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Id).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri locale
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("locale", ""));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("locale", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("LocalisedCharacterString_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<LocalisedCharacterString_Type>(this);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlQualifiedName LocalisedCharacterString_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("LocalisedCharacterString_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (LocalisedCharacterString)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("LocalisedCharacterString_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class LocalisedCharacterString_PropertyType: global::GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator LocalisedCharacterString_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<LocalisedCharacterString_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static LocalisedCharacterString_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("LocalisedCharacterString", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (LocalisedCharacterString)?
        /// </para>
        /// </summary>
        public LocalisedCharacterString_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (LocalisedCharacterString)?
        /// </para>
        /// </summary>
        public LocalisedCharacterString LocalisedCharacterString
        {
            get
            {
                XElement x=this.GetElement(XName.Get("LocalisedCharacterString", "http://www.isotc211.org/2005/gmd"));
                return ((LocalisedCharacterString)(x));
            }
            set
            {
                this.SetElement(XName.Get("LocalisedCharacterString", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("LocalisedCharacterString_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<LocalisedCharacterString_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("LocalisedCharacterString", "http://www.isotc211.org/2005/gmd"), typeof(LocalisedCharacterString));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName LocalisedCharacterString_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("LocalisedCharacterString_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (description, locale, date+, responsibleParty+, localisedString+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("PT_LocaleContainer_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class PT_LocaleContainer_Type: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CI_Date_PropertyType> dateField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CI_ResponsibleParty_PropertyType> responsiblePartyField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<LocalisedCharacterString_PropertyType> localisedStringField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator PT_LocaleContainer_Type(XElement xe) { return XTypedServices.ToXTypedElement<PT_LocaleContainer_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static PT_LocaleContainer_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("description", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("locale", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("date", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("responsibleParty", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("localisedString", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (description, locale, date+, responsibleParty+, localisedString+)
        /// </para>
        /// </summary>
        public PT_LocaleContainer_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (description, locale, date+, responsibleParty+, localisedString+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType description
        {
            get
            {
                XElement x=this.GetElement(XName.Get("description", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("description", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (description, locale, date+, responsibleParty+, localisedString+)
        /// </para>
        /// </summary>
        public PT_Locale_PropertyType locale
        {
            get
            {
                XElement x=this.GetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmd"));
                return ((PT_Locale_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (description, locale, date+, responsibleParty+, localisedString+)
        /// </para>
        /// </summary>
        public IList<CI_Date_PropertyType> date
        {
            get
            {
                if ((this.dateField==null))
                {
                    this.dateField=new XTypedList<CI_Date_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("date", "http://www.isotc211.org/2005/gmd"));
                }
                return this.dateField;
            }
            set
            {
                if ((value==null))
                {
                    this.dateField=null;
                } else
                {
                    if ((this.dateField==null))
                    {
                        this.dateField=XTypedList<CI_Date_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("date", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<CI_Date_PropertyType>(this.dateField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (description, locale, date+, responsibleParty+, localisedString+)
        /// </para>
        /// </summary>
        public IList<CI_ResponsibleParty_PropertyType> responsibleParty
        {
            get
            {
                if ((this.responsiblePartyField==null))
                {
                    this.responsiblePartyField=new XTypedList<CI_ResponsibleParty_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("responsibleParty", "http://www.isotc211.org/2005/gmd"));
                }
                return this.responsiblePartyField;
            }
            set
            {
                if ((value==null))
                {
                    this.responsiblePartyField=null;
                } else
                {
                    if ((this.responsiblePartyField==null))
                    {
                        this.responsiblePartyField=XTypedList<CI_ResponsibleParty_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("responsibleParty", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<CI_ResponsibleParty_PropertyType>(this.responsiblePartyField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (description, locale, date+, responsibleParty+, localisedString+)
        /// </para>
        /// </summary>
        public IList<LocalisedCharacterString_PropertyType> localisedString
        {
            get
            {
                if ((this.localisedStringField==null))
                {
                    this.localisedStringField=new XTypedList<LocalisedCharacterString_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("localisedString", "http://www.isotc211.org/2005/gmd"));
                }
                return this.localisedStringField;
            }
            set
            {
                if ((value==null))
                {
                    this.localisedStringField=null;
                } else
                {
                    if ((this.localisedStringField==null))
                    {
                        this.localisedStringField=XTypedList<LocalisedCharacterString_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("localisedString", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<LocalisedCharacterString_PropertyType>(this.localisedStringField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("PT_LocaleContainer_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<PT_LocaleContainer_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("description", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("locale", "http://www.isotc211.org/2005/gmd"), typeof(PT_Locale_PropertyType));
            localElementDictionary.Add(XName.Get("date", "http://www.isotc211.org/2005/gmd"), typeof(CI_Date_PropertyType));
            localElementDictionary.Add(XName.Get("responsibleParty", "http://www.isotc211.org/2005/gmd"), typeof(CI_ResponsibleParty_PropertyType));
            localElementDictionary.Add(XName.Get("localisedString", "http://www.isotc211.org/2005/gmd"), typeof(LocalisedCharacterString_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName PT_LocaleContainer_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("PT_LocaleContainer_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (PT_LocaleContainer)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("PT_LocaleContainer_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class PT_LocaleContainer_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator PT_LocaleContainer_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<PT_LocaleContainer_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static PT_LocaleContainer_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("PT_LocaleContainer", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (PT_LocaleContainer)?
        /// </para>
        /// </summary>
        public PT_LocaleContainer_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (PT_LocaleContainer)?
        /// </para>
        /// </summary>
        public PT_LocaleContainer PT_LocaleContainer
        {
            get
            {
                XElement x=this.GetElement(XName.Get("PT_LocaleContainer", "http://www.isotc211.org/2005/gmd"));
                return ((PT_LocaleContainer)(x));
            }
            set
            {
                this.SetElement(XName.Get("PT_LocaleContainer", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("PT_LocaleContainer_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<PT_LocaleContainer_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("PT_LocaleContainer", "http://www.isotc211.org/2005/gmd"), typeof(PT_LocaleContainer));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName PT_LocaleContainer_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("PT_LocaleContainer_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (LanguageCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("LanguageCode_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class LanguageCode_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator LanguageCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<LanguageCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static LanguageCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("LanguageCode", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (LanguageCode)?
        /// </para>
        /// </summary>
        public LanguageCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (LanguageCode)?
        /// </para>
        /// </summary>
        public LanguageCode LanguageCode
        {
            get
            {
                XElement x=this.GetElement(XName.Get("LanguageCode", "http://www.isotc211.org/2005/gmd"));
                return ((LanguageCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("LanguageCode", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("LanguageCode_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<LanguageCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("LanguageCode", "http://www.isotc211.org/2005/gmd"), typeof(LanguageCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName LanguageCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("LanguageCode_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (Country)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("Country_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class Country_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator Country_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<Country_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static Country_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Country", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (Country)?
        /// </para>
        /// </summary>
        public Country_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (Country)?
        /// </para>
        /// </summary>
        public Country Country
        {
            get
            {
                XElement x=this.GetElement(XName.Get("Country", "http://www.isotc211.org/2005/gmd"));
                return ((Country)(x));
            }
            set
            {
                this.SetElement(XName.Get("Country", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("Country_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<Country_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("Country", "http://www.isotc211.org/2005/gmd"), typeof(Country));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName Country_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("Country_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Information about the metadata
    /// </para>
    /// <para>
    /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Metadata_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Metadata_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_ScopeCode_PropertyType> hierarchyLevelField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> hierarchyLevelNameField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CI_ResponsibleParty_PropertyType> contactField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<PT_Locale_PropertyType> localeField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_SpatialRepresentation_PropertyType> spatialRepresentationInfoField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_ReferenceSystem_PropertyType> referenceSystemInfoField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_MetadataExtensionInformation_PropertyType> metadataExtensionInfoField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_Identification_PropertyType> identificationInfoField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_ContentInformation_PropertyType> contentInfoField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<DQ_DataQuality_PropertyType> dataQualityInfoField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_PortrayalCatalogueReference_PropertyType> portrayalCatalogueInfoField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_Constraints_PropertyType> metadataConstraintsField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_ApplicationSchemaInformation_PropertyType> applicationSchemaInfoField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<DS_Aggregate_PropertyType> seriesField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<DS_DataSet_PropertyType> describesField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType> propertyTypeField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType> featureTypeField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType> featureAttributeField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Metadata_Type(XElement xe) { return XTypedServices.ToXTypedElement<MD_Metadata_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Metadata_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("fileIdentifier", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("language", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("characterSet", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("parentIdentifier", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("hierarchyLevel", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("hierarchyLevelName", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("contact", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dateStamp", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("metadataStandardName", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("metadataStandardVersion", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dataSetURI", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("locale", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("spatialRepresentationInfo", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("referenceSystemInfo", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("metadataExtensionInfo", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("identificationInfo", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("contentInfo", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("distributionInfo", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dataQualityInfo", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("portrayalCatalogueInfo", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("metadataConstraints", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("applicationSchemaInfo", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("metadataMaintenance", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("series", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("describes", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("propertyType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("featureType", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("featureAttribute", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Information about the metadata
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public MD_Metadata_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType fileIdentifier
        {
            get
            {
                XElement x=this.GetElement(XName.Get("fileIdentifier", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("fileIdentifier", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType language
        {
            get
            {
                XElement x=this.GetElement(XName.Get("language", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("language", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public MD_CharacterSetCode_PropertyType characterSet
        {
            get
            {
                XElement x=this.GetElement(XName.Get("characterSet", "http://www.isotc211.org/2005/gmd"));
                return ((MD_CharacterSetCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("characterSet", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType parentIdentifier
        {
            get
            {
                XElement x=this.GetElement(XName.Get("parentIdentifier", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("parentIdentifier", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<MD_ScopeCode_PropertyType> hierarchyLevel
        {
            get
            {
                if ((this.hierarchyLevelField==null))
                {
                    this.hierarchyLevelField=new XTypedList<MD_ScopeCode_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("hierarchyLevel", "http://www.isotc211.org/2005/gmd"));
                }
                return this.hierarchyLevelField;
            }
            set
            {
                if ((value==null))
                {
                    this.hierarchyLevelField=null;
                } else
                {
                    if ((this.hierarchyLevelField==null))
                    {
                        this.hierarchyLevelField=XTypedList<MD_ScopeCode_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("hierarchyLevel", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_ScopeCode_PropertyType>(this.hierarchyLevelField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> hierarchyLevelName
        {
            get
            {
                if ((this.hierarchyLevelNameField==null))
                {
                    this.hierarchyLevelNameField=new XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("hierarchyLevelName", "http://www.isotc211.org/2005/gmd"));
                }
                return this.hierarchyLevelNameField;
            }
            set
            {
                if ((value==null))
                {
                    this.hierarchyLevelNameField=null;
                } else
                {
                    if ((this.hierarchyLevelNameField==null))
                    {
                        this.hierarchyLevelNameField=XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("hierarchyLevelName", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this.hierarchyLevelNameField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<CI_ResponsibleParty_PropertyType> contact
        {
            get
            {
                if ((this.contactField==null))
                {
                    this.contactField=new XTypedList<CI_ResponsibleParty_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("contact", "http://www.isotc211.org/2005/gmd"));
                }
                return this.contactField;
            }
            set
            {
                if ((value==null))
                {
                    this.contactField=null;
                } else
                {
                    if ((this.contactField==null))
                    {
                        this.contactField=XTypedList<CI_ResponsibleParty_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("contact", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<CI_ResponsibleParty_PropertyType>(this.contactField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Date_PropertyType dateStamp
        {
            get
            {
                XElement x=this.GetElement(XName.Get("dateStamp", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.Date_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("dateStamp", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType metadataStandardName
        {
            get
            {
                XElement x=this.GetElement(XName.Get("metadataStandardName", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("metadataStandardName", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType metadataStandardVersion
        {
            get
            {
                XElement x=this.GetElement(XName.Get("metadataStandardVersion", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("metadataStandardVersion", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType dataSetURI
        {
            get
            {
                XElement x=this.GetElement(XName.Get("dataSetURI", "http://www.isotc211.org/2005/gmd"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("dataSetURI", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<PT_Locale_PropertyType> locale
        {
            get
            {
                if ((this.localeField==null))
                {
                    this.localeField=new XTypedList<PT_Locale_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("locale", "http://www.isotc211.org/2005/gmd"));
                }
                return this.localeField;
            }
            set
            {
                if ((value==null))
                {
                    this.localeField=null;
                } else
                {
                    if ((this.localeField==null))
                    {
                        this.localeField=XTypedList<PT_Locale_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("locale", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<PT_Locale_PropertyType>(this.localeField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<MD_SpatialRepresentation_PropertyType> spatialRepresentationInfo
        {
            get
            {
                if ((this.spatialRepresentationInfoField==null))
                {
                    this.spatialRepresentationInfoField=new XTypedList<MD_SpatialRepresentation_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("spatialRepresentationInfo", "http://www.isotc211.org/2005/gmd"));
                }
                return this.spatialRepresentationInfoField;
            }
            set
            {
                if ((value==null))
                {
                    this.spatialRepresentationInfoField=null;
                } else
                {
                    if ((this.spatialRepresentationInfoField==null))
                    {
                        this.spatialRepresentationInfoField=XTypedList<MD_SpatialRepresentation_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("spatialRepresentationInfo", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_SpatialRepresentation_PropertyType>(this.spatialRepresentationInfoField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<MD_ReferenceSystem_PropertyType> referenceSystemInfo
        {
            get
            {
                if ((this.referenceSystemInfoField==null))
                {
                    this.referenceSystemInfoField=new XTypedList<MD_ReferenceSystem_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("referenceSystemInfo", "http://www.isotc211.org/2005/gmd"));
                }
                return this.referenceSystemInfoField;
            }
            set
            {
                if ((value==null))
                {
                    this.referenceSystemInfoField=null;
                } else
                {
                    if ((this.referenceSystemInfoField==null))
                    {
                        this.referenceSystemInfoField=XTypedList<MD_ReferenceSystem_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("referenceSystemInfo", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_ReferenceSystem_PropertyType>(this.referenceSystemInfoField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<MD_MetadataExtensionInformation_PropertyType> metadataExtensionInfo
        {
            get
            {
                if ((this.metadataExtensionInfoField==null))
                {
                    this.metadataExtensionInfoField=new XTypedList<MD_MetadataExtensionInformation_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("metadataExtensionInfo", "http://www.isotc211.org/2005/gmd"));
                }
                return this.metadataExtensionInfoField;
            }
            set
            {
                if ((value==null))
                {
                    this.metadataExtensionInfoField=null;
                } else
                {
                    if ((this.metadataExtensionInfoField==null))
                    {
                        this.metadataExtensionInfoField=XTypedList<MD_MetadataExtensionInformation_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("metadataExtensionInfo", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_MetadataExtensionInformation_PropertyType>(this.metadataExtensionInfoField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<MD_Identification_PropertyType> identificationInfo
        {
            get
            {
                if ((this.identificationInfoField==null))
                {
                    this.identificationInfoField=new XTypedList<MD_Identification_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("identificationInfo", "http://www.isotc211.org/2005/gmd"));
                }
                return this.identificationInfoField;
            }
            set
            {
                if ((value==null))
                {
                    this.identificationInfoField=null;
                } else
                {
                    if ((this.identificationInfoField==null))
                    {
                        this.identificationInfoField=XTypedList<MD_Identification_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("identificationInfo", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_Identification_PropertyType>(this.identificationInfoField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<MD_ContentInformation_PropertyType> contentInfo
        {
            get
            {
                if ((this.contentInfoField==null))
                {
                    this.contentInfoField=new XTypedList<MD_ContentInformation_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("contentInfo", "http://www.isotc211.org/2005/gmd"));
                }
                return this.contentInfoField;
            }
            set
            {
                if ((value==null))
                {
                    this.contentInfoField=null;
                } else
                {
                    if ((this.contentInfoField==null))
                    {
                        this.contentInfoField=XTypedList<MD_ContentInformation_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("contentInfo", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_ContentInformation_PropertyType>(this.contentInfoField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public MD_Distribution_PropertyType distributionInfo
        {
            get
            {
                XElement x=this.GetElement(XName.Get("distributionInfo", "http://www.isotc211.org/2005/gmd"));
                return ((MD_Distribution_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("distributionInfo", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<DQ_DataQuality_PropertyType> dataQualityInfo
        {
            get
            {
                if ((this.dataQualityInfoField==null))
                {
                    this.dataQualityInfoField=new XTypedList<DQ_DataQuality_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("dataQualityInfo", "http://www.isotc211.org/2005/gmd"));
                }
                return this.dataQualityInfoField;
            }
            set
            {
                if ((value==null))
                {
                    this.dataQualityInfoField=null;
                } else
                {
                    if ((this.dataQualityInfoField==null))
                    {
                        this.dataQualityInfoField=XTypedList<DQ_DataQuality_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("dataQualityInfo", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<DQ_DataQuality_PropertyType>(this.dataQualityInfoField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<MD_PortrayalCatalogueReference_PropertyType> portrayalCatalogueInfo
        {
            get
            {
                if ((this.portrayalCatalogueInfoField==null))
                {
                    this.portrayalCatalogueInfoField=new XTypedList<MD_PortrayalCatalogueReference_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("portrayalCatalogueInfo", "http://www.isotc211.org/2005/gmd"));
                }
                return this.portrayalCatalogueInfoField;
            }
            set
            {
                if ((value==null))
                {
                    this.portrayalCatalogueInfoField=null;
                } else
                {
                    if ((this.portrayalCatalogueInfoField==null))
                    {
                        this.portrayalCatalogueInfoField=XTypedList<MD_PortrayalCatalogueReference_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("portrayalCatalogueInfo", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_PortrayalCatalogueReference_PropertyType>(this.portrayalCatalogueInfoField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<MD_Constraints_PropertyType> metadataConstraints
        {
            get
            {
                if ((this.metadataConstraintsField==null))
                {
                    this.metadataConstraintsField=new XTypedList<MD_Constraints_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("metadataConstraints", "http://www.isotc211.org/2005/gmd"));
                }
                return this.metadataConstraintsField;
            }
            set
            {
                if ((value==null))
                {
                    this.metadataConstraintsField=null;
                } else
                {
                    if ((this.metadataConstraintsField==null))
                    {
                        this.metadataConstraintsField=XTypedList<MD_Constraints_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("metadataConstraints", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_Constraints_PropertyType>(this.metadataConstraintsField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<MD_ApplicationSchemaInformation_PropertyType> applicationSchemaInfo
        {
            get
            {
                if ((this.applicationSchemaInfoField==null))
                {
                    this.applicationSchemaInfoField=new XTypedList<MD_ApplicationSchemaInformation_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("applicationSchemaInfo", "http://www.isotc211.org/2005/gmd"));
                }
                return this.applicationSchemaInfoField;
            }
            set
            {
                if ((value==null))
                {
                    this.applicationSchemaInfoField=null;
                } else
                {
                    if ((this.applicationSchemaInfoField==null))
                    {
                        this.applicationSchemaInfoField=XTypedList<MD_ApplicationSchemaInformation_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("applicationSchemaInfo", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_ApplicationSchemaInformation_PropertyType>(this.applicationSchemaInfoField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public MD_MaintenanceInformation_PropertyType metadataMaintenance
        {
            get
            {
                XElement x=this.GetElement(XName.Get("metadataMaintenance", "http://www.isotc211.org/2005/gmd"));
                return ((MD_MaintenanceInformation_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("metadataMaintenance", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<DS_Aggregate_PropertyType> series
        {
            get
            {
                if ((this.seriesField==null))
                {
                    this.seriesField=new XTypedList<DS_Aggregate_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("series", "http://www.isotc211.org/2005/gmd"));
                }
                return this.seriesField;
            }
            set
            {
                if ((value==null))
                {
                    this.seriesField=null;
                } else
                {
                    if ((this.seriesField==null))
                    {
                        this.seriesField=XTypedList<DS_Aggregate_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("series", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<DS_Aggregate_PropertyType>(this.seriesField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<DS_DataSet_PropertyType> describes
        {
            get
            {
                if ((this.describesField==null))
                {
                    this.describesField=new XTypedList<DS_DataSet_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("describes", "http://www.isotc211.org/2005/gmd"));
                }
                return this.describesField;
            }
            set
            {
                if ((value==null))
                {
                    this.describesField=null;
                } else
                {
                    if ((this.describesField==null))
                    {
                        this.describesField=XTypedList<DS_DataSet_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("describes", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<DS_DataSet_PropertyType>(this.describesField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType> propertyType
        {
            get
            {
                if ((this.propertyTypeField==null))
                {
                    this.propertyTypeField=new XTypedList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("propertyType", "http://www.isotc211.org/2005/gmd"));
                }
                return this.propertyTypeField;
            }
            set
            {
                if ((value==null))
                {
                    this.propertyTypeField=null;
                } else
                {
                    if ((this.propertyTypeField==null))
                    {
                        this.propertyTypeField=XTypedList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("propertyType", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType>(this.propertyTypeField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType> featureType
        {
            get
            {
                if ((this.featureTypeField==null))
                {
                    this.featureTypeField=new XTypedList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("featureType", "http://www.isotc211.org/2005/gmd"));
                }
                return this.featureTypeField;
            }
            set
            {
                if ((value==null))
                {
                    this.featureTypeField=null;
                } else
                {
                    if ((this.featureTypeField==null))
                    {
                        this.featureTypeField=XTypedList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("featureType", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType>(this.featureTypeField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType> featureAttribute
        {
            get
            {
                if ((this.featureAttributeField==null))
                {
                    this.featureAttributeField=new XTypedList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("featureAttribute", "http://www.isotc211.org/2005/gmd"));
                }
                return this.featureAttributeField;
            }
            set
            {
                if ((value==null))
                {
                    this.featureAttributeField=null;
                } else
                {
                    if ((this.featureAttributeField==null))
                    {
                        this.featureAttributeField=XTypedList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("featureAttribute", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType>(this.featureAttributeField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Metadata_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Metadata_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("fileIdentifier", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("language", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("characterSet", "http://www.isotc211.org/2005/gmd"), typeof(MD_CharacterSetCode_PropertyType));
            localElementDictionary.Add(XName.Get("parentIdentifier", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("hierarchyLevel", "http://www.isotc211.org/2005/gmd"), typeof(MD_ScopeCode_PropertyType));
            localElementDictionary.Add(XName.Get("hierarchyLevelName", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("contact", "http://www.isotc211.org/2005/gmd"), typeof(CI_ResponsibleParty_PropertyType));
            localElementDictionary.Add(XName.Get("dateStamp", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.Date_PropertyType));
            localElementDictionary.Add(XName.Get("metadataStandardName", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("metadataStandardVersion", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("dataSetURI", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("locale", "http://www.isotc211.org/2005/gmd"), typeof(PT_Locale_PropertyType));
            localElementDictionary.Add(XName.Get("spatialRepresentationInfo", "http://www.isotc211.org/2005/gmd"), typeof(MD_SpatialRepresentation_PropertyType));
            localElementDictionary.Add(XName.Get("referenceSystemInfo", "http://www.isotc211.org/2005/gmd"), typeof(MD_ReferenceSystem_PropertyType));
            localElementDictionary.Add(XName.Get("metadataExtensionInfo", "http://www.isotc211.org/2005/gmd"), typeof(MD_MetadataExtensionInformation_PropertyType));
            localElementDictionary.Add(XName.Get("identificationInfo", "http://www.isotc211.org/2005/gmd"), typeof(MD_Identification_PropertyType));
            localElementDictionary.Add(XName.Get("contentInfo", "http://www.isotc211.org/2005/gmd"), typeof(MD_ContentInformation_PropertyType));
            localElementDictionary.Add(XName.Get("distributionInfo", "http://www.isotc211.org/2005/gmd"), typeof(MD_Distribution_PropertyType));
            localElementDictionary.Add(XName.Get("dataQualityInfo", "http://www.isotc211.org/2005/gmd"), typeof(DQ_DataQuality_PropertyType));
            localElementDictionary.Add(XName.Get("portrayalCatalogueInfo", "http://www.isotc211.org/2005/gmd"), typeof(MD_PortrayalCatalogueReference_PropertyType));
            localElementDictionary.Add(XName.Get("metadataConstraints", "http://www.isotc211.org/2005/gmd"), typeof(MD_Constraints_PropertyType));
            localElementDictionary.Add(XName.Get("applicationSchemaInfo", "http://www.isotc211.org/2005/gmd"), typeof(MD_ApplicationSchemaInformation_PropertyType));
            localElementDictionary.Add(XName.Get("metadataMaintenance", "http://www.isotc211.org/2005/gmd"), typeof(MD_MaintenanceInformation_PropertyType));
            localElementDictionary.Add(XName.Get("series", "http://www.isotc211.org/2005/gmd"), typeof(DS_Aggregate_PropertyType));
            localElementDictionary.Add(XName.Get("describes", "http://www.isotc211.org/2005/gmd"), typeof(DS_DataSet_PropertyType));
            localElementDictionary.Add(XName.Get("propertyType", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType));
            localElementDictionary.Add(XName.Get("featureType", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType));
            localElementDictionary.Add(XName.Get("featureAttribute", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Metadata_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Metadata_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MD_Metadata)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_Metadata_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Metadata_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MD_Metadata_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MD_Metadata_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MD_Metadata_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MD_Metadata", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MD_Metadata)?
        /// </para>
        /// </summary>
        public MD_Metadata_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MD_Metadata)?
        /// </para>
        /// </summary>
        public MD_Metadata MD_Metadata
        {
            get
            {
                XElement x=this.GetElement(XName.Get("MD_Metadata", "http://www.isotc211.org/2005/gmd"));
                return ((MD_Metadata)(x));
            }
            set
            {
                this.SetElement(XName.Get("MD_Metadata", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Metadata_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_Metadata_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MD_Metadata", "http://www.isotc211.org/2005/gmd"), typeof(MD_Metadata));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MD_Metadata_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MD_Metadata_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Identifiable collection of datasets
    /// </para>
    /// <para>
    /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("AbstractDS_Aggregate_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractDS_Aggregate_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<DS_DataSet_PropertyType> composedOfField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_Metadata_PropertyType> seriesMetadataField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<DS_Aggregate_PropertyType> subsetField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<DS_Aggregate_PropertyType> supersetField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator AbstractDS_Aggregate_Type(XElement xe) { return (AbstractDS_Aggregate_Type)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static AbstractDS_Aggregate_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("composedOf", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("seriesMetadata", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("subset", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("superset", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Identifiable collection of datasets
        /// </para>
        /// <para>
        /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
        /// </para>
        /// </summary>
        public AbstractDS_Aggregate_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
        /// </para>
        /// </summary>
        public IList<DS_DataSet_PropertyType> composedOf
        {
            get
            {
                if ((this.composedOfField==null))
                {
                    this.composedOfField=new XTypedList<DS_DataSet_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("composedOf", "http://www.isotc211.org/2005/gmd"));
                }
                return this.composedOfField;
            }
            set
            {
                if ((value==null))
                {
                    this.composedOfField=null;
                } else
                {
                    if ((this.composedOfField==null))
                    {
                        this.composedOfField=XTypedList<DS_DataSet_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("composedOf", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<DS_DataSet_PropertyType>(this.composedOfField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
        /// </para>
        /// </summary>
        public IList<MD_Metadata_PropertyType> seriesMetadata
        {
            get
            {
                if ((this.seriesMetadataField==null))
                {
                    this.seriesMetadataField=new XTypedList<MD_Metadata_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("seriesMetadata", "http://www.isotc211.org/2005/gmd"));
                }
                return this.seriesMetadataField;
            }
            set
            {
                if ((value==null))
                {
                    this.seriesMetadataField=null;
                } else
                {
                    if ((this.seriesMetadataField==null))
                    {
                        this.seriesMetadataField=XTypedList<MD_Metadata_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("seriesMetadata", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_Metadata_PropertyType>(this.seriesMetadataField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
        /// </para>
        /// </summary>
        public IList<DS_Aggregate_PropertyType> subset
        {
            get
            {
                if ((this.subsetField==null))
                {
                    this.subsetField=new XTypedList<DS_Aggregate_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("subset", "http://www.isotc211.org/2005/gmd"));
                }
                return this.subsetField;
            }
            set
            {
                if ((value==null))
                {
                    this.subsetField=null;
                } else
                {
                    if ((this.subsetField==null))
                    {
                        this.subsetField=XTypedList<DS_Aggregate_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("subset", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<DS_Aggregate_PropertyType>(this.subsetField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
        /// </para>
        /// </summary>
        public IList<DS_Aggregate_PropertyType> superset
        {
            get
            {
                if ((this.supersetField==null))
                {
                    this.supersetField=new XTypedList<DS_Aggregate_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("superset", "http://www.isotc211.org/2005/gmd"));
                }
                return this.supersetField;
            }
            set
            {
                if ((value==null))
                {
                    this.supersetField=null;
                } else
                {
                    if ((this.supersetField==null))
                    {
                        this.supersetField=XTypedList<DS_Aggregate_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("superset", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<DS_Aggregate_PropertyType>(this.supersetField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractDS_Aggregate_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("composedOf", "http://www.isotc211.org/2005/gmd"), typeof(DS_DataSet_PropertyType));
            localElementDictionary.Add(XName.Get("seriesMetadata", "http://www.isotc211.org/2005/gmd"), typeof(MD_Metadata_PropertyType));
            localElementDictionary.Add(XName.Get("subset", "http://www.isotc211.org/2005/gmd"), typeof(DS_Aggregate_PropertyType));
            localElementDictionary.Add(XName.Get("superset", "http://www.isotc211.org/2005/gmd"), typeof(DS_Aggregate_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName AbstractDS_Aggregate_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("AbstractDS_Aggregate_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (AbstractDS_Aggregate)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DS_Aggregate_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_Aggregate_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DS_Aggregate_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DS_Aggregate_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DS_Aggregate_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("AbstractDS_Aggregate", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_OtherAggregate", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_Series", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_Initiative", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_Platform", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_Sensor", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_ProductionSeries", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_StereoMate", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (AbstractDS_Aggregate)?
        /// </para>
        /// </summary>
        public DS_Aggregate_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: AbstractDS_Aggregate, DS_OtherAggregate, DS_Series, DS_Initiative, DS_Platform, DS_Sensor, DS_ProductionSeries, DS_StereoMate
        /// </para>
        /// <para>
        /// Regular expression: (AbstractDS_Aggregate)?
        /// </para>
        /// </summary>
        public AbstractDS_Aggregate AbstractDS_Aggregate
        {
            get
            {
                XTypedElement x=XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("AbstractDS_Aggregate", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_OtherAggregate", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_Series", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_Initiative", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_Platform", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_Sensor", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_ProductionSeries", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_StereoMate", "http://www.isotc211.org/2005/gmd"));
                return ((AbstractDS_Aggregate)(x));
            }
            set
            {
                this.SetElement(XName.Get("AbstractDS_Aggregate", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_Aggregate_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DS_Aggregate_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("AbstractDS_Aggregate", "http://www.isotc211.org/2005/gmd"), typeof(AbstractDS_Aggregate));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DS_Aggregate_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DS_Aggregate_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Identifiable collection of data
    /// </para>
    /// <para>
    /// Regular expression: (has+, partOf*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DS_DataSet_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_DataSet_Type: global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MD_Metadata_PropertyType> hasField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<DS_Aggregate_PropertyType> partOfField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DS_DataSet_Type(XElement xe) { return XTypedServices.ToXTypedElement<DS_DataSet_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DS_DataSet_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("has", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("partOf", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Identifiable collection of data
        /// </para>
        /// <para>
        /// Regular expression: (has+, partOf*)
        /// </para>
        /// </summary>
        public DS_DataSet_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (has+, partOf*)
        /// </para>
        /// </summary>
        public IList<MD_Metadata_PropertyType> has
        {
            get
            {
                if ((this.hasField==null))
                {
                    this.hasField=new XTypedList<MD_Metadata_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("has", "http://www.isotc211.org/2005/gmd"));
                }
                return this.hasField;
            }
            set
            {
                if ((value==null))
                {
                    this.hasField=null;
                } else
                {
                    if ((this.hasField==null))
                    {
                        this.hasField=XTypedList<MD_Metadata_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("has", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<MD_Metadata_PropertyType>(this.hasField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (has+, partOf*)
        /// </para>
        /// </summary>
        public IList<DS_Aggregate_PropertyType> partOf
        {
            get
            {
                if ((this.partOfField==null))
                {
                    this.partOfField=new XTypedList<DS_Aggregate_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("partOf", "http://www.isotc211.org/2005/gmd"));
                }
                return this.partOfField;
            }
            set
            {
                if ((value==null))
                {
                    this.partOfField=null;
                } else
                {
                    if ((this.partOfField==null))
                    {
                        this.partOfField=XTypedList<DS_Aggregate_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("partOf", "http://www.isotc211.org/2005/gmd"));
                    } else
                    {
                        XTypedServices.SetList<DS_Aggregate_PropertyType>(this.partOfField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_DataSet_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DS_DataSet_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("has", "http://www.isotc211.org/2005/gmd"), typeof(MD_Metadata_PropertyType));
            localElementDictionary.Add(XName.Get("partOf", "http://www.isotc211.org/2005/gmd"), typeof(DS_Aggregate_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DS_DataSet_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DS_DataSet_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DS_DataSet)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DS_DataSet_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_DataSet_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DS_DataSet_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DS_DataSet_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DS_DataSet_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DS_DataSet", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DS_DataSet)?
        /// </para>
        /// </summary>
        public DS_DataSet_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DS_DataSet)?
        /// </para>
        /// </summary>
        public DS_DataSet DS_DataSet
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DS_DataSet", "http://www.isotc211.org/2005/gmd"));
                return ((DS_DataSet)(x));
            }
            set
            {
                this.SetElement(XName.Get("DS_DataSet", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_DataSet_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DS_DataSet_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DS_DataSet", "http://www.isotc211.org/2005/gmd"), typeof(DS_DataSet));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DS_DataSet_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DS_DataSet_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DS_OtherAggregate_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_OtherAggregate_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDS_Aggregate_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DS_OtherAggregate_Type(XElement xe) { return XTypedServices.ToXTypedElement<DS_OtherAggregate_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DS_OtherAggregate_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("composedOf", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("seriesMetadata", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("subset", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("superset", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
        /// </para>
        /// </summary>
        public DS_OtherAggregate_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_OtherAggregate_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DS_OtherAggregate_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("composedOf", "http://www.isotc211.org/2005/gmd"), typeof(DS_DataSet_PropertyType));
            localElementDictionary.Add(XName.Get("seriesMetadata", "http://www.isotc211.org/2005/gmd"), typeof(MD_Metadata_PropertyType));
            localElementDictionary.Add(XName.Get("subset", "http://www.isotc211.org/2005/gmd"), typeof(DS_Aggregate_PropertyType));
            localElementDictionary.Add(XName.Get("superset", "http://www.isotc211.org/2005/gmd"), typeof(DS_Aggregate_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DS_OtherAggregate_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DS_OtherAggregate_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DS_OtherAggregate)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DS_OtherAggregate_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_OtherAggregate_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DS_OtherAggregate_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DS_OtherAggregate_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DS_OtherAggregate_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("DS_OtherAggregate", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_StereoMate", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DS_OtherAggregate)?
        /// </para>
        /// </summary>
        public DS_OtherAggregate_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: DS_OtherAggregate, DS_StereoMate
        /// </para>
        /// <para>
        /// Regular expression: (DS_OtherAggregate)?
        /// </para>
        /// </summary>
        public DS_OtherAggregate DS_OtherAggregate
        {
            get
            {
                XTypedElement x=XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("DS_OtherAggregate", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_StereoMate", "http://www.isotc211.org/2005/gmd"));
                return ((DS_OtherAggregate)(x));
            }
            set
            {
                this.SetElement(XName.Get("DS_OtherAggregate", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_OtherAggregate_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DS_OtherAggregate_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DS_OtherAggregate", "http://www.isotc211.org/2005/gmd"), typeof(DS_OtherAggregate));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DS_OtherAggregate_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DS_OtherAggregate_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DS_Series_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_Series_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDS_Aggregate_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DS_Series_Type(XElement xe) { return XTypedServices.ToXTypedElement<DS_Series_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DS_Series_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("composedOf", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("seriesMetadata", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("subset", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("superset", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
        /// </para>
        /// </summary>
        public DS_Series_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_Series_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DS_Series_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("composedOf", "http://www.isotc211.org/2005/gmd"), typeof(DS_DataSet_PropertyType));
            localElementDictionary.Add(XName.Get("seriesMetadata", "http://www.isotc211.org/2005/gmd"), typeof(MD_Metadata_PropertyType));
            localElementDictionary.Add(XName.Get("subset", "http://www.isotc211.org/2005/gmd"), typeof(DS_Aggregate_PropertyType));
            localElementDictionary.Add(XName.Get("superset", "http://www.isotc211.org/2005/gmd"), typeof(DS_Aggregate_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DS_Series_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DS_Series_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DS_Series)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DS_Series_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_Series_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DS_Series_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DS_Series_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DS_Series_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("DS_Series", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_Platform", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_Sensor", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_ProductionSeries", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DS_Series)?
        /// </para>
        /// </summary>
        public DS_Series_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: DS_Series, DS_Platform, DS_Sensor, DS_ProductionSeries
        /// </para>
        /// <para>
        /// Regular expression: (DS_Series)?
        /// </para>
        /// </summary>
        public DS_Series DS_Series
        {
            get
            {
                XTypedElement x=XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("DS_Series", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_Platform", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_Sensor", "http://www.isotc211.org/2005/gmd"), XName.Get("DS_ProductionSeries", "http://www.isotc211.org/2005/gmd"));
                return ((DS_Series)(x));
            }
            set
            {
                this.SetElement(XName.Get("DS_Series", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_Series_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DS_Series_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DS_Series", "http://www.isotc211.org/2005/gmd"), typeof(DS_Series));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DS_Series_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DS_Series_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DS_Initiative_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_Initiative_Type: global::GeoSik.Iso.Ts19139.Gmd.AbstractDS_Aggregate_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DS_Initiative_Type(XElement xe) { return XTypedServices.ToXTypedElement<DS_Initiative_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DS_Initiative_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("composedOf", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("seriesMetadata", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("subset", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("superset", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
        /// </para>
        /// </summary>
        public DS_Initiative_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_Initiative_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DS_Initiative_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("composedOf", "http://www.isotc211.org/2005/gmd"), typeof(DS_DataSet_PropertyType));
            localElementDictionary.Add(XName.Get("seriesMetadata", "http://www.isotc211.org/2005/gmd"), typeof(MD_Metadata_PropertyType));
            localElementDictionary.Add(XName.Get("subset", "http://www.isotc211.org/2005/gmd"), typeof(DS_Aggregate_PropertyType));
            localElementDictionary.Add(XName.Get("superset", "http://www.isotc211.org/2005/gmd"), typeof(DS_Aggregate_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DS_Initiative_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DS_Initiative_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DS_Initiative)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DS_Initiative_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_Initiative_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DS_Initiative_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DS_Initiative_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DS_Initiative_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DS_Initiative", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DS_Initiative)?
        /// </para>
        /// </summary>
        public DS_Initiative_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DS_Initiative)?
        /// </para>
        /// </summary>
        public DS_Initiative DS_Initiative
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DS_Initiative", "http://www.isotc211.org/2005/gmd"));
                return ((DS_Initiative)(x));
            }
            set
            {
                this.SetElement(XName.Get("DS_Initiative", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_Initiative_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DS_Initiative_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DS_Initiative", "http://www.isotc211.org/2005/gmd"), typeof(DS_Initiative));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DS_Initiative_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DS_Initiative_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DS_Platform_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_Platform_Type: global::GeoSik.Iso.Ts19139.Gmd.DS_Series_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DS_Platform_Type(XElement xe) { return XTypedServices.ToXTypedElement<DS_Platform_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DS_Platform_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("composedOf", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("seriesMetadata", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("subset", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("superset", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
        /// </para>
        /// </summary>
        public DS_Platform_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_Platform_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DS_Platform_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("composedOf", "http://www.isotc211.org/2005/gmd"), typeof(DS_DataSet_PropertyType));
            localElementDictionary.Add(XName.Get("seriesMetadata", "http://www.isotc211.org/2005/gmd"), typeof(MD_Metadata_PropertyType));
            localElementDictionary.Add(XName.Get("subset", "http://www.isotc211.org/2005/gmd"), typeof(DS_Aggregate_PropertyType));
            localElementDictionary.Add(XName.Get("superset", "http://www.isotc211.org/2005/gmd"), typeof(DS_Aggregate_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DS_Platform_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DS_Platform_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DS_Platform)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DS_Platform_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_Platform_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DS_Platform_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DS_Platform_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DS_Platform_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DS_Platform", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DS_Platform)?
        /// </para>
        /// </summary>
        public DS_Platform_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DS_Platform)?
        /// </para>
        /// </summary>
        public DS_Platform DS_Platform
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DS_Platform", "http://www.isotc211.org/2005/gmd"));
                return ((DS_Platform)(x));
            }
            set
            {
                this.SetElement(XName.Get("DS_Platform", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_Platform_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DS_Platform_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DS_Platform", "http://www.isotc211.org/2005/gmd"), typeof(DS_Platform));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DS_Platform_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DS_Platform_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DS_Sensor_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_Sensor_Type: global::GeoSik.Iso.Ts19139.Gmd.DS_Series_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DS_Sensor_Type(XElement xe) { return XTypedServices.ToXTypedElement<DS_Sensor_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DS_Sensor_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("composedOf", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("seriesMetadata", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("subset", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("superset", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
        /// </para>
        /// </summary>
        public DS_Sensor_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_Sensor_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DS_Sensor_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("composedOf", "http://www.isotc211.org/2005/gmd"), typeof(DS_DataSet_PropertyType));
            localElementDictionary.Add(XName.Get("seriesMetadata", "http://www.isotc211.org/2005/gmd"), typeof(MD_Metadata_PropertyType));
            localElementDictionary.Add(XName.Get("subset", "http://www.isotc211.org/2005/gmd"), typeof(DS_Aggregate_PropertyType));
            localElementDictionary.Add(XName.Get("superset", "http://www.isotc211.org/2005/gmd"), typeof(DS_Aggregate_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DS_Sensor_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DS_Sensor_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DS_Sensor)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DS_Sensor_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_Sensor_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DS_Sensor_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DS_Sensor_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DS_Sensor_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DS_Sensor", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DS_Sensor)?
        /// </para>
        /// </summary>
        public DS_Sensor_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DS_Sensor)?
        /// </para>
        /// </summary>
        public DS_Sensor DS_Sensor
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DS_Sensor", "http://www.isotc211.org/2005/gmd"));
                return ((DS_Sensor)(x));
            }
            set
            {
                this.SetElement(XName.Get("DS_Sensor", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_Sensor_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DS_Sensor_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DS_Sensor", "http://www.isotc211.org/2005/gmd"), typeof(DS_Sensor));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DS_Sensor_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DS_Sensor_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DS_ProductionSeries_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_ProductionSeries_Type: global::GeoSik.Iso.Ts19139.Gmd.DS_Series_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DS_ProductionSeries_Type(XElement xe) { return XTypedServices.ToXTypedElement<DS_ProductionSeries_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DS_ProductionSeries_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("composedOf", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("seriesMetadata", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("subset", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("superset", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
        /// </para>
        /// </summary>
        public DS_ProductionSeries_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_ProductionSeries_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DS_ProductionSeries_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("composedOf", "http://www.isotc211.org/2005/gmd"), typeof(DS_DataSet_PropertyType));
            localElementDictionary.Add(XName.Get("seriesMetadata", "http://www.isotc211.org/2005/gmd"), typeof(MD_Metadata_PropertyType));
            localElementDictionary.Add(XName.Get("subset", "http://www.isotc211.org/2005/gmd"), typeof(DS_Aggregate_PropertyType));
            localElementDictionary.Add(XName.Get("superset", "http://www.isotc211.org/2005/gmd"), typeof(DS_Aggregate_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DS_ProductionSeries_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DS_ProductionSeries_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DS_ProductionSeries)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DS_ProductionSeries_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_ProductionSeries_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DS_ProductionSeries_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DS_ProductionSeries_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DS_ProductionSeries_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DS_ProductionSeries", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DS_ProductionSeries)?
        /// </para>
        /// </summary>
        public DS_ProductionSeries_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DS_ProductionSeries)?
        /// </para>
        /// </summary>
        public DS_ProductionSeries DS_ProductionSeries
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DS_ProductionSeries", "http://www.isotc211.org/2005/gmd"));
                return ((DS_ProductionSeries)(x));
            }
            set
            {
                this.SetElement(XName.Get("DS_ProductionSeries", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_ProductionSeries_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DS_ProductionSeries_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DS_ProductionSeries", "http://www.isotc211.org/2005/gmd"), typeof(DS_ProductionSeries));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DS_ProductionSeries_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DS_ProductionSeries_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DS_StereoMate_TypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_StereoMate_Type: global::GeoSik.Iso.Ts19139.Gmd.DS_OtherAggregate_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DS_StereoMate_Type(XElement xe) { return XTypedServices.ToXTypedElement<DS_StereoMate_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DS_StereoMate_Type()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("composedOf", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("seriesMetadata", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("subset", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("superset", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
        /// </para>
        /// </summary>
        public DS_StereoMate_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_StereoMate_Type", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DS_StereoMate_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("composedOf", "http://www.isotc211.org/2005/gmd"), typeof(DS_DataSet_PropertyType));
            localElementDictionary.Add(XName.Get("seriesMetadata", "http://www.isotc211.org/2005/gmd"), typeof(MD_Metadata_PropertyType));
            localElementDictionary.Add(XName.Get("subset", "http://www.isotc211.org/2005/gmd"), typeof(DS_Aggregate_PropertyType));
            localElementDictionary.Add(XName.Get("superset", "http://www.isotc211.org/2005/gmd"), typeof(DS_Aggregate_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DS_StereoMate_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DS_StereoMate_Type", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DS_StereoMate)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DS_StereoMate_PropertyTypeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_StereoMate_PropertyType: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string typeFixedValue="simple";

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary=new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DS_StereoMate_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DS_StereoMate_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DS_StereoMate_PropertyType()
        {
            BuildElementDictionary();
            contentModel=new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DS_StereoMate", "http://www.isotc211.org/2005/gmd")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DS_StereoMate)?
        /// </para>
        /// </summary>
        public DS_StereoMate_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DS_StereoMate)?
        /// </para>
        /// </summary>
        public DS_StereoMate DS_StereoMate
        {
            get
            {
                XElement x=this.GetElement(XName.Get("DS_StereoMate", "http://www.isotc211.org/2005/gmd"));
                return ((DS_StereoMate)(x));
            }
            set
            {
                this.SetElement(XName.Get("DS_StereoMate", "http://www.isotc211.org/2005/gmd"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return typeFixedValue;
            }
            set
            {
                if (value.Equals(typeFixedValue))
                {
                } else
                {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, typeFixedValue);
                }
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x=this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_StereoMate_PropertyType", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DS_StereoMate_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DS_StereoMate", "http://www.isotc211.org/2005/gmd"), typeof(DS_StereoMate));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DS_StereoMate_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DS_StereoMate_PropertyType", "http://www.isotc211.org/2005/gmd");
        }
    }

    /// <summary>
    /// <para>
    /// Time period covered by the content of the dataset
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EX_TemporalExtentSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_TemporalExtent: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private EX_TemporalExtent_Type ContentField;

        public static explicit operator EX_TemporalExtent(XElement xe) { return (EX_TemporalExtent)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected EX_TemporalExtent(bool setNull)
        {
        }

        /// <summary>
        /// <para>
        /// Time period covered by the content of the dataset
        /// </para>
        /// </summary>
        public EX_TemporalExtent()
        {
            SetInnerType(new EX_TemporalExtent_Type());
        }

        /// <summary>
        /// <para>
        /// Time period covered by the content of the dataset
        /// </para>
        /// </summary>
        public EX_TemporalExtent(EX_TemporalExtent_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                if ((this.ContentField!=null))
                {
                    this.ContentField.Untyped=value;
                }
            }
        }

        public EX_TemporalExtent_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (extent)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gts.TM_Primitive_PropertyType extent
        {
            get
            {
                return this.ContentField.extent;
            }
            set
            {
                this.ContentField.extent=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_TemporalExtent", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static EX_TemporalExtent Load(string xmlFile)
        {
            return ((EX_TemporalExtent)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static EX_TemporalExtent Load(System.IO.TextReader xmlFile)
        {
            return ((EX_TemporalExtent)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static EX_TemporalExtent Parse(string xml)
        {
            return ((EX_TemporalExtent)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        public override XTypedElement Clone()
        {
            return new EX_TemporalExtent(((EX_TemporalExtent_Type)(this.Content.Clone())));
        }

        private void SetInnerType(EX_TemporalExtent_Type ContentField)
        {
            this.ContentField=((EX_TemporalExtent_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        protected virtual void SetSubstitutionMember(EX_TemporalExtent_Type ContentField)
        {
            this.ContentField=ContentField;
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType EX_TemporalExtentSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("EX_TemporalExtent", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Vertical domain of dataset
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EX_VerticalExtentSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_VerticalExtent: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private EX_VerticalExtent_Type ContentField;

        public static explicit operator EX_VerticalExtent(XElement xe) { return XTypedServices.ToXTypedElement<EX_VerticalExtent, EX_VerticalExtent_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Vertical domain of dataset
        /// </para>
        /// </summary>
        public EX_VerticalExtent()
        {
            SetInnerType(new EX_VerticalExtent_Type());
        }

        /// <summary>
        /// <para>
        /// Vertical domain of dataset
        /// </para>
        /// </summary>
        public EX_VerticalExtent(EX_VerticalExtent_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public EX_VerticalExtent_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (minimumValue, maximumValue, verticalCRS)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType minimumValue
        {
            get
            {
                return this.ContentField.minimumValue;
            }
            set
            {
                this.ContentField.minimumValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (minimumValue, maximumValue, verticalCRS)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType maximumValue
        {
            get
            {
                return this.ContentField.maximumValue;
            }
            set
            {
                this.ContentField.maximumValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (minimumValue, maximumValue, verticalCRS)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gsr.SC_CRS_PropertyType verticalCRS
        {
            get
            {
                return this.ContentField.verticalCRS;
            }
            set
            {
                this.ContentField.verticalCRS=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_VerticalExtent", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static EX_VerticalExtent Load(string xmlFile)
        {
            return XTypedServices.Load<EX_VerticalExtent, EX_VerticalExtent_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static EX_VerticalExtent Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<EX_VerticalExtent, EX_VerticalExtent_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static EX_VerticalExtent Parse(string xml)
        {
            return XTypedServices.Parse<EX_VerticalExtent, EX_VerticalExtent_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new EX_VerticalExtent(((EX_VerticalExtent_Type)(this.Content.Clone())));
        }

        private void SetInnerType(EX_VerticalExtent_Type ContentField)
        {
            this.ContentField=((EX_VerticalExtent_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType EX_VerticalExtentSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("EX_VerticalExtent", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Boundary enclosing the dataset expressed as the closed set of (x,y) coordinates of the polygon (last point replicates first point)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EX_BoundingPolygonSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_BoundingPolygon: global::GeoSik.Iso.Ts19139.Gmd.AbstractEX_GeographicExtent, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private EX_BoundingPolygon_Type ContentField;

        public static explicit operator EX_BoundingPolygon(XElement xe) { return XTypedServices.ToXTypedElement<EX_BoundingPolygon, EX_BoundingPolygon_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Boundary enclosing the dataset expressed as the closed set of (x,y) coordinates of the polygon (last point replicates first point)
        /// </para>
        /// </summary>
        public EX_BoundingPolygon() :
            base(true)
        {
            SetInnerType(new EX_BoundingPolygon_Type());
        }

        /// <summary>
        /// <para>
        /// Boundary enclosing the dataset expressed as the closed set of (x,y) coordinates of the polygon (last point replicates first point)
        /// </para>
        /// </summary>
        public EX_BoundingPolygon(EX_BoundingPolygon_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new EX_BoundingPolygon_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (extentTypeCode?, polygon+)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gss.GM_Object_PropertyType> polygon
        {
            get
            {
                return this.ContentField.polygon;
            }
            set
            {
                this.ContentField.polygon=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_BoundingPolygon", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static EX_BoundingPolygon Load(string xmlFile)
        {
            return XTypedServices.Load<EX_BoundingPolygon, EX_BoundingPolygon_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static EX_BoundingPolygon Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<EX_BoundingPolygon, EX_BoundingPolygon_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static EX_BoundingPolygon Parse(string xml)
        {
            return XTypedServices.Parse<EX_BoundingPolygon, EX_BoundingPolygon_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new EX_BoundingPolygon(((EX_BoundingPolygon_Type)(this.Content.Clone())));
        }

        private void SetInnerType(EX_BoundingPolygon_Type ContentField)
        {
            this.ContentField=((EX_BoundingPolygon_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType EX_BoundingPolygonSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("EX_BoundingPolygon", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Information about spatial, vertical, and temporal extent
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EX_ExtentSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_Extent: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private EX_Extent_Type ContentField;

        public static explicit operator EX_Extent(XElement xe) { return XTypedServices.ToXTypedElement<EX_Extent, EX_Extent_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Information about spatial, vertical, and temporal extent
        /// </para>
        /// </summary>
        public EX_Extent()
        {
            SetInnerType(new EX_Extent_Type());
        }

        /// <summary>
        /// <para>
        /// Information about spatial, vertical, and temporal extent
        /// </para>
        /// </summary>
        public EX_Extent(EX_Extent_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public EX_Extent_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (description?, geographicElement*, temporalElement*, verticalElement*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType description
        {
            get
            {
                return this.ContentField.description;
            }
            set
            {
                this.ContentField.description=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (description?, geographicElement*, temporalElement*, verticalElement*)
        /// </para>
        /// </summary>
        public IList<EX_GeographicExtent_PropertyType> geographicElement
        {
            get
            {
                return this.ContentField.geographicElement;
            }
            set
            {
                this.ContentField.geographicElement=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (description?, geographicElement*, temporalElement*, verticalElement*)
        /// </para>
        /// </summary>
        public IList<EX_TemporalExtent_PropertyType> temporalElement
        {
            get
            {
                return this.ContentField.temporalElement;
            }
            set
            {
                this.ContentField.temporalElement=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (description?, geographicElement*, temporalElement*, verticalElement*)
        /// </para>
        /// </summary>
        public IList<EX_VerticalExtent_PropertyType> verticalElement
        {
            get
            {
                return this.ContentField.verticalElement;
            }
            set
            {
                this.ContentField.verticalElement=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_Extent", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static EX_Extent Load(string xmlFile)
        {
            return XTypedServices.Load<EX_Extent, EX_Extent_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static EX_Extent Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<EX_Extent, EX_Extent_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static EX_Extent Parse(string xml)
        {
            return XTypedServices.Parse<EX_Extent, EX_Extent_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new EX_Extent(((EX_Extent_Type)(this.Content.Clone())));
        }

        private void SetInnerType(EX_Extent_Type ContentField)
        {
            this.ContentField=((EX_Extent_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType EX_ExtentSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("EX_Extent", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Geographic area of the dataset
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("AbstractEX_GeographicExtentSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractEX_GeographicExtent: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private AbstractEX_GeographicExtent_Type ContentField;

        public static explicit operator AbstractEX_GeographicExtent(XElement xe) { return (AbstractEX_GeographicExtent)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected AbstractEX_GeographicExtent(bool setNull)
        {
        }

        /// <summary>
        /// <para>
        /// Geographic area of the dataset
        /// </para>
        /// </summary>
        public AbstractEX_GeographicExtent()
        {
            throw new InvalidOperationException();
        }

        /// <summary>
        /// <para>
        /// Geographic area of the dataset
        /// </para>
        /// </summary>
        public AbstractEX_GeographicExtent(AbstractEX_GeographicExtent_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                if ((this.ContentField!=null))
                {
                    this.ContentField.Untyped=value;
                }
            }
        }

        public AbstractEX_GeographicExtent_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (extentTypeCode?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType extentTypeCode
        {
            get
            {
                return this.ContentField.extentTypeCode;
            }
            set
            {
                this.ContentField.extentTypeCode=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractEX_GeographicExtent", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static AbstractEX_GeographicExtent Load(string xmlFile)
        {
            return ((AbstractEX_GeographicExtent)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractEX_GeographicExtent Load(System.IO.TextReader xmlFile)
        {
            return ((AbstractEX_GeographicExtent)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractEX_GeographicExtent Parse(string xml)
        {
            return ((AbstractEX_GeographicExtent)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        private void SetInnerType(AbstractEX_GeographicExtent_Type ContentField)
        {
            this.ContentField=((AbstractEX_GeographicExtent_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        protected virtual void SetSubstitutionMember(AbstractEX_GeographicExtent_Type ContentField)
        {
            this.ContentField=ContentField;
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType AbstractEX_GeographicExtentSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("AbstractEX_GeographicExtent", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Geographic area of the entire dataset referenced to WGS 84
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EX_GeographicBoundingBoxSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_GeographicBoundingBox: global::GeoSik.Iso.Ts19139.Gmd.AbstractEX_GeographicExtent, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private EX_GeographicBoundingBox_Type ContentField;

        public static explicit operator EX_GeographicBoundingBox(XElement xe) { return XTypedServices.ToXTypedElement<EX_GeographicBoundingBox, EX_GeographicBoundingBox_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Geographic area of the entire dataset referenced to WGS 84
        /// </para>
        /// </summary>
        public EX_GeographicBoundingBox() :
            base(true)
        {
            SetInnerType(new EX_GeographicBoundingBox_Type());
        }

        /// <summary>
        /// <para>
        /// Geographic area of the entire dataset referenced to WGS 84
        /// </para>
        /// </summary>
        public EX_GeographicBoundingBox(EX_GeographicBoundingBox_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new EX_GeographicBoundingBox_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (extentTypeCode?, westBoundLongitude, eastBoundLongitude, southBoundLatitude, northBoundLatitude)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Decimal_PropertyType westBoundLongitude
        {
            get
            {
                return this.ContentField.westBoundLongitude;
            }
            set
            {
                this.ContentField.westBoundLongitude=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (extentTypeCode?, westBoundLongitude, eastBoundLongitude, southBoundLatitude, northBoundLatitude)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Decimal_PropertyType eastBoundLongitude
        {
            get
            {
                return this.ContentField.eastBoundLongitude;
            }
            set
            {
                this.ContentField.eastBoundLongitude=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (extentTypeCode?, westBoundLongitude, eastBoundLongitude, southBoundLatitude, northBoundLatitude)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Decimal_PropertyType southBoundLatitude
        {
            get
            {
                return this.ContentField.southBoundLatitude;
            }
            set
            {
                this.ContentField.southBoundLatitude=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (extentTypeCode?, westBoundLongitude, eastBoundLongitude, southBoundLatitude, northBoundLatitude)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Decimal_PropertyType northBoundLatitude
        {
            get
            {
                return this.ContentField.northBoundLatitude;
            }
            set
            {
                this.ContentField.northBoundLatitude=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_GeographicBoundingBox", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static EX_GeographicBoundingBox Load(string xmlFile)
        {
            return XTypedServices.Load<EX_GeographicBoundingBox, EX_GeographicBoundingBox_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static EX_GeographicBoundingBox Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<EX_GeographicBoundingBox, EX_GeographicBoundingBox_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static EX_GeographicBoundingBox Parse(string xml)
        {
            return XTypedServices.Parse<EX_GeographicBoundingBox, EX_GeographicBoundingBox_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new EX_GeographicBoundingBox(((EX_GeographicBoundingBox_Type)(this.Content.Clone())));
        }

        private void SetInnerType(EX_GeographicBoundingBox_Type ContentField)
        {
            this.ContentField=((EX_GeographicBoundingBox_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType EX_GeographicBoundingBoxSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("EX_GeographicBoundingBox", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Extent with respect to date and time
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EX_SpatialTemporalExtentSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_SpatialTemporalExtent: global::GeoSik.Iso.Ts19139.Gmd.EX_TemporalExtent, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private EX_SpatialTemporalExtent_Type ContentField;

        public static explicit operator EX_SpatialTemporalExtent(XElement xe) { return XTypedServices.ToXTypedElement<EX_SpatialTemporalExtent, EX_SpatialTemporalExtent_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Extent with respect to date and time
        /// </para>
        /// </summary>
        public EX_SpatialTemporalExtent() :
            base(true)
        {
            SetInnerType(new EX_SpatialTemporalExtent_Type());
        }

        /// <summary>
        /// <para>
        /// Extent with respect to date and time
        /// </para>
        /// </summary>
        public EX_SpatialTemporalExtent(EX_SpatialTemporalExtent_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new EX_SpatialTemporalExtent_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (extent, spatialExtent+)
        /// </para>
        /// </summary>
        public IList<EX_GeographicExtent_PropertyType> spatialExtent
        {
            get
            {
                return this.ContentField.spatialExtent;
            }
            set
            {
                this.ContentField.spatialExtent=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_SpatialTemporalExtent", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static EX_SpatialTemporalExtent Load(string xmlFile)
        {
            return XTypedServices.Load<EX_SpatialTemporalExtent, EX_SpatialTemporalExtent_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static EX_SpatialTemporalExtent Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<EX_SpatialTemporalExtent, EX_SpatialTemporalExtent_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static EX_SpatialTemporalExtent Parse(string xml)
        {
            return XTypedServices.Parse<EX_SpatialTemporalExtent, EX_SpatialTemporalExtent_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new EX_SpatialTemporalExtent(((EX_SpatialTemporalExtent_Type)(this.Content.Clone())));
        }

        private void SetInnerType(EX_SpatialTemporalExtent_Type ContentField)
        {
            this.ContentField=((EX_SpatialTemporalExtent_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType EX_SpatialTemporalExtentSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("EX_SpatialTemporalExtent", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("EX_GeographicDescriptionSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class EX_GeographicDescription: global::GeoSik.Iso.Ts19139.Gmd.AbstractEX_GeographicExtent, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private EX_GeographicDescription_Type ContentField;

        public static explicit operator EX_GeographicDescription(XElement xe) { return XTypedServices.ToXTypedElement<EX_GeographicDescription, EX_GeographicDescription_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public EX_GeographicDescription() :
            base(true)
        {
            SetInnerType(new EX_GeographicDescription_Type());
        }

        public EX_GeographicDescription(EX_GeographicDescription_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new EX_GeographicDescription_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (extentTypeCode?, geographicIdentifier)
        /// </para>
        /// </summary>
        public MD_Identifier_PropertyType geographicIdentifier
        {
            get
            {
                return this.ContentField.geographicIdentifier;
            }
            set
            {
                this.ContentField.geographicIdentifier=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EX_GeographicDescription", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static EX_GeographicDescription Load(string xmlFile)
        {
            return XTypedServices.Load<EX_GeographicDescription, EX_GeographicDescription_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static EX_GeographicDescription Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<EX_GeographicDescription, EX_GeographicDescription_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static EX_GeographicDescription Parse(string xml)
        {
            return XTypedServices.Parse<EX_GeographicDescription, EX_GeographicDescription_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new EX_GeographicDescription(((EX_GeographicDescription_Type)(this.Content.Clone())));
        }

        private void SetInnerType(EX_GeographicDescription_Type ContentField)
        {
            this.ContentField=((EX_GeographicDescription_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType EX_GeographicDescriptionSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("EX_GeographicDescription", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("RS_IdentifierSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class RS_Identifier: global::GeoSik.Iso.Ts19139.Gmd.MD_Identifier, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private RS_Identifier_Type ContentField;

        public static explicit operator RS_Identifier(XElement xe) { return XTypedServices.ToXTypedElement<RS_Identifier, RS_Identifier_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public RS_Identifier() :
            base(true)
        {
            SetInnerType(new RS_Identifier_Type());
        }

        public RS_Identifier(RS_Identifier_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new RS_Identifier_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (authority?, code, codeSpace?, version?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (authority?, code, codeSpace?, version?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType version
        {
            get
            {
                return this.ContentField.version;
            }
            set
            {
                this.ContentField.version=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("RS_Identifier", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static RS_Identifier Load(string xmlFile)
        {
            return XTypedServices.Load<RS_Identifier, RS_Identifier_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static RS_Identifier Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<RS_Identifier, RS_Identifier_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static RS_Identifier Parse(string xml)
        {
            return XTypedServices.Parse<RS_Identifier, RS_Identifier_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new RS_Identifier(((RS_Identifier_Type)(this.Content.Clone())));
        }

        private void SetInnerType(RS_Identifier_Type ContentField)
        {
            this.ContentField=((RS_Identifier_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType RS_IdentifierSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("RS_Identifier", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_ReferenceSystemSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ReferenceSystem: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_ReferenceSystem_Type ContentField;

        public static explicit operator MD_ReferenceSystem(XElement xe) { return XTypedServices.ToXTypedElement<MD_ReferenceSystem, MD_ReferenceSystem_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_ReferenceSystem()
        {
            SetInnerType(new MD_ReferenceSystem_Type());
        }

        public MD_ReferenceSystem(MD_ReferenceSystem_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_ReferenceSystem_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (referenceSystemIdentifier?)
        /// </para>
        /// </summary>
        public RS_Identifier_PropertyType referenceSystemIdentifier
        {
            get
            {
                return this.ContentField.referenceSystemIdentifier;
            }
            set
            {
                this.ContentField.referenceSystemIdentifier=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ReferenceSystem", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_ReferenceSystem Load(string xmlFile)
        {
            return XTypedServices.Load<MD_ReferenceSystem, MD_ReferenceSystem_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_ReferenceSystem Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_ReferenceSystem, MD_ReferenceSystem_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_ReferenceSystem Parse(string xml)
        {
            return XTypedServices.Parse<MD_ReferenceSystem, MD_ReferenceSystem_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_ReferenceSystem(((MD_ReferenceSystem_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_ReferenceSystem_Type ContentField)
        {
            this.ContentField=((MD_ReferenceSystem_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_ReferenceSystemSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_ReferenceSystem", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_IdentifierSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Identifier: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_Identifier_Type ContentField;

        public static explicit operator MD_Identifier(XElement xe) { return (MD_Identifier)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected MD_Identifier(bool setNull)
        {
        }

        public MD_Identifier()
        {
            SetInnerType(new MD_Identifier_Type());
        }

        public MD_Identifier(MD_Identifier_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                if ((this.ContentField!=null))
                {
                    this.ContentField.Untyped=value;
                }
            }
        }

        public MD_Identifier_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (authority?, code)
        /// </para>
        /// </summary>
        public CI_Citation_PropertyType authority
        {
            get
            {
                return this.ContentField.authority;
            }
            set
            {
                this.ContentField.authority=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (authority?, code)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType code
        {
            get
            {
                return this.ContentField.code;
            }
            set
            {
                this.ContentField.code=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Identifier", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_Identifier Load(string xmlFile)
        {
            return ((MD_Identifier)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static MD_Identifier Load(System.IO.TextReader xmlFile)
        {
            return ((MD_Identifier)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static MD_Identifier Parse(string xml)
        {
            return ((MD_Identifier)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        public override XTypedElement Clone()
        {
            return new MD_Identifier(((MD_Identifier_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_Identifier_Type ContentField)
        {
            this.ContentField=((MD_Identifier_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        protected virtual void SetSubstitutionMember(MD_Identifier_Type ContentField)
        {
            this.ContentField=ContentField;
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_IdentifierSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_Identifier", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Description of the spatial and temporal reference systems used in the dataset
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("AbstractRS_ReferenceSystemSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractRS_ReferenceSystem: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private AbstractRS_ReferenceSystem_Type ContentField;

        public static explicit operator AbstractRS_ReferenceSystem(XElement xe) { return (AbstractRS_ReferenceSystem)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Description of the spatial and temporal reference systems used in the dataset
        /// </para>
        /// </summary>
        public AbstractRS_ReferenceSystem()
        {
            throw new InvalidOperationException();
        }

        /// <summary>
        /// <para>
        /// Description of the spatial and temporal reference systems used in the dataset
        /// </para>
        /// </summary>
        public AbstractRS_ReferenceSystem(AbstractRS_ReferenceSystem_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public AbstractRS_ReferenceSystem_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, domainOfValidity*)
        /// </para>
        /// </summary>
        public RS_Identifier_PropertyType name
        {
            get
            {
                return this.ContentField.name;
            }
            set
            {
                this.ContentField.name=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, domainOfValidity*)
        /// </para>
        /// </summary>
        public IList<EX_Extent_PropertyType> domainOfValidity
        {
            get
            {
                return this.ContentField.domainOfValidity;
            }
            set
            {
                this.ContentField.domainOfValidity=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractRS_ReferenceSystem", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static AbstractRS_ReferenceSystem Load(string xmlFile)
        {
            return ((AbstractRS_ReferenceSystem)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractRS_ReferenceSystem Load(System.IO.TextReader xmlFile)
        {
            return ((AbstractRS_ReferenceSystem)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractRS_ReferenceSystem Parse(string xml)
        {
            return ((AbstractRS_ReferenceSystem)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        private void SetInnerType(AbstractRS_ReferenceSystem_Type ContentField)
        {
            this.ContentField=((AbstractRS_ReferenceSystem_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType AbstractRS_ReferenceSystemSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("AbstractRS_ReferenceSystem", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Identification of, and means of communication with, person(s) and organisations associated with the dataset
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_ResponsiblePartySchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_ResponsibleParty: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private CI_ResponsibleParty_Type ContentField;

        public static explicit operator CI_ResponsibleParty(XElement xe) { return XTypedServices.ToXTypedElement<CI_ResponsibleParty, CI_ResponsibleParty_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Identification of, and means of communication with, person(s) and organisations associated with the dataset
        /// </para>
        /// </summary>
        public CI_ResponsibleParty()
        {
            SetInnerType(new CI_ResponsibleParty_Type());
        }

        /// <summary>
        /// <para>
        /// Identification of, and means of communication with, person(s) and organisations associated with the dataset
        /// </para>
        /// </summary>
        public CI_ResponsibleParty(CI_ResponsibleParty_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public CI_ResponsibleParty_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (individualName?, organisationName?, positionName?, contactInfo?, role)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType individualName
        {
            get
            {
                return this.ContentField.individualName;
            }
            set
            {
                this.ContentField.individualName=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (individualName?, organisationName?, positionName?, contactInfo?, role)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType organisationName
        {
            get
            {
                return this.ContentField.organisationName;
            }
            set
            {
                this.ContentField.organisationName=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (individualName?, organisationName?, positionName?, contactInfo?, role)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType positionName
        {
            get
            {
                return this.ContentField.positionName;
            }
            set
            {
                this.ContentField.positionName=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (individualName?, organisationName?, positionName?, contactInfo?, role)
        /// </para>
        /// </summary>
        public CI_Contact_PropertyType contactInfo
        {
            get
            {
                return this.ContentField.contactInfo;
            }
            set
            {
                this.ContentField.contactInfo=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (individualName?, organisationName?, positionName?, contactInfo?, role)
        /// </para>
        /// </summary>
        public CI_RoleCode_PropertyType role
        {
            get
            {
                return this.ContentField.role;
            }
            set
            {
                this.ContentField.role=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_ResponsibleParty", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static CI_ResponsibleParty Load(string xmlFile)
        {
            return XTypedServices.Load<CI_ResponsibleParty, CI_ResponsibleParty_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CI_ResponsibleParty Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<CI_ResponsibleParty, CI_ResponsibleParty_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CI_ResponsibleParty Parse(string xml)
        {
            return XTypedServices.Parse<CI_ResponsibleParty, CI_ResponsibleParty_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new CI_ResponsibleParty(((CI_ResponsibleParty_Type)(this.Content.Clone())));
        }

        private void SetInnerType(CI_ResponsibleParty_Type ContentField)
        {
            this.ContentField=((CI_ResponsibleParty_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CI_ResponsiblePartySchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("CI_ResponsibleParty", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Standardized resource reference
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_CitationSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_Citation: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private CI_Citation_Type ContentField;

        public static explicit operator CI_Citation(XElement xe) { return XTypedServices.ToXTypedElement<CI_Citation, CI_Citation_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Standardized resource reference
        /// </para>
        /// </summary>
        public CI_Citation()
        {
            SetInnerType(new CI_Citation_Type());
        }

        /// <summary>
        /// <para>
        /// Standardized resource reference
        /// </para>
        /// </summary>
        public CI_Citation(CI_Citation_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public CI_Citation_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType title
        {
            get
            {
                return this.ContentField.title;
            }
            set
            {
                this.ContentField.title=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> alternateTitle
        {
            get
            {
                return this.ContentField.alternateTitle;
            }
            set
            {
                this.ContentField.alternateTitle=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public IList<CI_Date_PropertyType> date
        {
            get
            {
                return this.ContentField.date;
            }
            set
            {
                this.ContentField.date=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType edition
        {
            get
            {
                return this.ContentField.edition;
            }
            set
            {
                this.ContentField.edition=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Date_PropertyType editionDate
        {
            get
            {
                return this.ContentField.editionDate;
            }
            set
            {
                this.ContentField.editionDate=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public IList<MD_Identifier_PropertyType> identifier
        {
            get
            {
                return this.ContentField.identifier;
            }
            set
            {
                this.ContentField.identifier=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public IList<CI_ResponsibleParty_PropertyType> citedResponsibleParty
        {
            get
            {
                return this.ContentField.citedResponsibleParty;
            }
            set
            {
                this.ContentField.citedResponsibleParty=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public IList<CI_PresentationFormCode_PropertyType> presentationForm
        {
            get
            {
                return this.ContentField.presentationForm;
            }
            set
            {
                this.ContentField.presentationForm=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public CI_Series_PropertyType series
        {
            get
            {
                return this.ContentField.series;
            }
            set
            {
                this.ContentField.series=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType otherCitationDetails
        {
            get
            {
                return this.ContentField.otherCitationDetails;
            }
            set
            {
                this.ContentField.otherCitationDetails=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType collectiveTitle
        {
            get
            {
                return this.ContentField.collectiveTitle;
            }
            set
            {
                this.ContentField.collectiveTitle=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType ISBN
        {
            get
            {
                return this.ContentField.ISBN;
            }
            set
            {
                this.ContentField.ISBN=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (title, alternateTitle*, date+, edition?, editionDate?, identifier*, citedResponsibleParty*, presentationForm*, series?, otherCitationDetails?, collectiveTitle?, ISBN?, ISSN?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType ISSN
        {
            get
            {
                return this.ContentField.ISSN;
            }
            set
            {
                this.ContentField.ISSN=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_Citation", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static CI_Citation Load(string xmlFile)
        {
            return XTypedServices.Load<CI_Citation, CI_Citation_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CI_Citation Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<CI_Citation, CI_Citation_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CI_Citation Parse(string xml)
        {
            return XTypedServices.Parse<CI_Citation, CI_Citation_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new CI_Citation(((CI_Citation_Type)(this.Content.Clone())));
        }

        private void SetInnerType(CI_Citation_Type ContentField)
        {
            this.ContentField=((CI_Citation_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CI_CitationSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("CI_Citation", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Location of the responsible individual or organisation
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_AddressSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_Address: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private CI_Address_Type ContentField;

        public static explicit operator CI_Address(XElement xe) { return XTypedServices.ToXTypedElement<CI_Address, CI_Address_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Location of the responsible individual or organisation
        /// </para>
        /// </summary>
        public CI_Address()
        {
            SetInnerType(new CI_Address_Type());
        }

        /// <summary>
        /// <para>
        /// Location of the responsible individual or organisation
        /// </para>
        /// </summary>
        public CI_Address(CI_Address_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public CI_Address_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (deliveryPoint*, city?, administrativeArea?, postalCode?, country?, electronicMailAddress*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> deliveryPoint
        {
            get
            {
                return this.ContentField.deliveryPoint;
            }
            set
            {
                this.ContentField.deliveryPoint=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (deliveryPoint*, city?, administrativeArea?, postalCode?, country?, electronicMailAddress*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType city
        {
            get
            {
                return this.ContentField.city;
            }
            set
            {
                this.ContentField.city=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (deliveryPoint*, city?, administrativeArea?, postalCode?, country?, electronicMailAddress*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType administrativeArea
        {
            get
            {
                return this.ContentField.administrativeArea;
            }
            set
            {
                this.ContentField.administrativeArea=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (deliveryPoint*, city?, administrativeArea?, postalCode?, country?, electronicMailAddress*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType postalCode
        {
            get
            {
                return this.ContentField.postalCode;
            }
            set
            {
                this.ContentField.postalCode=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (deliveryPoint*, city?, administrativeArea?, postalCode?, country?, electronicMailAddress*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType country
        {
            get
            {
                return this.ContentField.country;
            }
            set
            {
                this.ContentField.country=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (deliveryPoint*, city?, administrativeArea?, postalCode?, country?, electronicMailAddress*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> electronicMailAddress
        {
            get
            {
                return this.ContentField.electronicMailAddress;
            }
            set
            {
                this.ContentField.electronicMailAddress=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_Address", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static CI_Address Load(string xmlFile)
        {
            return XTypedServices.Load<CI_Address, CI_Address_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CI_Address Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<CI_Address, CI_Address_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CI_Address Parse(string xml)
        {
            return XTypedServices.Parse<CI_Address, CI_Address_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new CI_Address(((CI_Address_Type)(this.Content.Clone())));
        }

        private void SetInnerType(CI_Address_Type ContentField)
        {
            this.ContentField=((CI_Address_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CI_AddressSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("CI_Address", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Information about online sources from which the dataset, specification, or community profile name and extended metadata elements can be obtained.
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_OnlineResourceSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_OnlineResource: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private CI_OnlineResource_Type ContentField;

        public static explicit operator CI_OnlineResource(XElement xe) { return XTypedServices.ToXTypedElement<CI_OnlineResource, CI_OnlineResource_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Information about online sources from which the dataset, specification, or community profile name and extended metadata elements can be obtained.
        /// </para>
        /// </summary>
        public CI_OnlineResource()
        {
            SetInnerType(new CI_OnlineResource_Type());
        }

        /// <summary>
        /// <para>
        /// Information about online sources from which the dataset, specification, or community profile name and extended metadata elements can be obtained.
        /// </para>
        /// </summary>
        public CI_OnlineResource(CI_OnlineResource_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public CI_OnlineResource_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (linkage, protocol?, applicationProfile?, name?, description?, function?)
        /// </para>
        /// </summary>
        public URL_PropertyType linkage
        {
            get
            {
                return this.ContentField.linkage;
            }
            set
            {
                this.ContentField.linkage=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (linkage, protocol?, applicationProfile?, name?, description?, function?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType protocol
        {
            get
            {
                return this.ContentField.protocol;
            }
            set
            {
                this.ContentField.protocol=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (linkage, protocol?, applicationProfile?, name?, description?, function?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType applicationProfile
        {
            get
            {
                return this.ContentField.applicationProfile;
            }
            set
            {
                this.ContentField.applicationProfile=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (linkage, protocol?, applicationProfile?, name?, description?, function?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType name
        {
            get
            {
                return this.ContentField.name;
            }
            set
            {
                this.ContentField.name=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (linkage, protocol?, applicationProfile?, name?, description?, function?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType description
        {
            get
            {
                return this.ContentField.description;
            }
            set
            {
                this.ContentField.description=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (linkage, protocol?, applicationProfile?, name?, description?, function?)
        /// </para>
        /// </summary>
        public CI_OnLineFunctionCode_PropertyType function
        {
            get
            {
                return this.ContentField.function;
            }
            set
            {
                this.ContentField.function=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_OnlineResource", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static CI_OnlineResource Load(string xmlFile)
        {
            return XTypedServices.Load<CI_OnlineResource, CI_OnlineResource_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CI_OnlineResource Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<CI_OnlineResource, CI_OnlineResource_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CI_OnlineResource Parse(string xml)
        {
            return XTypedServices.Parse<CI_OnlineResource, CI_OnlineResource_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new CI_OnlineResource(((CI_OnlineResource_Type)(this.Content.Clone())));
        }

        private void SetInnerType(CI_OnlineResource_Type ContentField)
        {
            this.ContentField=((CI_OnlineResource_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CI_OnlineResourceSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("CI_OnlineResource", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Information required enabling contact with the  responsible person and/or organisation
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_ContactSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_Contact: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private CI_Contact_Type ContentField;

        public static explicit operator CI_Contact(XElement xe) { return XTypedServices.ToXTypedElement<CI_Contact, CI_Contact_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Information required enabling contact with the  responsible person and/or organisation
        /// </para>
        /// </summary>
        public CI_Contact()
        {
            SetInnerType(new CI_Contact_Type());
        }

        /// <summary>
        /// <para>
        /// Information required enabling contact with the  responsible person and/or organisation
        /// </para>
        /// </summary>
        public CI_Contact(CI_Contact_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public CI_Contact_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (phone?, address?, onlineResource?, hoursOfService?, contactInstructions?)
        /// </para>
        /// </summary>
        public CI_Telephone_PropertyType phone
        {
            get
            {
                return this.ContentField.phone;
            }
            set
            {
                this.ContentField.phone=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (phone?, address?, onlineResource?, hoursOfService?, contactInstructions?)
        /// </para>
        /// </summary>
        public CI_Address_PropertyType address
        {
            get
            {
                return this.ContentField.address;
            }
            set
            {
                this.ContentField.address=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (phone?, address?, onlineResource?, hoursOfService?, contactInstructions?)
        /// </para>
        /// </summary>
        public CI_OnlineResource_PropertyType onlineResource
        {
            get
            {
                return this.ContentField.onlineResource;
            }
            set
            {
                this.ContentField.onlineResource=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (phone?, address?, onlineResource?, hoursOfService?, contactInstructions?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType hoursOfService
        {
            get
            {
                return this.ContentField.hoursOfService;
            }
            set
            {
                this.ContentField.hoursOfService=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (phone?, address?, onlineResource?, hoursOfService?, contactInstructions?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType contactInstructions
        {
            get
            {
                return this.ContentField.contactInstructions;
            }
            set
            {
                this.ContentField.contactInstructions=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_Contact", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static CI_Contact Load(string xmlFile)
        {
            return XTypedServices.Load<CI_Contact, CI_Contact_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CI_Contact Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<CI_Contact, CI_Contact_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CI_Contact Parse(string xml)
        {
            return XTypedServices.Parse<CI_Contact, CI_Contact_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new CI_Contact(((CI_Contact_Type)(this.Content.Clone())));
        }

        private void SetInnerType(CI_Contact_Type ContentField)
        {
            this.ContentField=((CI_Contact_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CI_ContactSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("CI_Contact", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Telephone numbers for contacting the responsible individual or organisation
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CI_TelephoneSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_Telephone: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private CI_Telephone_Type ContentField;

        public static explicit operator CI_Telephone(XElement xe) { return XTypedServices.ToXTypedElement<CI_Telephone, CI_Telephone_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Telephone numbers for contacting the responsible individual or organisation
        /// </para>
        /// </summary>
        public CI_Telephone()
        {
            SetInnerType(new CI_Telephone_Type());
        }

        /// <summary>
        /// <para>
        /// Telephone numbers for contacting the responsible individual or organisation
        /// </para>
        /// </summary>
        public CI_Telephone(CI_Telephone_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public CI_Telephone_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (voice*, facsimile*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> voice
        {
            get
            {
                return this.ContentField.voice;
            }
            set
            {
                this.ContentField.voice=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (voice*, facsimile*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> facsimile
        {
            get
            {
                return this.ContentField.facsimile;
            }
            set
            {
                this.ContentField.facsimile=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_Telephone", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static CI_Telephone Load(string xmlFile)
        {
            return XTypedServices.Load<CI_Telephone, CI_Telephone_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CI_Telephone Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<CI_Telephone, CI_Telephone_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CI_Telephone Parse(string xml)
        {
            return XTypedServices.Parse<CI_Telephone, CI_Telephone_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new CI_Telephone(((CI_Telephone_Type)(this.Content.Clone())));
        }

        private void SetInnerType(CI_Telephone_Type ContentField)
        {
            this.ContentField=((CI_Telephone_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CI_TelephoneSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("CI_Telephone", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("CI_DateSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_Date: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private CI_Date_Type ContentField;

        public static explicit operator CI_Date(XElement xe) { return XTypedServices.ToXTypedElement<CI_Date, CI_Date_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public CI_Date()
        {
            SetInnerType(new CI_Date_Type());
        }

        public CI_Date(CI_Date_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public CI_Date_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (date, dateType)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Date_PropertyType date
        {
            get
            {
                return this.ContentField.date;
            }
            set
            {
                this.ContentField.date=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (date, dateType)
        /// </para>
        /// </summary>
        public CI_DateTypeCode_PropertyType dateType
        {
            get
            {
                return this.ContentField.dateType;
            }
            set
            {
                this.ContentField.dateType=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_Date", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static CI_Date Load(string xmlFile)
        {
            return XTypedServices.Load<CI_Date, CI_Date_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CI_Date Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<CI_Date, CI_Date_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CI_Date Parse(string xml)
        {
            return XTypedServices.Parse<CI_Date, CI_Date_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new CI_Date(((CI_Date_Type)(this.Content.Clone())));
        }

        private void SetInnerType(CI_Date_Type ContentField)
        {
            this.ContentField=((CI_Date_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CI_DateSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("CI_Date", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("CI_SeriesSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_Series: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private CI_Series_Type ContentField;

        public static explicit operator CI_Series(XElement xe) { return XTypedServices.ToXTypedElement<CI_Series, CI_Series_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public CI_Series()
        {
            SetInnerType(new CI_Series_Type());
        }

        public CI_Series(CI_Series_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public CI_Series_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name?, issueIdentification?, page?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType name
        {
            get
            {
                return this.ContentField.name;
            }
            set
            {
                this.ContentField.name=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name?, issueIdentification?, page?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType issueIdentification
        {
            get
            {
                return this.ContentField.issueIdentification;
            }
            set
            {
                this.ContentField.issueIdentification=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name?, issueIdentification?, page?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType page
        {
            get
            {
                return this.ContentField.page;
            }
            set
            {
                this.ContentField.page=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_Series", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static CI_Series Load(string xmlFile)
        {
            return XTypedServices.Load<CI_Series, CI_Series_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CI_Series Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<CI_Series, CI_Series_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CI_Series Parse(string xml)
        {
            return XTypedServices.Parse<CI_Series, CI_Series_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new CI_Series(((CI_Series_Type)(this.Content.Clone())));
        }

        private void SetInnerType(CI_Series_Type ContentField)
        {
            this.ContentField=((CI_Series_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CI_SeriesSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("CI_Series", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("URLSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class URL: XTypedElement, IXMetaData, IXmlSerializable
    {

        public static explicit operator URL(XElement xe) { return XTypedServices.ToXTypedElement<URL>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public URL()
        {
        }

        public URL(System.Uri content)
        {
            this.TypedValue=content;
        }

        public System.Uri TypedValue
        {
            get
            {
                XElement x=this.Untyped;
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("URL", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static URL Load(string xmlFile)
        {
            return XTypedServices.Load<URL>(xmlFile);
        }

        public static URL Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<URL>(xmlFile);
        }

        public static URL Parse(string xml)
        {
            return XTypedServices.Parse<URL>(xml);
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<URL>(this);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType URLSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("URL", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("CI_RoleCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_RoleCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator CI_RoleCode(XElement xe) { return XTypedServices.ToXTypedElement<CI_RoleCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public CI_RoleCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public CI_RoleCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_RoleCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static CI_RoleCode Load(string xmlFile)
        {
            return XTypedServices.Load<CI_RoleCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CI_RoleCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<CI_RoleCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static CI_RoleCode Parse(string xml)
        {
            return XTypedServices.Parse<CI_RoleCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new CI_RoleCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CI_RoleCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("CI_RoleCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("CI_PresentationFormCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_PresentationFormCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator CI_PresentationFormCode(XElement xe) { return XTypedServices.ToXTypedElement<CI_PresentationFormCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public CI_PresentationFormCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public CI_PresentationFormCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_PresentationFormCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static CI_PresentationFormCode Load(string xmlFile)
        {
            return XTypedServices.Load<CI_PresentationFormCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CI_PresentationFormCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<CI_PresentationFormCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static CI_PresentationFormCode Parse(string xml)
        {
            return XTypedServices.Parse<CI_PresentationFormCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new CI_PresentationFormCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CI_PresentationFormCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("CI_PresentationFormCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("CI_OnLineFunctionCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_OnLineFunctionCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator CI_OnLineFunctionCode(XElement xe) { return XTypedServices.ToXTypedElement<CI_OnLineFunctionCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public CI_OnLineFunctionCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public CI_OnLineFunctionCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_OnLineFunctionCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static CI_OnLineFunctionCode Load(string xmlFile)
        {
            return XTypedServices.Load<CI_OnLineFunctionCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CI_OnLineFunctionCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<CI_OnLineFunctionCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static CI_OnLineFunctionCode Parse(string xml)
        {
            return XTypedServices.Parse<CI_OnLineFunctionCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new CI_OnLineFunctionCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CI_OnLineFunctionCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("CI_OnLineFunctionCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("CI_DateTypeCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class CI_DateTypeCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator CI_DateTypeCode(XElement xe) { return XTypedServices.ToXTypedElement<CI_DateTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public CI_DateTypeCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public CI_DateTypeCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CI_DateTypeCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static CI_DateTypeCode Load(string xmlFile)
        {
            return XTypedServices.Load<CI_DateTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CI_DateTypeCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<CI_DateTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static CI_DateTypeCode Parse(string xml)
        {
            return XTypedServices.Parse<CI_DateTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new CI_DateTypeCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CI_DateTypeCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("CI_DateTypeCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Types and numbers of raster spatial objects in the dataset
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_GridSpatialRepresentationSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_GridSpatialRepresentation: global::GeoSik.Iso.Ts19139.Gmd.AbstractMD_SpatialRepresentation, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_GridSpatialRepresentation_Type ContentField;

        public static explicit operator MD_GridSpatialRepresentation(XElement xe) { return (MD_GridSpatialRepresentation)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected MD_GridSpatialRepresentation(bool setNull) :
            base(true)
        {
        }

        /// <summary>
        /// <para>
        /// Types and numbers of raster spatial objects in the dataset
        /// </para>
        /// </summary>
        public MD_GridSpatialRepresentation() :
            base(true)
        {
            SetInnerType(new MD_GridSpatialRepresentation_Type());
        }

        /// <summary>
        /// <para>
        /// Types and numbers of raster spatial objects in the dataset
        /// </para>
        /// </summary>
        public MD_GridSpatialRepresentation(MD_GridSpatialRepresentation_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                if ((this.ContentField!=null))
                {
                    this.ContentField.Untyped=value;
                }
            }
        }

        public new MD_GridSpatialRepresentation_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Integer_PropertyType numberOfDimensions
        {
            get
            {
                return this.ContentField.numberOfDimensions;
            }
            set
            {
                this.ContentField.numberOfDimensions=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability)
        /// </para>
        /// </summary>
        public IList<MD_Dimension_PropertyType> axisDimensionProperties
        {
            get
            {
                return this.ContentField.axisDimensionProperties;
            }
            set
            {
                this.ContentField.axisDimensionProperties=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability)
        /// </para>
        /// </summary>
        public MD_CellGeometryCode_PropertyType cellGeometry
        {
            get
            {
                return this.ContentField.cellGeometry;
            }
            set
            {
                this.ContentField.cellGeometry=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType transformationParameterAvailability
        {
            get
            {
                return this.ContentField.transformationParameterAvailability;
            }
            set
            {
                this.ContentField.transformationParameterAvailability=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_GridSpatialRepresentation", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_GridSpatialRepresentation Load(string xmlFile)
        {
            return ((MD_GridSpatialRepresentation)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static MD_GridSpatialRepresentation Load(System.IO.TextReader xmlFile)
        {
            return ((MD_GridSpatialRepresentation)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public new static MD_GridSpatialRepresentation Parse(string xml)
        {
            return ((MD_GridSpatialRepresentation)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        public override XTypedElement Clone()
        {
            return new MD_GridSpatialRepresentation(((MD_GridSpatialRepresentation_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_GridSpatialRepresentation_Type ContentField)
        {
            this.ContentField=((MD_GridSpatialRepresentation_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        protected virtual void SetSubstitutionMember(MD_GridSpatialRepresentation_Type ContentField)
        {
            this.ContentField=ContentField;
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_GridSpatialRepresentationSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_GridSpatialRepresentation", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Information about the vector spatial objects in the dataset
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_VectorSpatialRepresentationSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_VectorSpatialRepresentation: global::GeoSik.Iso.Ts19139.Gmd.AbstractMD_SpatialRepresentation, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_VectorSpatialRepresentation_Type ContentField;

        public static explicit operator MD_VectorSpatialRepresentation(XElement xe) { return XTypedServices.ToXTypedElement<MD_VectorSpatialRepresentation, MD_VectorSpatialRepresentation_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Information about the vector spatial objects in the dataset
        /// </para>
        /// </summary>
        public MD_VectorSpatialRepresentation() :
            base(true)
        {
            SetInnerType(new MD_VectorSpatialRepresentation_Type());
        }

        /// <summary>
        /// <para>
        /// Information about the vector spatial objects in the dataset
        /// </para>
        /// </summary>
        public MD_VectorSpatialRepresentation(MD_VectorSpatialRepresentation_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new MD_VectorSpatialRepresentation_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (topologyLevel?, geometricObjects*)
        /// </para>
        /// </summary>
        public MD_TopologyLevelCode_PropertyType topologyLevel
        {
            get
            {
                return this.ContentField.topologyLevel;
            }
            set
            {
                this.ContentField.topologyLevel=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (topologyLevel?, geometricObjects*)
        /// </para>
        /// </summary>
        public IList<MD_GeometricObjects_PropertyType> geometricObjects
        {
            get
            {
                return this.ContentField.geometricObjects;
            }
            set
            {
                this.ContentField.geometricObjects=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_VectorSpatialRepresentation", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_VectorSpatialRepresentation Load(string xmlFile)
        {
            return XTypedServices.Load<MD_VectorSpatialRepresentation, MD_VectorSpatialRepresentation_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_VectorSpatialRepresentation Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_VectorSpatialRepresentation, MD_VectorSpatialRepresentation_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_VectorSpatialRepresentation Parse(string xml)
        {
            return XTypedServices.Parse<MD_VectorSpatialRepresentation, MD_VectorSpatialRepresentation_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_VectorSpatialRepresentation(((MD_VectorSpatialRepresentation_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_VectorSpatialRepresentation_Type ContentField)
        {
            this.ContentField=((MD_VectorSpatialRepresentation_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_VectorSpatialRepresentationSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_VectorSpatialRepresentation", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Digital mechanism used to represent spatial information
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("AbstractMD_SpatialRepresentationSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractMD_SpatialRepresentation: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private AbstractMD_SpatialRepresentation_Type ContentField;

        public static explicit operator AbstractMD_SpatialRepresentation(XElement xe) { return (AbstractMD_SpatialRepresentation)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected AbstractMD_SpatialRepresentation(bool setNull)
        {
        }

        /// <summary>
        /// <para>
        /// Digital mechanism used to represent spatial information
        /// </para>
        /// </summary>
        public AbstractMD_SpatialRepresentation()
        {
            throw new InvalidOperationException();
        }

        /// <summary>
        /// <para>
        /// Digital mechanism used to represent spatial information
        /// </para>
        /// </summary>
        public AbstractMD_SpatialRepresentation(AbstractMD_SpatialRepresentation_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                if ((this.ContentField!=null))
                {
                    this.ContentField.Untyped=value;
                }
            }
        }

        public AbstractMD_SpatialRepresentation_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractMD_SpatialRepresentation", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static AbstractMD_SpatialRepresentation Load(string xmlFile)
        {
            return ((AbstractMD_SpatialRepresentation)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractMD_SpatialRepresentation Load(System.IO.TextReader xmlFile)
        {
            return ((AbstractMD_SpatialRepresentation)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractMD_SpatialRepresentation Parse(string xml)
        {
            return ((AbstractMD_SpatialRepresentation)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        private void SetInnerType(AbstractMD_SpatialRepresentation_Type ContentField)
        {
            this.ContentField=((AbstractMD_SpatialRepresentation_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        protected virtual void SetSubstitutionMember(AbstractMD_SpatialRepresentation_Type ContentField)
        {
            this.ContentField=ContentField;
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType AbstractMD_SpatialRepresentationSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("AbstractMD_SpatialRepresentation", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_GeoreferenceableSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Georeferenceable: global::GeoSik.Iso.Ts19139.Gmd.MD_GridSpatialRepresentation, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_Georeferenceable_Type ContentField;

        public static explicit operator MD_Georeferenceable(XElement xe) { return XTypedServices.ToXTypedElement<MD_Georeferenceable, MD_Georeferenceable_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_Georeferenceable() :
            base(true)
        {
            SetInnerType(new MD_Georeferenceable_Type());
        }

        public MD_Georeferenceable(MD_Georeferenceable_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new MD_Georeferenceable_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, controlPointAvailability, orientationParameterAvailability, orientationParameterDescription?, georeferencedParameters, parameterCitation*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType controlPointAvailability
        {
            get
            {
                return this.ContentField.controlPointAvailability;
            }
            set
            {
                this.ContentField.controlPointAvailability=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, controlPointAvailability, orientationParameterAvailability, orientationParameterDescription?, georeferencedParameters, parameterCitation*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType orientationParameterAvailability
        {
            get
            {
                return this.ContentField.orientationParameterAvailability;
            }
            set
            {
                this.ContentField.orientationParameterAvailability=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, controlPointAvailability, orientationParameterAvailability, orientationParameterDescription?, georeferencedParameters, parameterCitation*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType orientationParameterDescription
        {
            get
            {
                return this.ContentField.orientationParameterDescription;
            }
            set
            {
                this.ContentField.orientationParameterDescription=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, controlPointAvailability, orientationParameterAvailability, orientationParameterDescription?, georeferencedParameters, parameterCitation*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Record_PropertyType georeferencedParameters
        {
            get
            {
                return this.ContentField.georeferencedParameters;
            }
            set
            {
                this.ContentField.georeferencedParameters=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, controlPointAvailability, orientationParameterAvailability, orientationParameterDescription?, georeferencedParameters, parameterCitation*)
        /// </para>
        /// </summary>
        public IList<CI_Citation_PropertyType> parameterCitation
        {
            get
            {
                return this.ContentField.parameterCitation;
            }
            set
            {
                this.ContentField.parameterCitation=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Georeferenceable", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_Georeferenceable Load(string xmlFile)
        {
            return XTypedServices.Load<MD_Georeferenceable, MD_Georeferenceable_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_Georeferenceable Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_Georeferenceable, MD_Georeferenceable_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_Georeferenceable Parse(string xml)
        {
            return XTypedServices.Parse<MD_Georeferenceable, MD_Georeferenceable_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_Georeferenceable(((MD_Georeferenceable_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_Georeferenceable_Type ContentField)
        {
            this.ContentField=((MD_Georeferenceable_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_GeoreferenceableSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_Georeferenceable", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_DimensionSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Dimension: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_Dimension_Type ContentField;

        public static explicit operator MD_Dimension(XElement xe) { return XTypedServices.ToXTypedElement<MD_Dimension, MD_Dimension_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_Dimension()
        {
            SetInnerType(new MD_Dimension_Type());
        }

        public MD_Dimension(MD_Dimension_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_Dimension_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (dimensionName, dimensionSize, resolution?)
        /// </para>
        /// </summary>
        public MD_DimensionNameTypeCode_PropertyType dimensionName
        {
            get
            {
                return this.ContentField.dimensionName;
            }
            set
            {
                this.ContentField.dimensionName=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (dimensionName, dimensionSize, resolution?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Integer_PropertyType dimensionSize
        {
            get
            {
                return this.ContentField.dimensionSize;
            }
            set
            {
                this.ContentField.dimensionSize=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (dimensionName, dimensionSize, resolution?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Measure_PropertyType resolution
        {
            get
            {
                return this.ContentField.resolution;
            }
            set
            {
                this.ContentField.resolution=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Dimension", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_Dimension Load(string xmlFile)
        {
            return XTypedServices.Load<MD_Dimension, MD_Dimension_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_Dimension Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_Dimension, MD_Dimension_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_Dimension Parse(string xml)
        {
            return XTypedServices.Parse<MD_Dimension, MD_Dimension_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_Dimension(((MD_Dimension_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_Dimension_Type ContentField)
        {
            this.ContentField=((MD_Dimension_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_DimensionSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_Dimension", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_GeorectifiedSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Georectified: global::GeoSik.Iso.Ts19139.Gmd.MD_GridSpatialRepresentation, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_Georectified_Type ContentField;

        public static explicit operator MD_Georectified(XElement xe) { return XTypedServices.ToXTypedElement<MD_Georectified, MD_Georectified_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_Georectified() :
            base(true)
        {
            SetInnerType(new MD_Georectified_Type());
        }

        public MD_Georectified(MD_Georectified_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new MD_Georectified_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, checkPointAvailability, checkPointDescription?, cornerPoints*, centerPoint?, pointInPixel, transformationDimensionDescription?, transformationDimensionMapping*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType checkPointAvailability
        {
            get
            {
                return this.ContentField.checkPointAvailability;
            }
            set
            {
                this.ContentField.checkPointAvailability=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, checkPointAvailability, checkPointDescription?, cornerPoints*, centerPoint?, pointInPixel, transformationDimensionDescription?, transformationDimensionMapping*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType checkPointDescription
        {
            get
            {
                return this.ContentField.checkPointDescription;
            }
            set
            {
                this.ContentField.checkPointDescription=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, checkPointAvailability, checkPointDescription?, cornerPoints*, centerPoint?, pointInPixel, transformationDimensionDescription?, transformationDimensionMapping*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gss.GM_Point_PropertyType> cornerPoints
        {
            get
            {
                return this.ContentField.cornerPoints;
            }
            set
            {
                this.ContentField.cornerPoints=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, checkPointAvailability, checkPointDescription?, cornerPoints*, centerPoint?, pointInPixel, transformationDimensionDescription?, transformationDimensionMapping*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gss.GM_Point_PropertyType centerPoint
        {
            get
            {
                return this.ContentField.centerPoint;
            }
            set
            {
                this.ContentField.centerPoint=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, checkPointAvailability, checkPointDescription?, cornerPoints*, centerPoint?, pointInPixel, transformationDimensionDescription?, transformationDimensionMapping*)
        /// </para>
        /// </summary>
        public MD_PixelOrientationCode_PropertyType pointInPixel
        {
            get
            {
                return this.ContentField.pointInPixel;
            }
            set
            {
                this.ContentField.pointInPixel=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, checkPointAvailability, checkPointDescription?, cornerPoints*, centerPoint?, pointInPixel, transformationDimensionDescription?, transformationDimensionMapping*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType transformationDimensionDescription
        {
            get
            {
                return this.ContentField.transformationDimensionDescription;
            }
            set
            {
                this.ContentField.transformationDimensionDescription=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (numberOfDimensions, axisDimensionProperties*, cellGeometry, transformationParameterAvailability, checkPointAvailability, checkPointDescription?, cornerPoints*, centerPoint?, pointInPixel, transformationDimensionDescription?, transformationDimensionMapping*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> transformationDimensionMapping
        {
            get
            {
                return this.ContentField.transformationDimensionMapping;
            }
            set
            {
                this.ContentField.transformationDimensionMapping=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Georectified", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_Georectified Load(string xmlFile)
        {
            return XTypedServices.Load<MD_Georectified, MD_Georectified_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_Georectified Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_Georectified, MD_Georectified_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_Georectified Parse(string xml)
        {
            return XTypedServices.Parse<MD_Georectified, MD_Georectified_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_Georectified(((MD_Georectified_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_Georectified_Type ContentField)
        {
            this.ContentField=((MD_Georectified_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_GeorectifiedSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_Georectified", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_GeometricObjectsSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_GeometricObjects: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_GeometricObjects_Type ContentField;

        public static explicit operator MD_GeometricObjects(XElement xe) { return XTypedServices.ToXTypedElement<MD_GeometricObjects, MD_GeometricObjects_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_GeometricObjects()
        {
            SetInnerType(new MD_GeometricObjects_Type());
        }

        public MD_GeometricObjects(MD_GeometricObjects_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_GeometricObjects_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (geometricObjectType, geometricObjectCount?)
        /// </para>
        /// </summary>
        public MD_GeometricObjectTypeCode_PropertyType geometricObjectType
        {
            get
            {
                return this.ContentField.geometricObjectType;
            }
            set
            {
                this.ContentField.geometricObjectType=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (geometricObjectType, geometricObjectCount?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Integer_PropertyType geometricObjectCount
        {
            get
            {
                return this.ContentField.geometricObjectCount;
            }
            set
            {
                this.ContentField.geometricObjectCount=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_GeometricObjects", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_GeometricObjects Load(string xmlFile)
        {
            return XTypedServices.Load<MD_GeometricObjects, MD_GeometricObjects_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_GeometricObjects Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_GeometricObjects, MD_GeometricObjects_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_GeometricObjects Parse(string xml)
        {
            return XTypedServices.Parse<MD_GeometricObjects, MD_GeometricObjects_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_GeometricObjects(((MD_GeometricObjects_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_GeometricObjects_Type ContentField)
        {
            this.ContentField=((MD_GeometricObjects_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_GeometricObjectsSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_GeometricObjects", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_PixelOrientationCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_PixelOrientationCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        public static explicit operator MD_PixelOrientationCode(XElement xe) { return XTypedServices.ToXTypedElement<MD_PixelOrientationCode>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_PixelOrientationCode()
        {
        }

        public MD_PixelOrientationCode(string content)
        {
            this.TypedValue=content;
        }

        public new string TypedValue
        {
            get
            {
                XElement x=this.Untyped;
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetValueWithValidation(value, "TypedValue", global::GeoSik.Iso.Ts19139.Gmd.MD_PixelOrientationCode_Type.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_PixelOrientationCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_PixelOrientationCode Load(string xmlFile)
        {
            return XTypedServices.Load<MD_PixelOrientationCode>(xmlFile);
        }

        public static MD_PixelOrientationCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_PixelOrientationCode>(xmlFile);
        }

        public new static MD_PixelOrientationCode Parse(string xml)
        {
            return XTypedServices.Parse<MD_PixelOrientationCode>(xml);
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_PixelOrientationCode>(this);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_PixelOrientationCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_PixelOrientationCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_TopologyLevelCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_TopologyLevelCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator MD_TopologyLevelCode(XElement xe) { return XTypedServices.ToXTypedElement<MD_TopologyLevelCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_TopologyLevelCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public MD_TopologyLevelCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_TopologyLevelCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_TopologyLevelCode Load(string xmlFile)
        {
            return XTypedServices.Load<MD_TopologyLevelCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_TopologyLevelCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_TopologyLevelCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_TopologyLevelCode Parse(string xml)
        {
            return XTypedServices.Parse<MD_TopologyLevelCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_TopologyLevelCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_TopologyLevelCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_TopologyLevelCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_GeometricObjectTypeCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_GeometricObjectTypeCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator MD_GeometricObjectTypeCode(XElement xe) { return XTypedServices.ToXTypedElement<MD_GeometricObjectTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_GeometricObjectTypeCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public MD_GeometricObjectTypeCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_GeometricObjectTypeCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_GeometricObjectTypeCode Load(string xmlFile)
        {
            return XTypedServices.Load<MD_GeometricObjectTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_GeometricObjectTypeCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_GeometricObjectTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_GeometricObjectTypeCode Parse(string xml)
        {
            return XTypedServices.Parse<MD_GeometricObjectTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_GeometricObjectTypeCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_GeometricObjectTypeCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_GeometricObjectTypeCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_CellGeometryCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_CellGeometryCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator MD_CellGeometryCode(XElement xe) { return XTypedServices.ToXTypedElement<MD_CellGeometryCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_CellGeometryCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public MD_CellGeometryCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_CellGeometryCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_CellGeometryCode Load(string xmlFile)
        {
            return XTypedServices.Load<MD_CellGeometryCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_CellGeometryCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_CellGeometryCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_CellGeometryCode Parse(string xml)
        {
            return XTypedServices.Parse<MD_CellGeometryCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_CellGeometryCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_CellGeometryCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_CellGeometryCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_DimensionNameTypeCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_DimensionNameTypeCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator MD_DimensionNameTypeCode(XElement xe) { return XTypedServices.ToXTypedElement<MD_DimensionNameTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_DimensionNameTypeCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public MD_DimensionNameTypeCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_DimensionNameTypeCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_DimensionNameTypeCode Load(string xmlFile)
        {
            return XTypedServices.Load<MD_DimensionNameTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_DimensionNameTypeCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_DimensionNameTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_DimensionNameTypeCode Parse(string xml)
        {
            return XTypedServices.Parse<MD_DimensionNameTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_DimensionNameTypeCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_DimensionNameTypeCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_DimensionNameTypeCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// New metadata element, not found in ISO 19115, which is required to describe geographic data
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ExtendedElementInformationSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ExtendedElementInformation: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_ExtendedElementInformation_Type ContentField;

        public static explicit operator MD_ExtendedElementInformation(XElement xe) { return XTypedServices.ToXTypedElement<MD_ExtendedElementInformation, MD_ExtendedElementInformation_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// New metadata element, not found in ISO 19115, which is required to describe geographic data
        /// </para>
        /// </summary>
        public MD_ExtendedElementInformation()
        {
            SetInnerType(new MD_ExtendedElementInformation_Type());
        }

        /// <summary>
        /// <para>
        /// New metadata element, not found in ISO 19115, which is required to describe geographic data
        /// </para>
        /// </summary>
        public MD_ExtendedElementInformation(MD_ExtendedElementInformation_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_ExtendedElementInformation_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType name
        {
            get
            {
                return this.ContentField.name;
            }
            set
            {
                this.ContentField.name=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType shortName
        {
            get
            {
                return this.ContentField.shortName;
            }
            set
            {
                this.ContentField.shortName=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Integer_PropertyType domainCode
        {
            get
            {
                return this.ContentField.domainCode;
            }
            set
            {
                this.ContentField.domainCode=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType definition
        {
            get
            {
                return this.ContentField.definition;
            }
            set
            {
                this.ContentField.definition=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public MD_ObligationCode_PropertyType obligation
        {
            get
            {
                return this.ContentField.obligation;
            }
            set
            {
                this.ContentField.obligation=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType condition
        {
            get
            {
                return this.ContentField.condition;
            }
            set
            {
                this.ContentField.condition=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public MD_DatatypeCode_PropertyType dataType
        {
            get
            {
                return this.ContentField.dataType;
            }
            set
            {
                this.ContentField.dataType=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType maximumOccurrence
        {
            get
            {
                return this.ContentField.maximumOccurrence;
            }
            set
            {
                this.ContentField.maximumOccurrence=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType domainValue
        {
            get
            {
                return this.ContentField.domainValue;
            }
            set
            {
                this.ContentField.domainValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> parentEntity
        {
            get
            {
                return this.ContentField.parentEntity;
            }
            set
            {
                this.ContentField.parentEntity=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType rule
        {
            get
            {
                return this.ContentField.rule;
            }
            set
            {
                this.ContentField.rule=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> rationale
        {
            get
            {
                return this.ContentField.rationale;
            }
            set
            {
                this.ContentField.rationale=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, shortName?, domainCode?, definition, obligation?, condition?, dataType, maximumOccurrence?, domainValue?, parentEntity+, rule, rationale*, source+)
        /// </para>
        /// </summary>
        public IList<CI_ResponsibleParty_PropertyType> source
        {
            get
            {
                return this.ContentField.source;
            }
            set
            {
                this.ContentField.source=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ExtendedElementInformation", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_ExtendedElementInformation Load(string xmlFile)
        {
            return XTypedServices.Load<MD_ExtendedElementInformation, MD_ExtendedElementInformation_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_ExtendedElementInformation Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_ExtendedElementInformation, MD_ExtendedElementInformation_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_ExtendedElementInformation Parse(string xml)
        {
            return XTypedServices.Parse<MD_ExtendedElementInformation, MD_ExtendedElementInformation_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_ExtendedElementInformation(((MD_ExtendedElementInformation_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_ExtendedElementInformation_Type ContentField)
        {
            this.ContentField=((MD_ExtendedElementInformation_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_ExtendedElementInformationSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_ExtendedElementInformation", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Information describing metadata extensions.
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_MetadataExtensionInformationSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_MetadataExtensionInformation: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_MetadataExtensionInformation_Type ContentField;

        public static explicit operator MD_MetadataExtensionInformation(XElement xe) { return XTypedServices.ToXTypedElement<MD_MetadataExtensionInformation, MD_MetadataExtensionInformation_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Information describing metadata extensions.
        /// </para>
        /// </summary>
        public MD_MetadataExtensionInformation()
        {
            SetInnerType(new MD_MetadataExtensionInformation_Type());
        }

        /// <summary>
        /// <para>
        /// Information describing metadata extensions.
        /// </para>
        /// </summary>
        public MD_MetadataExtensionInformation(MD_MetadataExtensionInformation_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_MetadataExtensionInformation_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (extensionOnLineResource?, extendedElementInformation*)
        /// </para>
        /// </summary>
        public CI_OnlineResource_PropertyType extensionOnLineResource
        {
            get
            {
                return this.ContentField.extensionOnLineResource;
            }
            set
            {
                this.ContentField.extensionOnLineResource=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (extensionOnLineResource?, extendedElementInformation*)
        /// </para>
        /// </summary>
        public IList<MD_ExtendedElementInformation_PropertyType> extendedElementInformation
        {
            get
            {
                return this.ContentField.extendedElementInformation;
            }
            set
            {
                this.ContentField.extendedElementInformation=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_MetadataExtensionInformation", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_MetadataExtensionInformation Load(string xmlFile)
        {
            return XTypedServices.Load<MD_MetadataExtensionInformation, MD_MetadataExtensionInformation_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_MetadataExtensionInformation Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_MetadataExtensionInformation, MD_MetadataExtensionInformation_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_MetadataExtensionInformation Parse(string xml)
        {
            return XTypedServices.Parse<MD_MetadataExtensionInformation, MD_MetadataExtensionInformation_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_MetadataExtensionInformation(((MD_MetadataExtensionInformation_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_MetadataExtensionInformation_Type ContentField)
        {
            this.ContentField=((MD_MetadataExtensionInformation_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_MetadataExtensionInformationSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_MetadataExtensionInformation", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_ObligationCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ObligationCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        public static explicit operator MD_ObligationCode(XElement xe) { return XTypedServices.ToXTypedElement<MD_ObligationCode>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_ObligationCode()
        {
        }

        public MD_ObligationCode(string content)
        {
            this.TypedValue=content;
        }

        public new string TypedValue
        {
            get
            {
                XElement x=this.Untyped;
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetValueWithValidation(value, "TypedValue", global::GeoSik.Iso.Ts19139.Gmd.MD_ObligationCode_Type.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ObligationCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_ObligationCode Load(string xmlFile)
        {
            return XTypedServices.Load<MD_ObligationCode>(xmlFile);
        }

        public static MD_ObligationCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_ObligationCode>(xmlFile);
        }

        public new static MD_ObligationCode Parse(string xml)
        {
            return XTypedServices.Parse<MD_ObligationCode>(xml);
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_ObligationCode>(this);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_ObligationCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_ObligationCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_DatatypeCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_DatatypeCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator MD_DatatypeCode(XElement xe) { return XTypedServices.ToXTypedElement<MD_DatatypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_DatatypeCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public MD_DatatypeCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_DatatypeCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_DatatypeCode Load(string xmlFile)
        {
            return XTypedServices.Load<MD_DatatypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_DatatypeCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_DatatypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_DatatypeCode Parse(string xml)
        {
            return XTypedServices.Parse<MD_DatatypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_DatatypeCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_DatatypeCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_DatatypeCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Information identifing the feature catalogue
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_FeatureCatalogueDescriptionSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_FeatureCatalogueDescription: global::GeoSik.Iso.Ts19139.Gmd.AbstractMD_ContentInformation, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_FeatureCatalogueDescription_Type ContentField;

        public static explicit operator MD_FeatureCatalogueDescription(XElement xe) { return XTypedServices.ToXTypedElement<MD_FeatureCatalogueDescription, MD_FeatureCatalogueDescription_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Information identifing the feature catalogue
        /// </para>
        /// </summary>
        public MD_FeatureCatalogueDescription() :
            base(true)
        {
            SetInnerType(new MD_FeatureCatalogueDescription_Type());
        }

        /// <summary>
        /// <para>
        /// Information identifing the feature catalogue
        /// </para>
        /// </summary>
        public MD_FeatureCatalogueDescription(MD_FeatureCatalogueDescription_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new MD_FeatureCatalogueDescription_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (complianceCode?, language*, includedWithDataset, featureTypes*, featureCatalogueCitation+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType complianceCode
        {
            get
            {
                return this.ContentField.complianceCode;
            }
            set
            {
                this.ContentField.complianceCode=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (complianceCode?, language*, includedWithDataset, featureTypes*, featureCatalogueCitation+)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> language
        {
            get
            {
                return this.ContentField.language;
            }
            set
            {
                this.ContentField.language=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (complianceCode?, language*, includedWithDataset, featureTypes*, featureCatalogueCitation+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType includedWithDataset
        {
            get
            {
                return this.ContentField.includedWithDataset;
            }
            set
            {
                this.ContentField.includedWithDataset=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (complianceCode?, language*, includedWithDataset, featureTypes*, featureCatalogueCitation+)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.GenericName_PropertyType> featureTypes
        {
            get
            {
                return this.ContentField.featureTypes;
            }
            set
            {
                this.ContentField.featureTypes=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (complianceCode?, language*, includedWithDataset, featureTypes*, featureCatalogueCitation+)
        /// </para>
        /// </summary>
        public IList<CI_Citation_PropertyType> featureCatalogueCitation
        {
            get
            {
                return this.ContentField.featureCatalogueCitation;
            }
            set
            {
                this.ContentField.featureCatalogueCitation=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_FeatureCatalogueDescription", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_FeatureCatalogueDescription Load(string xmlFile)
        {
            return XTypedServices.Load<MD_FeatureCatalogueDescription, MD_FeatureCatalogueDescription_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_FeatureCatalogueDescription Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_FeatureCatalogueDescription, MD_FeatureCatalogueDescription_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_FeatureCatalogueDescription Parse(string xml)
        {
            return XTypedServices.Parse<MD_FeatureCatalogueDescription, MD_FeatureCatalogueDescription_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_FeatureCatalogueDescription(((MD_FeatureCatalogueDescription_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_FeatureCatalogueDescription_Type ContentField)
        {
            this.ContentField=((MD_FeatureCatalogueDescription_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_FeatureCatalogueDescriptionSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_FeatureCatalogueDescription", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Information about the domain of the raster cell
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_CoverageDescriptionSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_CoverageDescription: global::GeoSik.Iso.Ts19139.Gmd.AbstractMD_ContentInformation, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_CoverageDescription_Type ContentField;

        public static explicit operator MD_CoverageDescription(XElement xe) { return (MD_CoverageDescription)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected MD_CoverageDescription(bool setNull) :
            base(true)
        {
        }

        /// <summary>
        /// <para>
        /// Information about the domain of the raster cell
        /// </para>
        /// </summary>
        public MD_CoverageDescription() :
            base(true)
        {
            SetInnerType(new MD_CoverageDescription_Type());
        }

        /// <summary>
        /// <para>
        /// Information about the domain of the raster cell
        /// </para>
        /// </summary>
        public MD_CoverageDescription(MD_CoverageDescription_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                if ((this.ContentField!=null))
                {
                    this.ContentField.Untyped=value;
                }
            }
        }

        public new MD_CoverageDescription_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.RecordType_PropertyType attributeDescription
        {
            get
            {
                return this.ContentField.attributeDescription;
            }
            set
            {
                this.ContentField.attributeDescription=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*)
        /// </para>
        /// </summary>
        public MD_CoverageContentTypeCode_PropertyType contentType
        {
            get
            {
                return this.ContentField.contentType;
            }
            set
            {
                this.ContentField.contentType=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*)
        /// </para>
        /// </summary>
        public IList<MD_RangeDimension_PropertyType> dimension
        {
            get
            {
                return this.ContentField.dimension;
            }
            set
            {
                this.ContentField.dimension=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_CoverageDescription", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_CoverageDescription Load(string xmlFile)
        {
            return ((MD_CoverageDescription)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static MD_CoverageDescription Load(System.IO.TextReader xmlFile)
        {
            return ((MD_CoverageDescription)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public new static MD_CoverageDescription Parse(string xml)
        {
            return ((MD_CoverageDescription)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        public override XTypedElement Clone()
        {
            return new MD_CoverageDescription(((MD_CoverageDescription_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_CoverageDescription_Type ContentField)
        {
            this.ContentField=((MD_CoverageDescription_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        protected virtual void SetSubstitutionMember(MD_CoverageDescription_Type ContentField)
        {
            this.ContentField=ContentField;
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_CoverageDescriptionSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_CoverageDescription", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Information about an image's suitability for use
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ImageDescriptionSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ImageDescription: global::GeoSik.Iso.Ts19139.Gmd.MD_CoverageDescription, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_ImageDescription_Type ContentField;

        public static explicit operator MD_ImageDescription(XElement xe) { return XTypedServices.ToXTypedElement<MD_ImageDescription, MD_ImageDescription_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Information about an image's suitability for use
        /// </para>
        /// </summary>
        public MD_ImageDescription() :
            base(true)
        {
            SetInnerType(new MD_ImageDescription_Type());
        }

        /// <summary>
        /// <para>
        /// Information about an image's suitability for use
        /// </para>
        /// </summary>
        public MD_ImageDescription(MD_ImageDescription_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new MD_ImageDescription_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType illuminationElevationAngle
        {
            get
            {
                return this.ContentField.illuminationElevationAngle;
            }
            set
            {
                this.ContentField.illuminationElevationAngle=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType illuminationAzimuthAngle
        {
            get
            {
                return this.ContentField.illuminationAzimuthAngle;
            }
            set
            {
                this.ContentField.illuminationAzimuthAngle=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public MD_ImagingConditionCode_PropertyType imagingCondition
        {
            get
            {
                return this.ContentField.imagingCondition;
            }
            set
            {
                this.ContentField.imagingCondition=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public MD_Identifier_PropertyType imageQualityCode
        {
            get
            {
                return this.ContentField.imageQualityCode;
            }
            set
            {
                this.ContentField.imageQualityCode=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType cloudCoverPercentage
        {
            get
            {
                return this.ContentField.cloudCoverPercentage;
            }
            set
            {
                this.ContentField.cloudCoverPercentage=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public MD_Identifier_PropertyType processingLevelCode
        {
            get
            {
                return this.ContentField.processingLevelCode;
            }
            set
            {
                this.ContentField.processingLevelCode=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Integer_PropertyType compressionGenerationQuantity
        {
            get
            {
                return this.ContentField.compressionGenerationQuantity;
            }
            set
            {
                this.ContentField.compressionGenerationQuantity=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType triangulationIndicator
        {
            get
            {
                return this.ContentField.triangulationIndicator;
            }
            set
            {
                this.ContentField.triangulationIndicator=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType radiometricCalibrationDataAvailability
        {
            get
            {
                return this.ContentField.radiometricCalibrationDataAvailability;
            }
            set
            {
                this.ContentField.radiometricCalibrationDataAvailability=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType cameraCalibrationInformationAvailability
        {
            get
            {
                return this.ContentField.cameraCalibrationInformationAvailability;
            }
            set
            {
                this.ContentField.cameraCalibrationInformationAvailability=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType filmDistortionInformationAvailability
        {
            get
            {
                return this.ContentField.filmDistortionInformationAvailability;
            }
            set
            {
                this.ContentField.filmDistortionInformationAvailability=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (attributeDescription, contentType, dimension*, illuminationElevationAngle?, illuminationAzimuthAngle?, imagingCondition?, imageQualityCode?, cloudCoverPercentage?, processingLevelCode?, compressionGenerationQuantity?, triangulationIndicator?, radiometricCalibrationDataAvailability?, cameraCalibrationInformationAvailability?, filmDistortionInformationAvailability?, lensDistortionInformationAvailability?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType lensDistortionInformationAvailability
        {
            get
            {
                return this.ContentField.lensDistortionInformationAvailability;
            }
            set
            {
                this.ContentField.lensDistortionInformationAvailability=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ImageDescription", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_ImageDescription Load(string xmlFile)
        {
            return XTypedServices.Load<MD_ImageDescription, MD_ImageDescription_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_ImageDescription Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_ImageDescription, MD_ImageDescription_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_ImageDescription Parse(string xml)
        {
            return XTypedServices.Parse<MD_ImageDescription, MD_ImageDescription_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_ImageDescription(((MD_ImageDescription_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_ImageDescription_Type ContentField)
        {
            this.ContentField=((MD_ImageDescription_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_ImageDescriptionSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_ImageDescription", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("AbstractMD_ContentInformationSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractMD_ContentInformation: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private AbstractMD_ContentInformation_Type ContentField;

        public static explicit operator AbstractMD_ContentInformation(XElement xe) { return (AbstractMD_ContentInformation)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected AbstractMD_ContentInformation(bool setNull)
        {
        }

        public AbstractMD_ContentInformation()
        {
            throw new InvalidOperationException();
        }

        public AbstractMD_ContentInformation(AbstractMD_ContentInformation_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                if ((this.ContentField!=null))
                {
                    this.ContentField.Untyped=value;
                }
            }
        }

        public AbstractMD_ContentInformation_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractMD_ContentInformation", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static AbstractMD_ContentInformation Load(string xmlFile)
        {
            return ((AbstractMD_ContentInformation)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractMD_ContentInformation Load(System.IO.TextReader xmlFile)
        {
            return ((AbstractMD_ContentInformation)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractMD_ContentInformation Parse(string xml)
        {
            return ((AbstractMD_ContentInformation)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        private void SetInnerType(AbstractMD_ContentInformation_Type ContentField)
        {
            this.ContentField=((AbstractMD_ContentInformation_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        protected virtual void SetSubstitutionMember(AbstractMD_ContentInformation_Type ContentField)
        {
            this.ContentField=ContentField;
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType AbstractMD_ContentInformationSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("AbstractMD_ContentInformation", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Set of adjacent wavelengths in the electro-magnetic spectrum with a common characteristic, such as the visible band
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_RangeDimensionSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_RangeDimension: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_RangeDimension_Type ContentField;

        public static explicit operator MD_RangeDimension(XElement xe) { return (MD_RangeDimension)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected MD_RangeDimension(bool setNull)
        {
        }

        /// <summary>
        /// <para>
        /// Set of adjacent wavelengths in the electro-magnetic spectrum with a common characteristic, such as the visible band
        /// </para>
        /// </summary>
        public MD_RangeDimension()
        {
            SetInnerType(new MD_RangeDimension_Type());
        }

        /// <summary>
        /// <para>
        /// Set of adjacent wavelengths in the electro-magnetic spectrum with a common characteristic, such as the visible band
        /// </para>
        /// </summary>
        public MD_RangeDimension(MD_RangeDimension_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                if ((this.ContentField!=null))
                {
                    this.ContentField.Untyped=value;
                }
            }
        }

        public MD_RangeDimension_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.MemberName_PropertyType sequenceIdentifier
        {
            get
            {
                return this.ContentField.sequenceIdentifier;
            }
            set
            {
                this.ContentField.sequenceIdentifier=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType descriptor
        {
            get
            {
                return this.ContentField.descriptor;
            }
            set
            {
                this.ContentField.descriptor=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_RangeDimension", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_RangeDimension Load(string xmlFile)
        {
            return ((MD_RangeDimension)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static MD_RangeDimension Load(System.IO.TextReader xmlFile)
        {
            return ((MD_RangeDimension)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static MD_RangeDimension Parse(string xml)
        {
            return ((MD_RangeDimension)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        public override XTypedElement Clone()
        {
            return new MD_RangeDimension(((MD_RangeDimension_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_RangeDimension_Type ContentField)
        {
            this.ContentField=((MD_RangeDimension_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        protected virtual void SetSubstitutionMember(MD_RangeDimension_Type ContentField)
        {
            this.ContentField=ContentField;
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_RangeDimensionSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_RangeDimension", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_BandSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Band: global::GeoSik.Iso.Ts19139.Gmd.MD_RangeDimension, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_Band_Type ContentField;

        public static explicit operator MD_Band(XElement xe) { return XTypedServices.ToXTypedElement<MD_Band, MD_Band_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_Band() :
            base(true)
        {
            SetInnerType(new MD_Band_Type());
        }

        public MD_Band(MD_Band_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new MD_Band_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?, maxValue?, minValue?, units?, peakResponse?, bitsPerValue?, toneGradation?, scaleFactor?, offset?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType maxValue
        {
            get
            {
                return this.ContentField.maxValue;
            }
            set
            {
                this.ContentField.maxValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?, maxValue?, minValue?, units?, peakResponse?, bitsPerValue?, toneGradation?, scaleFactor?, offset?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType minValue
        {
            get
            {
                return this.ContentField.minValue;
            }
            set
            {
                this.ContentField.minValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?, maxValue?, minValue?, units?, peakResponse?, bitsPerValue?, toneGradation?, scaleFactor?, offset?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.UomLength_PropertyType units
        {
            get
            {
                return this.ContentField.units;
            }
            set
            {
                this.ContentField.units=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?, maxValue?, minValue?, units?, peakResponse?, bitsPerValue?, toneGradation?, scaleFactor?, offset?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType peakResponse
        {
            get
            {
                return this.ContentField.peakResponse;
            }
            set
            {
                this.ContentField.peakResponse=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?, maxValue?, minValue?, units?, peakResponse?, bitsPerValue?, toneGradation?, scaleFactor?, offset?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Integer_PropertyType bitsPerValue
        {
            get
            {
                return this.ContentField.bitsPerValue;
            }
            set
            {
                this.ContentField.bitsPerValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?, maxValue?, minValue?, units?, peakResponse?, bitsPerValue?, toneGradation?, scaleFactor?, offset?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Integer_PropertyType toneGradation
        {
            get
            {
                return this.ContentField.toneGradation;
            }
            set
            {
                this.ContentField.toneGradation=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?, maxValue?, minValue?, units?, peakResponse?, bitsPerValue?, toneGradation?, scaleFactor?, offset?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType scaleFactor
        {
            get
            {
                return this.ContentField.scaleFactor;
            }
            set
            {
                this.ContentField.scaleFactor=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (sequenceIdentifier?, descriptor?, maxValue?, minValue?, units?, peakResponse?, bitsPerValue?, toneGradation?, scaleFactor?, offset?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType offset
        {
            get
            {
                return this.ContentField.offset;
            }
            set
            {
                this.ContentField.offset=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Band", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_Band Load(string xmlFile)
        {
            return XTypedServices.Load<MD_Band, MD_Band_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_Band Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_Band, MD_Band_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_Band Parse(string xml)
        {
            return XTypedServices.Parse<MD_Band, MD_Band_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_Band(((MD_Band_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_Band_Type ContentField)
        {
            this.ContentField=((MD_Band_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_BandSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_Band", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_CoverageContentTypeCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_CoverageContentTypeCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator MD_CoverageContentTypeCode(XElement xe) { return XTypedServices.ToXTypedElement<MD_CoverageContentTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_CoverageContentTypeCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public MD_CoverageContentTypeCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_CoverageContentTypeCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_CoverageContentTypeCode Load(string xmlFile)
        {
            return XTypedServices.Load<MD_CoverageContentTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_CoverageContentTypeCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_CoverageContentTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_CoverageContentTypeCode Parse(string xml)
        {
            return XTypedServices.Parse<MD_CoverageContentTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_CoverageContentTypeCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_CoverageContentTypeCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_CoverageContentTypeCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_ImagingConditionCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ImagingConditionCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator MD_ImagingConditionCode(XElement xe) { return XTypedServices.ToXTypedElement<MD_ImagingConditionCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_ImagingConditionCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public MD_ImagingConditionCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ImagingConditionCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_ImagingConditionCode Load(string xmlFile)
        {
            return XTypedServices.Load<MD_ImagingConditionCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_ImagingConditionCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_ImagingConditionCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_ImagingConditionCode Parse(string xml)
        {
            return XTypedServices.Parse<MD_ImagingConditionCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_ImagingConditionCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_ImagingConditionCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_ImagingConditionCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Information about the application schema used to build the dataset
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ApplicationSchemaInformationSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ApplicationSchemaInformation: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_ApplicationSchemaInformation_Type ContentField;

        public static explicit operator MD_ApplicationSchemaInformation(XElement xe) { return XTypedServices.ToXTypedElement<MD_ApplicationSchemaInformation, MD_ApplicationSchemaInformation_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Information about the application schema used to build the dataset
        /// </para>
        /// </summary>
        public MD_ApplicationSchemaInformation()
        {
            SetInnerType(new MD_ApplicationSchemaInformation_Type());
        }

        /// <summary>
        /// <para>
        /// Information about the application schema used to build the dataset
        /// </para>
        /// </summary>
        public MD_ApplicationSchemaInformation(MD_ApplicationSchemaInformation_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_ApplicationSchemaInformation_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, schemaLanguage, constraintLanguage, schemaAscii?, graphicsFile?, softwareDevelopmentFile?, softwareDevelopmentFileFormat?)
        /// </para>
        /// </summary>
        public CI_Citation_PropertyType name
        {
            get
            {
                return this.ContentField.name;
            }
            set
            {
                this.ContentField.name=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, schemaLanguage, constraintLanguage, schemaAscii?, graphicsFile?, softwareDevelopmentFile?, softwareDevelopmentFileFormat?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType schemaLanguage
        {
            get
            {
                return this.ContentField.schemaLanguage;
            }
            set
            {
                this.ContentField.schemaLanguage=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, schemaLanguage, constraintLanguage, schemaAscii?, graphicsFile?, softwareDevelopmentFile?, softwareDevelopmentFileFormat?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType constraintLanguage
        {
            get
            {
                return this.ContentField.constraintLanguage;
            }
            set
            {
                this.ContentField.constraintLanguage=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, schemaLanguage, constraintLanguage, schemaAscii?, graphicsFile?, softwareDevelopmentFile?, softwareDevelopmentFileFormat?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType schemaAscii
        {
            get
            {
                return this.ContentField.schemaAscii;
            }
            set
            {
                this.ContentField.schemaAscii=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, schemaLanguage, constraintLanguage, schemaAscii?, graphicsFile?, softwareDevelopmentFile?, softwareDevelopmentFileFormat?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Binary_PropertyType graphicsFile
        {
            get
            {
                return this.ContentField.graphicsFile;
            }
            set
            {
                this.ContentField.graphicsFile=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, schemaLanguage, constraintLanguage, schemaAscii?, graphicsFile?, softwareDevelopmentFile?, softwareDevelopmentFileFormat?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Binary_PropertyType softwareDevelopmentFile
        {
            get
            {
                return this.ContentField.softwareDevelopmentFile;
            }
            set
            {
                this.ContentField.softwareDevelopmentFile=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, schemaLanguage, constraintLanguage, schemaAscii?, graphicsFile?, softwareDevelopmentFile?, softwareDevelopmentFileFormat?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType softwareDevelopmentFileFormat
        {
            get
            {
                return this.ContentField.softwareDevelopmentFileFormat;
            }
            set
            {
                this.ContentField.softwareDevelopmentFileFormat=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ApplicationSchemaInformation", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_ApplicationSchemaInformation Load(string xmlFile)
        {
            return XTypedServices.Load<MD_ApplicationSchemaInformation, MD_ApplicationSchemaInformation_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_ApplicationSchemaInformation Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_ApplicationSchemaInformation, MD_ApplicationSchemaInformation_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_ApplicationSchemaInformation Parse(string xml)
        {
            return XTypedServices.Parse<MD_ApplicationSchemaInformation, MD_ApplicationSchemaInformation_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_ApplicationSchemaInformation(((MD_ApplicationSchemaInformation_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_ApplicationSchemaInformation_Type ContentField)
        {
            this.ContentField=((MD_ApplicationSchemaInformation_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_ApplicationSchemaInformationSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_ApplicationSchemaInformation", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Information identifing the portrayal catalogue used
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_PortrayalCatalogueReferenceSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_PortrayalCatalogueReference: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_PortrayalCatalogueReference_Type ContentField;

        public static explicit operator MD_PortrayalCatalogueReference(XElement xe) { return XTypedServices.ToXTypedElement<MD_PortrayalCatalogueReference, MD_PortrayalCatalogueReference_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Information identifing the portrayal catalogue used
        /// </para>
        /// </summary>
        public MD_PortrayalCatalogueReference()
        {
            SetInnerType(new MD_PortrayalCatalogueReference_Type());
        }

        /// <summary>
        /// <para>
        /// Information identifing the portrayal catalogue used
        /// </para>
        /// </summary>
        public MD_PortrayalCatalogueReference(MD_PortrayalCatalogueReference_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_PortrayalCatalogueReference_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (portrayalCatalogueCitation+)
        /// </para>
        /// </summary>
        public IList<CI_Citation_PropertyType> portrayalCatalogueCitation
        {
            get
            {
                return this.ContentField.portrayalCatalogueCitation;
            }
            set
            {
                this.ContentField.portrayalCatalogueCitation=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_PortrayalCatalogueReference", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_PortrayalCatalogueReference Load(string xmlFile)
        {
            return XTypedServices.Load<MD_PortrayalCatalogueReference, MD_PortrayalCatalogueReference_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_PortrayalCatalogueReference Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_PortrayalCatalogueReference, MD_PortrayalCatalogueReference_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_PortrayalCatalogueReference Parse(string xml)
        {
            return XTypedServices.Parse<MD_PortrayalCatalogueReference, MD_PortrayalCatalogueReference_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_PortrayalCatalogueReference(((MD_PortrayalCatalogueReference_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_PortrayalCatalogueReference_Type ContentField)
        {
            this.ContentField=((MD_PortrayalCatalogueReference_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_PortrayalCatalogueReferenceSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_PortrayalCatalogueReference", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("LI_ProcessStepSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class LI_ProcessStep: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private LI_ProcessStep_Type ContentField;

        public static explicit operator LI_ProcessStep(XElement xe) { return XTypedServices.ToXTypedElement<LI_ProcessStep, LI_ProcessStep_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public LI_ProcessStep()
        {
            SetInnerType(new LI_ProcessStep_Type());
        }

        public LI_ProcessStep(LI_ProcessStep_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public LI_ProcessStep_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (description, rationale?, dateTime?, processor*, source*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType description
        {
            get
            {
                return this.ContentField.description;
            }
            set
            {
                this.ContentField.description=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (description, rationale?, dateTime?, processor*, source*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType rationale
        {
            get
            {
                return this.ContentField.rationale;
            }
            set
            {
                this.ContentField.rationale=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (description, rationale?, dateTime?, processor*, source*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType dateTime
        {
            get
            {
                return this.ContentField.dateTime;
            }
            set
            {
                this.ContentField.dateTime=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (description, rationale?, dateTime?, processor*, source*)
        /// </para>
        /// </summary>
        public IList<CI_ResponsibleParty_PropertyType> processor
        {
            get
            {
                return this.ContentField.processor;
            }
            set
            {
                this.ContentField.processor=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (description, rationale?, dateTime?, processor*, source*)
        /// </para>
        /// </summary>
        public IList<LI_Source_PropertyType> source
        {
            get
            {
                return this.ContentField.source;
            }
            set
            {
                this.ContentField.source=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("LI_ProcessStep", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static LI_ProcessStep Load(string xmlFile)
        {
            return XTypedServices.Load<LI_ProcessStep, LI_ProcessStep_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static LI_ProcessStep Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<LI_ProcessStep, LI_ProcessStep_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static LI_ProcessStep Parse(string xml)
        {
            return XTypedServices.Parse<LI_ProcessStep, LI_ProcessStep_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new LI_ProcessStep(((LI_ProcessStep_Type)(this.Content.Clone())));
        }

        private void SetInnerType(LI_ProcessStep_Type ContentField)
        {
            this.ContentField=((LI_ProcessStep_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType LI_ProcessStepSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("LI_ProcessStep", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("LI_SourceSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class LI_Source: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private LI_Source_Type ContentField;

        public static explicit operator LI_Source(XElement xe) { return XTypedServices.ToXTypedElement<LI_Source, LI_Source_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public LI_Source()
        {
            SetInnerType(new LI_Source_Type());
        }

        public LI_Source(LI_Source_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public LI_Source_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (description?, scaleDenominator?, sourceReferenceSystem?, sourceCitation?, sourceExtent*, sourceStep*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType description
        {
            get
            {
                return this.ContentField.description;
            }
            set
            {
                this.ContentField.description=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (description?, scaleDenominator?, sourceReferenceSystem?, sourceCitation?, sourceExtent*, sourceStep*)
        /// </para>
        /// </summary>
        public MD_RepresentativeFraction_PropertyType scaleDenominator
        {
            get
            {
                return this.ContentField.scaleDenominator;
            }
            set
            {
                this.ContentField.scaleDenominator=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (description?, scaleDenominator?, sourceReferenceSystem?, sourceCitation?, sourceExtent*, sourceStep*)
        /// </para>
        /// </summary>
        public MD_ReferenceSystem_PropertyType sourceReferenceSystem
        {
            get
            {
                return this.ContentField.sourceReferenceSystem;
            }
            set
            {
                this.ContentField.sourceReferenceSystem=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (description?, scaleDenominator?, sourceReferenceSystem?, sourceCitation?, sourceExtent*, sourceStep*)
        /// </para>
        /// </summary>
        public CI_Citation_PropertyType sourceCitation
        {
            get
            {
                return this.ContentField.sourceCitation;
            }
            set
            {
                this.ContentField.sourceCitation=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (description?, scaleDenominator?, sourceReferenceSystem?, sourceCitation?, sourceExtent*, sourceStep*)
        /// </para>
        /// </summary>
        public IList<EX_Extent_PropertyType> sourceExtent
        {
            get
            {
                return this.ContentField.sourceExtent;
            }
            set
            {
                this.ContentField.sourceExtent=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (description?, scaleDenominator?, sourceReferenceSystem?, sourceCitation?, sourceExtent*, sourceStep*)
        /// </para>
        /// </summary>
        public IList<LI_ProcessStep_PropertyType> sourceStep
        {
            get
            {
                return this.ContentField.sourceStep;
            }
            set
            {
                this.ContentField.sourceStep=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("LI_Source", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static LI_Source Load(string xmlFile)
        {
            return XTypedServices.Load<LI_Source, LI_Source_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static LI_Source Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<LI_Source, LI_Source_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static LI_Source Parse(string xml)
        {
            return XTypedServices.Parse<LI_Source, LI_Source_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new LI_Source(((LI_Source_Type)(this.Content.Clone())));
        }

        private void SetInnerType(LI_Source_Type ContentField)
        {
            this.ContentField=((LI_Source_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType LI_SourceSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("LI_Source", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("LI_LineageSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class LI_Lineage: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private LI_Lineage_Type ContentField;

        public static explicit operator LI_Lineage(XElement xe) { return XTypedServices.ToXTypedElement<LI_Lineage, LI_Lineage_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public LI_Lineage()
        {
            SetInnerType(new LI_Lineage_Type());
        }

        public LI_Lineage(LI_Lineage_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public LI_Lineage_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (statement?, processStep*, source*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType statement
        {
            get
            {
                return this.ContentField.statement;
            }
            set
            {
                this.ContentField.statement=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (statement?, processStep*, source*)
        /// </para>
        /// </summary>
        public IList<LI_ProcessStep_PropertyType> processStep
        {
            get
            {
                return this.ContentField.processStep;
            }
            set
            {
                this.ContentField.processStep=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (statement?, processStep*, source*)
        /// </para>
        /// </summary>
        public IList<LI_Source_PropertyType> source
        {
            get
            {
                return this.ContentField.source;
            }
            set
            {
                this.ContentField.source=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("LI_Lineage", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static LI_Lineage Load(string xmlFile)
        {
            return XTypedServices.Load<LI_Lineage, LI_Lineage_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static LI_Lineage Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<LI_Lineage, LI_Lineage_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static LI_Lineage Parse(string xml)
        {
            return XTypedServices.Parse<LI_Lineage, LI_Lineage_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new LI_Lineage(((LI_Lineage_Type)(this.Content.Clone())));
        }

        private void SetInnerType(LI_Lineage_Type ContentField)
        {
            this.ContentField=((LI_Lineage_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType LI_LineageSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("LI_Lineage", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// quantitative_result from Quality Procedures -  - renamed to remove implied use limitiation.
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_ConformanceResultSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_ConformanceResult: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_Result, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DQ_ConformanceResult_Type ContentField;

        public static explicit operator DQ_ConformanceResult(XElement xe) { return XTypedServices.ToXTypedElement<DQ_ConformanceResult, DQ_ConformanceResult_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// quantitative_result from Quality Procedures -  - renamed to remove implied use limitiation.
        /// </para>
        /// </summary>
        public DQ_ConformanceResult() :
            base(true)
        {
            SetInnerType(new DQ_ConformanceResult_Type());
        }

        /// <summary>
        /// <para>
        /// quantitative_result from Quality Procedures -  - renamed to remove implied use limitiation.
        /// </para>
        /// </summary>
        public DQ_ConformanceResult(DQ_ConformanceResult_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DQ_ConformanceResult_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (specification, explanation, pass)
        /// </para>
        /// </summary>
        public CI_Citation_PropertyType specification
        {
            get
            {
                return this.ContentField.specification;
            }
            set
            {
                this.ContentField.specification=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (specification, explanation, pass)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType explanation
        {
            get
            {
                return this.ContentField.explanation;
            }
            set
            {
                this.ContentField.explanation=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (specification, explanation, pass)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Boolean_PropertyType pass
        {
            get
            {
                return this.ContentField.pass;
            }
            set
            {
                this.ContentField.pass=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_ConformanceResult", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DQ_ConformanceResult Load(string xmlFile)
        {
            return XTypedServices.Load<DQ_ConformanceResult, DQ_ConformanceResult_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_ConformanceResult Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DQ_ConformanceResult, DQ_ConformanceResult_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DQ_ConformanceResult Parse(string xml)
        {
            return XTypedServices.Parse<DQ_ConformanceResult, DQ_ConformanceResult_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DQ_ConformanceResult(((DQ_ConformanceResult_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DQ_ConformanceResult_Type ContentField)
        {
            this.ContentField=((DQ_ConformanceResult_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DQ_ConformanceResultSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DQ_ConformanceResult", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Quantitative_conformance_measure from Quality Procedures.  -  - Renamed to remove implied use limitation -  - OCL - -- result is type specified by valueDomain - result.tupleType = valueDomain
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DQ_QuantitativeResultSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_QuantitativeResult: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_Result, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DQ_QuantitativeResult_Type ContentField;

        public static explicit operator DQ_QuantitativeResult(XElement xe) { return XTypedServices.ToXTypedElement<DQ_QuantitativeResult, DQ_QuantitativeResult_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Quantitative_conformance_measure from Quality Procedures.  -  - Renamed to remove implied use limitation -  - OCL - -- result is type specified by valueDomain - result.tupleType = valueDomain
        /// </para>
        /// </summary>
        public DQ_QuantitativeResult() :
            base(true)
        {
            SetInnerType(new DQ_QuantitativeResult_Type());
        }

        /// <summary>
        /// <para>
        /// Quantitative_conformance_measure from Quality Procedures.  -  - Renamed to remove implied use limitation -  - OCL - -- result is type specified by valueDomain - result.tupleType = valueDomain
        /// </para>
        /// </summary>
        public DQ_QuantitativeResult(DQ_QuantitativeResult_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DQ_QuantitativeResult_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (valueType?, valueUnit, errorStatistic?, value+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.RecordType_PropertyType valueType
        {
            get
            {
                return this.ContentField.valueType;
            }
            set
            {
                this.ContentField.valueType=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (valueType?, valueUnit, errorStatistic?, value+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.UnitOfMeasure_PropertyType valueUnit
        {
            get
            {
                return this.ContentField.valueUnit;
            }
            set
            {
                this.ContentField.valueUnit=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (valueType?, valueUnit, errorStatistic?, value+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType errorStatistic
        {
            get
            {
                return this.ContentField.errorStatistic;
            }
            set
            {
                this.ContentField.errorStatistic=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (valueType?, valueUnit, errorStatistic?, value+)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.Record_PropertyType> value
        {
            get
            {
                return this.ContentField.value;
            }
            set
            {
                this.ContentField.value=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_QuantitativeResult", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DQ_QuantitativeResult Load(string xmlFile)
        {
            return XTypedServices.Load<DQ_QuantitativeResult, DQ_QuantitativeResult_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_QuantitativeResult Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DQ_QuantitativeResult, DQ_QuantitativeResult_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DQ_QuantitativeResult Parse(string xml)
        {
            return XTypedServices.Parse<DQ_QuantitativeResult, DQ_QuantitativeResult_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DQ_QuantitativeResult(((DQ_QuantitativeResult_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DQ_QuantitativeResult_Type ContentField)
        {
            this.ContentField=((DQ_QuantitativeResult_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DQ_QuantitativeResultSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DQ_QuantitativeResult", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("AbstractDQ_ResultSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractDQ_Result: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private AbstractDQ_Result_Type ContentField;

        public static explicit operator AbstractDQ_Result(XElement xe) { return (AbstractDQ_Result)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected AbstractDQ_Result(bool setNull)
        {
        }

        public AbstractDQ_Result()
        {
            throw new InvalidOperationException();
        }

        public AbstractDQ_Result(AbstractDQ_Result_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                if ((this.ContentField!=null))
                {
                    this.ContentField.Untyped=value;
                }
            }
        }

        public AbstractDQ_Result_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractDQ_Result", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static AbstractDQ_Result Load(string xmlFile)
        {
            return ((AbstractDQ_Result)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractDQ_Result Load(System.IO.TextReader xmlFile)
        {
            return ((AbstractDQ_Result)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractDQ_Result Parse(string xml)
        {
            return ((AbstractDQ_Result)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        private void SetInnerType(AbstractDQ_Result_Type ContentField)
        {
            this.ContentField=((AbstractDQ_Result_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        protected virtual void SetSubstitutionMember(AbstractDQ_Result_Type ContentField)
        {
            this.ContentField=ContentField;
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType AbstractDQ_ResultSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("AbstractDQ_Result", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DQ_TemporalValiditySchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_TemporalValidity: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_TemporalAccuracy, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DQ_TemporalValidity_Type ContentField;

        public static explicit operator DQ_TemporalValidity(XElement xe) { return XTypedServices.ToXTypedElement<DQ_TemporalValidity, DQ_TemporalValidity_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DQ_TemporalValidity() :
            base(true)
        {
            SetInnerType(new DQ_TemporalValidity_Type());
        }

        public DQ_TemporalValidity(DQ_TemporalValidity_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DQ_TemporalValidity_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_TemporalValidity", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DQ_TemporalValidity Load(string xmlFile)
        {
            return XTypedServices.Load<DQ_TemporalValidity, DQ_TemporalValidity_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_TemporalValidity Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DQ_TemporalValidity, DQ_TemporalValidity_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DQ_TemporalValidity Parse(string xml)
        {
            return XTypedServices.Parse<DQ_TemporalValidity, DQ_TemporalValidity_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DQ_TemporalValidity(((DQ_TemporalValidity_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DQ_TemporalValidity_Type ContentField)
        {
            this.ContentField=((DQ_TemporalValidity_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DQ_TemporalValiditySchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DQ_TemporalValidity", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DQ_TemporalConsistencySchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_TemporalConsistency: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_TemporalAccuracy, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DQ_TemporalConsistency_Type ContentField;

        public static explicit operator DQ_TemporalConsistency(XElement xe) { return XTypedServices.ToXTypedElement<DQ_TemporalConsistency, DQ_TemporalConsistency_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DQ_TemporalConsistency() :
            base(true)
        {
            SetInnerType(new DQ_TemporalConsistency_Type());
        }

        public DQ_TemporalConsistency(DQ_TemporalConsistency_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DQ_TemporalConsistency_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_TemporalConsistency", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DQ_TemporalConsistency Load(string xmlFile)
        {
            return XTypedServices.Load<DQ_TemporalConsistency, DQ_TemporalConsistency_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_TemporalConsistency Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DQ_TemporalConsistency, DQ_TemporalConsistency_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DQ_TemporalConsistency Parse(string xml)
        {
            return XTypedServices.Parse<DQ_TemporalConsistency, DQ_TemporalConsistency_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DQ_TemporalConsistency(((DQ_TemporalConsistency_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DQ_TemporalConsistency_Type ContentField)
        {
            this.ContentField=((DQ_TemporalConsistency_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DQ_TemporalConsistencySchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DQ_TemporalConsistency", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DQ_AccuracyOfATimeMeasurementSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_AccuracyOfATimeMeasurement: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_TemporalAccuracy, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DQ_AccuracyOfATimeMeasurement_Type ContentField;

        public static explicit operator DQ_AccuracyOfATimeMeasurement(XElement xe) { return XTypedServices.ToXTypedElement<DQ_AccuracyOfATimeMeasurement, DQ_AccuracyOfATimeMeasurement_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DQ_AccuracyOfATimeMeasurement() :
            base(true)
        {
            SetInnerType(new DQ_AccuracyOfATimeMeasurement_Type());
        }

        public DQ_AccuracyOfATimeMeasurement(DQ_AccuracyOfATimeMeasurement_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DQ_AccuracyOfATimeMeasurement_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_AccuracyOfATimeMeasurement", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DQ_AccuracyOfATimeMeasurement Load(string xmlFile)
        {
            return XTypedServices.Load<DQ_AccuracyOfATimeMeasurement, DQ_AccuracyOfATimeMeasurement_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_AccuracyOfATimeMeasurement Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DQ_AccuracyOfATimeMeasurement, DQ_AccuracyOfATimeMeasurement_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DQ_AccuracyOfATimeMeasurement Parse(string xml)
        {
            return XTypedServices.Parse<DQ_AccuracyOfATimeMeasurement, DQ_AccuracyOfATimeMeasurement_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DQ_AccuracyOfATimeMeasurement(((DQ_AccuracyOfATimeMeasurement_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DQ_AccuracyOfATimeMeasurement_Type ContentField)
        {
            this.ContentField=((DQ_AccuracyOfATimeMeasurement_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DQ_AccuracyOfATimeMeasurementSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DQ_AccuracyOfATimeMeasurement", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DQ_QuantitativeAttributeAccuracySchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_QuantitativeAttributeAccuracy: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_ThematicAccuracy, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DQ_QuantitativeAttributeAccuracy_Type ContentField;

        public static explicit operator DQ_QuantitativeAttributeAccuracy(XElement xe) { return XTypedServices.ToXTypedElement<DQ_QuantitativeAttributeAccuracy, DQ_QuantitativeAttributeAccuracy_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DQ_QuantitativeAttributeAccuracy() :
            base(true)
        {
            SetInnerType(new DQ_QuantitativeAttributeAccuracy_Type());
        }

        public DQ_QuantitativeAttributeAccuracy(DQ_QuantitativeAttributeAccuracy_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DQ_QuantitativeAttributeAccuracy_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_QuantitativeAttributeAccuracy", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DQ_QuantitativeAttributeAccuracy Load(string xmlFile)
        {
            return XTypedServices.Load<DQ_QuantitativeAttributeAccuracy, DQ_QuantitativeAttributeAccuracy_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_QuantitativeAttributeAccuracy Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DQ_QuantitativeAttributeAccuracy, DQ_QuantitativeAttributeAccuracy_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DQ_QuantitativeAttributeAccuracy Parse(string xml)
        {
            return XTypedServices.Parse<DQ_QuantitativeAttributeAccuracy, DQ_QuantitativeAttributeAccuracy_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DQ_QuantitativeAttributeAccuracy(((DQ_QuantitativeAttributeAccuracy_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DQ_QuantitativeAttributeAccuracy_Type ContentField)
        {
            this.ContentField=((DQ_QuantitativeAttributeAccuracy_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DQ_QuantitativeAttributeAccuracySchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DQ_QuantitativeAttributeAccuracy", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DQ_NonQuantitativeAttributeAccuracySchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_NonQuantitativeAttributeAccuracy: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_ThematicAccuracy, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DQ_NonQuantitativeAttributeAccuracy_Type ContentField;

        public static explicit operator DQ_NonQuantitativeAttributeAccuracy(XElement xe) { return XTypedServices.ToXTypedElement<DQ_NonQuantitativeAttributeAccuracy, DQ_NonQuantitativeAttributeAccuracy_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DQ_NonQuantitativeAttributeAccuracy() :
            base(true)
        {
            SetInnerType(new DQ_NonQuantitativeAttributeAccuracy_Type());
        }

        public DQ_NonQuantitativeAttributeAccuracy(DQ_NonQuantitativeAttributeAccuracy_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DQ_NonQuantitativeAttributeAccuracy_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_NonQuantitativeAttributeAccuracy", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DQ_NonQuantitativeAttributeAccuracy Load(string xmlFile)
        {
            return XTypedServices.Load<DQ_NonQuantitativeAttributeAccuracy, DQ_NonQuantitativeAttributeAccuracy_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_NonQuantitativeAttributeAccuracy Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DQ_NonQuantitativeAttributeAccuracy, DQ_NonQuantitativeAttributeAccuracy_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DQ_NonQuantitativeAttributeAccuracy Parse(string xml)
        {
            return XTypedServices.Parse<DQ_NonQuantitativeAttributeAccuracy, DQ_NonQuantitativeAttributeAccuracy_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DQ_NonQuantitativeAttributeAccuracy(((DQ_NonQuantitativeAttributeAccuracy_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DQ_NonQuantitativeAttributeAccuracy_Type ContentField)
        {
            this.ContentField=((DQ_NonQuantitativeAttributeAccuracy_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DQ_NonQuantitativeAttributeAccuracySchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DQ_NonQuantitativeAttributeAccuracy", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DQ_ThematicClassificationCorrectnessSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_ThematicClassificationCorrectness: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_ThematicAccuracy, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DQ_ThematicClassificationCorrectness_Type ContentField;

        public static explicit operator DQ_ThematicClassificationCorrectness(XElement xe) { return XTypedServices.ToXTypedElement<DQ_ThematicClassificationCorrectness, DQ_ThematicClassificationCorrectness_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DQ_ThematicClassificationCorrectness() :
            base(true)
        {
            SetInnerType(new DQ_ThematicClassificationCorrectness_Type());
        }

        public DQ_ThematicClassificationCorrectness(DQ_ThematicClassificationCorrectness_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DQ_ThematicClassificationCorrectness_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_ThematicClassificationCorrectness", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DQ_ThematicClassificationCorrectness Load(string xmlFile)
        {
            return XTypedServices.Load<DQ_ThematicClassificationCorrectness, DQ_ThematicClassificationCorrectness_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_ThematicClassificationCorrectness Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DQ_ThematicClassificationCorrectness, DQ_ThematicClassificationCorrectness_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DQ_ThematicClassificationCorrectness Parse(string xml)
        {
            return XTypedServices.Parse<DQ_ThematicClassificationCorrectness, DQ_ThematicClassificationCorrectness_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DQ_ThematicClassificationCorrectness(((DQ_ThematicClassificationCorrectness_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DQ_ThematicClassificationCorrectness_Type ContentField)
        {
            this.ContentField=((DQ_ThematicClassificationCorrectness_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DQ_ThematicClassificationCorrectnessSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DQ_ThematicClassificationCorrectness", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DQ_RelativeInternalPositionalAccuracySchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_RelativeInternalPositionalAccuracy: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_PositionalAccuracy, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DQ_RelativeInternalPositionalAccuracy_Type ContentField;

        public static explicit operator DQ_RelativeInternalPositionalAccuracy(XElement xe) { return XTypedServices.ToXTypedElement<DQ_RelativeInternalPositionalAccuracy, DQ_RelativeInternalPositionalAccuracy_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DQ_RelativeInternalPositionalAccuracy() :
            base(true)
        {
            SetInnerType(new DQ_RelativeInternalPositionalAccuracy_Type());
        }

        public DQ_RelativeInternalPositionalAccuracy(DQ_RelativeInternalPositionalAccuracy_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DQ_RelativeInternalPositionalAccuracy_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_RelativeInternalPositionalAccuracy", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DQ_RelativeInternalPositionalAccuracy Load(string xmlFile)
        {
            return XTypedServices.Load<DQ_RelativeInternalPositionalAccuracy, DQ_RelativeInternalPositionalAccuracy_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_RelativeInternalPositionalAccuracy Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DQ_RelativeInternalPositionalAccuracy, DQ_RelativeInternalPositionalAccuracy_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DQ_RelativeInternalPositionalAccuracy Parse(string xml)
        {
            return XTypedServices.Parse<DQ_RelativeInternalPositionalAccuracy, DQ_RelativeInternalPositionalAccuracy_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DQ_RelativeInternalPositionalAccuracy(((DQ_RelativeInternalPositionalAccuracy_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DQ_RelativeInternalPositionalAccuracy_Type ContentField)
        {
            this.ContentField=((DQ_RelativeInternalPositionalAccuracy_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DQ_RelativeInternalPositionalAccuracySchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DQ_RelativeInternalPositionalAccuracy", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DQ_GriddedDataPositionalAccuracySchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_GriddedDataPositionalAccuracy: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_PositionalAccuracy, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DQ_GriddedDataPositionalAccuracy_Type ContentField;

        public static explicit operator DQ_GriddedDataPositionalAccuracy(XElement xe) { return XTypedServices.ToXTypedElement<DQ_GriddedDataPositionalAccuracy, DQ_GriddedDataPositionalAccuracy_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DQ_GriddedDataPositionalAccuracy() :
            base(true)
        {
            SetInnerType(new DQ_GriddedDataPositionalAccuracy_Type());
        }

        public DQ_GriddedDataPositionalAccuracy(DQ_GriddedDataPositionalAccuracy_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DQ_GriddedDataPositionalAccuracy_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_GriddedDataPositionalAccuracy", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DQ_GriddedDataPositionalAccuracy Load(string xmlFile)
        {
            return XTypedServices.Load<DQ_GriddedDataPositionalAccuracy, DQ_GriddedDataPositionalAccuracy_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_GriddedDataPositionalAccuracy Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DQ_GriddedDataPositionalAccuracy, DQ_GriddedDataPositionalAccuracy_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DQ_GriddedDataPositionalAccuracy Parse(string xml)
        {
            return XTypedServices.Parse<DQ_GriddedDataPositionalAccuracy, DQ_GriddedDataPositionalAccuracy_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DQ_GriddedDataPositionalAccuracy(((DQ_GriddedDataPositionalAccuracy_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DQ_GriddedDataPositionalAccuracy_Type ContentField)
        {
            this.ContentField=((DQ_GriddedDataPositionalAccuracy_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DQ_GriddedDataPositionalAccuracySchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DQ_GriddedDataPositionalAccuracy", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DQ_AbsoluteExternalPositionalAccuracySchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_AbsoluteExternalPositionalAccuracy: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_PositionalAccuracy, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DQ_AbsoluteExternalPositionalAccuracy_Type ContentField;

        public static explicit operator DQ_AbsoluteExternalPositionalAccuracy(XElement xe) { return XTypedServices.ToXTypedElement<DQ_AbsoluteExternalPositionalAccuracy, DQ_AbsoluteExternalPositionalAccuracy_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DQ_AbsoluteExternalPositionalAccuracy() :
            base(true)
        {
            SetInnerType(new DQ_AbsoluteExternalPositionalAccuracy_Type());
        }

        public DQ_AbsoluteExternalPositionalAccuracy(DQ_AbsoluteExternalPositionalAccuracy_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DQ_AbsoluteExternalPositionalAccuracy_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_AbsoluteExternalPositionalAccuracy", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DQ_AbsoluteExternalPositionalAccuracy Load(string xmlFile)
        {
            return XTypedServices.Load<DQ_AbsoluteExternalPositionalAccuracy, DQ_AbsoluteExternalPositionalAccuracy_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_AbsoluteExternalPositionalAccuracy Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DQ_AbsoluteExternalPositionalAccuracy, DQ_AbsoluteExternalPositionalAccuracy_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DQ_AbsoluteExternalPositionalAccuracy Parse(string xml)
        {
            return XTypedServices.Parse<DQ_AbsoluteExternalPositionalAccuracy, DQ_AbsoluteExternalPositionalAccuracy_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DQ_AbsoluteExternalPositionalAccuracy(((DQ_AbsoluteExternalPositionalAccuracy_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DQ_AbsoluteExternalPositionalAccuracy_Type ContentField)
        {
            this.ContentField=((DQ_AbsoluteExternalPositionalAccuracy_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DQ_AbsoluteExternalPositionalAccuracySchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DQ_AbsoluteExternalPositionalAccuracy", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DQ_TopologicalConsistencySchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_TopologicalConsistency: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_LogicalConsistency, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DQ_TopologicalConsistency_Type ContentField;

        public static explicit operator DQ_TopologicalConsistency(XElement xe) { return XTypedServices.ToXTypedElement<DQ_TopologicalConsistency, DQ_TopologicalConsistency_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DQ_TopologicalConsistency() :
            base(true)
        {
            SetInnerType(new DQ_TopologicalConsistency_Type());
        }

        public DQ_TopologicalConsistency(DQ_TopologicalConsistency_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DQ_TopologicalConsistency_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_TopologicalConsistency", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DQ_TopologicalConsistency Load(string xmlFile)
        {
            return XTypedServices.Load<DQ_TopologicalConsistency, DQ_TopologicalConsistency_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_TopologicalConsistency Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DQ_TopologicalConsistency, DQ_TopologicalConsistency_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DQ_TopologicalConsistency Parse(string xml)
        {
            return XTypedServices.Parse<DQ_TopologicalConsistency, DQ_TopologicalConsistency_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DQ_TopologicalConsistency(((DQ_TopologicalConsistency_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DQ_TopologicalConsistency_Type ContentField)
        {
            this.ContentField=((DQ_TopologicalConsistency_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DQ_TopologicalConsistencySchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DQ_TopologicalConsistency", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DQ_FormatConsistencySchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_FormatConsistency: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_LogicalConsistency, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DQ_FormatConsistency_Type ContentField;

        public static explicit operator DQ_FormatConsistency(XElement xe) { return XTypedServices.ToXTypedElement<DQ_FormatConsistency, DQ_FormatConsistency_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DQ_FormatConsistency() :
            base(true)
        {
            SetInnerType(new DQ_FormatConsistency_Type());
        }

        public DQ_FormatConsistency(DQ_FormatConsistency_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DQ_FormatConsistency_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_FormatConsistency", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DQ_FormatConsistency Load(string xmlFile)
        {
            return XTypedServices.Load<DQ_FormatConsistency, DQ_FormatConsistency_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_FormatConsistency Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DQ_FormatConsistency, DQ_FormatConsistency_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DQ_FormatConsistency Parse(string xml)
        {
            return XTypedServices.Parse<DQ_FormatConsistency, DQ_FormatConsistency_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DQ_FormatConsistency(((DQ_FormatConsistency_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DQ_FormatConsistency_Type ContentField)
        {
            this.ContentField=((DQ_FormatConsistency_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DQ_FormatConsistencySchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DQ_FormatConsistency", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DQ_DomainConsistencySchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_DomainConsistency: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_LogicalConsistency, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DQ_DomainConsistency_Type ContentField;

        public static explicit operator DQ_DomainConsistency(XElement xe) { return XTypedServices.ToXTypedElement<DQ_DomainConsistency, DQ_DomainConsistency_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DQ_DomainConsistency() :
            base(true)
        {
            SetInnerType(new DQ_DomainConsistency_Type());
        }

        public DQ_DomainConsistency(DQ_DomainConsistency_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DQ_DomainConsistency_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_DomainConsistency", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DQ_DomainConsistency Load(string xmlFile)
        {
            return XTypedServices.Load<DQ_DomainConsistency, DQ_DomainConsistency_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_DomainConsistency Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DQ_DomainConsistency, DQ_DomainConsistency_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DQ_DomainConsistency Parse(string xml)
        {
            return XTypedServices.Parse<DQ_DomainConsistency, DQ_DomainConsistency_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DQ_DomainConsistency(((DQ_DomainConsistency_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DQ_DomainConsistency_Type ContentField)
        {
            this.ContentField=((DQ_DomainConsistency_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DQ_DomainConsistencySchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DQ_DomainConsistency", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DQ_ConceptualConsistencySchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_ConceptualConsistency: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_LogicalConsistency, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DQ_ConceptualConsistency_Type ContentField;

        public static explicit operator DQ_ConceptualConsistency(XElement xe) { return XTypedServices.ToXTypedElement<DQ_ConceptualConsistency, DQ_ConceptualConsistency_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DQ_ConceptualConsistency() :
            base(true)
        {
            SetInnerType(new DQ_ConceptualConsistency_Type());
        }

        public DQ_ConceptualConsistency(DQ_ConceptualConsistency_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DQ_ConceptualConsistency_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_ConceptualConsistency", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DQ_ConceptualConsistency Load(string xmlFile)
        {
            return XTypedServices.Load<DQ_ConceptualConsistency, DQ_ConceptualConsistency_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_ConceptualConsistency Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DQ_ConceptualConsistency, DQ_ConceptualConsistency_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DQ_ConceptualConsistency Parse(string xml)
        {
            return XTypedServices.Parse<DQ_ConceptualConsistency, DQ_ConceptualConsistency_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DQ_ConceptualConsistency(((DQ_ConceptualConsistency_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DQ_ConceptualConsistency_Type ContentField)
        {
            this.ContentField=((DQ_ConceptualConsistency_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DQ_ConceptualConsistencySchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DQ_ConceptualConsistency", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DQ_CompletenessOmissionSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_CompletenessOmission: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_Completeness, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DQ_CompletenessOmission_Type ContentField;

        public static explicit operator DQ_CompletenessOmission(XElement xe) { return XTypedServices.ToXTypedElement<DQ_CompletenessOmission, DQ_CompletenessOmission_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DQ_CompletenessOmission() :
            base(true)
        {
            SetInnerType(new DQ_CompletenessOmission_Type());
        }

        public DQ_CompletenessOmission(DQ_CompletenessOmission_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DQ_CompletenessOmission_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_CompletenessOmission", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DQ_CompletenessOmission Load(string xmlFile)
        {
            return XTypedServices.Load<DQ_CompletenessOmission, DQ_CompletenessOmission_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_CompletenessOmission Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DQ_CompletenessOmission, DQ_CompletenessOmission_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DQ_CompletenessOmission Parse(string xml)
        {
            return XTypedServices.Parse<DQ_CompletenessOmission, DQ_CompletenessOmission_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DQ_CompletenessOmission(((DQ_CompletenessOmission_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DQ_CompletenessOmission_Type ContentField)
        {
            this.ContentField=((DQ_CompletenessOmission_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DQ_CompletenessOmissionSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DQ_CompletenessOmission", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DQ_CompletenessCommissionSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_CompletenessCommission: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_Completeness, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DQ_CompletenessCommission_Type ContentField;

        public static explicit operator DQ_CompletenessCommission(XElement xe) { return XTypedServices.ToXTypedElement<DQ_CompletenessCommission, DQ_CompletenessCommission_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DQ_CompletenessCommission() :
            base(true)
        {
            SetInnerType(new DQ_CompletenessCommission_Type());
        }

        public DQ_CompletenessCommission(DQ_CompletenessCommission_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DQ_CompletenessCommission_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_CompletenessCommission", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DQ_CompletenessCommission Load(string xmlFile)
        {
            return XTypedServices.Load<DQ_CompletenessCommission, DQ_CompletenessCommission_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_CompletenessCommission Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DQ_CompletenessCommission, DQ_CompletenessCommission_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DQ_CompletenessCommission Parse(string xml)
        {
            return XTypedServices.Parse<DQ_CompletenessCommission, DQ_CompletenessCommission_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DQ_CompletenessCommission(((DQ_CompletenessCommission_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DQ_CompletenessCommission_Type ContentField)
        {
            this.ContentField=((DQ_CompletenessCommission_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DQ_CompletenessCommissionSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DQ_CompletenessCommission", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("AbstractDQ_TemporalAccuracySchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractDQ_TemporalAccuracy: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_Element, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private AbstractDQ_TemporalAccuracy_Type ContentField;

        public static explicit operator AbstractDQ_TemporalAccuracy(XElement xe) { return (AbstractDQ_TemporalAccuracy)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected AbstractDQ_TemporalAccuracy(bool setNull) :
            base(true)
        {
        }

        public AbstractDQ_TemporalAccuracy() :
            base(true)
        {
            throw new InvalidOperationException();
        }

        public AbstractDQ_TemporalAccuracy(AbstractDQ_TemporalAccuracy_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                if ((this.ContentField!=null))
                {
                    this.ContentField.Untyped=value;
                }
            }
        }

        public new AbstractDQ_TemporalAccuracy_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractDQ_TemporalAccuracy", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static AbstractDQ_TemporalAccuracy Load(string xmlFile)
        {
            return ((AbstractDQ_TemporalAccuracy)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractDQ_TemporalAccuracy Load(System.IO.TextReader xmlFile)
        {
            return ((AbstractDQ_TemporalAccuracy)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public new static AbstractDQ_TemporalAccuracy Parse(string xml)
        {
            return ((AbstractDQ_TemporalAccuracy)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        private void SetInnerType(AbstractDQ_TemporalAccuracy_Type ContentField)
        {
            this.ContentField=((AbstractDQ_TemporalAccuracy_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        protected virtual void SetSubstitutionMember(AbstractDQ_TemporalAccuracy_Type ContentField)
        {
            this.ContentField=ContentField;
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType AbstractDQ_TemporalAccuracySchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("AbstractDQ_TemporalAccuracy", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("AbstractDQ_ThematicAccuracySchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractDQ_ThematicAccuracy: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_Element, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private AbstractDQ_ThematicAccuracy_Type ContentField;

        public static explicit operator AbstractDQ_ThematicAccuracy(XElement xe) { return (AbstractDQ_ThematicAccuracy)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected AbstractDQ_ThematicAccuracy(bool setNull) :
            base(true)
        {
        }

        public AbstractDQ_ThematicAccuracy() :
            base(true)
        {
            throw new InvalidOperationException();
        }

        public AbstractDQ_ThematicAccuracy(AbstractDQ_ThematicAccuracy_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                if ((this.ContentField!=null))
                {
                    this.ContentField.Untyped=value;
                }
            }
        }

        public new AbstractDQ_ThematicAccuracy_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractDQ_ThematicAccuracy", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static AbstractDQ_ThematicAccuracy Load(string xmlFile)
        {
            return ((AbstractDQ_ThematicAccuracy)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractDQ_ThematicAccuracy Load(System.IO.TextReader xmlFile)
        {
            return ((AbstractDQ_ThematicAccuracy)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public new static AbstractDQ_ThematicAccuracy Parse(string xml)
        {
            return ((AbstractDQ_ThematicAccuracy)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        private void SetInnerType(AbstractDQ_ThematicAccuracy_Type ContentField)
        {
            this.ContentField=((AbstractDQ_ThematicAccuracy_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        protected virtual void SetSubstitutionMember(AbstractDQ_ThematicAccuracy_Type ContentField)
        {
            this.ContentField=ContentField;
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType AbstractDQ_ThematicAccuracySchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("AbstractDQ_ThematicAccuracy", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("AbstractDQ_PositionalAccuracySchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractDQ_PositionalAccuracy: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_Element, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private AbstractDQ_PositionalAccuracy_Type ContentField;

        public static explicit operator AbstractDQ_PositionalAccuracy(XElement xe) { return (AbstractDQ_PositionalAccuracy)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected AbstractDQ_PositionalAccuracy(bool setNull) :
            base(true)
        {
        }

        public AbstractDQ_PositionalAccuracy() :
            base(true)
        {
            throw new InvalidOperationException();
        }

        public AbstractDQ_PositionalAccuracy(AbstractDQ_PositionalAccuracy_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                if ((this.ContentField!=null))
                {
                    this.ContentField.Untyped=value;
                }
            }
        }

        public new AbstractDQ_PositionalAccuracy_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractDQ_PositionalAccuracy", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static AbstractDQ_PositionalAccuracy Load(string xmlFile)
        {
            return ((AbstractDQ_PositionalAccuracy)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractDQ_PositionalAccuracy Load(System.IO.TextReader xmlFile)
        {
            return ((AbstractDQ_PositionalAccuracy)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public new static AbstractDQ_PositionalAccuracy Parse(string xml)
        {
            return ((AbstractDQ_PositionalAccuracy)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        private void SetInnerType(AbstractDQ_PositionalAccuracy_Type ContentField)
        {
            this.ContentField=((AbstractDQ_PositionalAccuracy_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        protected virtual void SetSubstitutionMember(AbstractDQ_PositionalAccuracy_Type ContentField)
        {
            this.ContentField=ContentField;
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType AbstractDQ_PositionalAccuracySchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("AbstractDQ_PositionalAccuracy", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("AbstractDQ_LogicalConsistencySchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractDQ_LogicalConsistency: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_Element, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private AbstractDQ_LogicalConsistency_Type ContentField;

        public static explicit operator AbstractDQ_LogicalConsistency(XElement xe) { return (AbstractDQ_LogicalConsistency)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected AbstractDQ_LogicalConsistency(bool setNull) :
            base(true)
        {
        }

        public AbstractDQ_LogicalConsistency() :
            base(true)
        {
            throw new InvalidOperationException();
        }

        public AbstractDQ_LogicalConsistency(AbstractDQ_LogicalConsistency_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                if ((this.ContentField!=null))
                {
                    this.ContentField.Untyped=value;
                }
            }
        }

        public new AbstractDQ_LogicalConsistency_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractDQ_LogicalConsistency", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static AbstractDQ_LogicalConsistency Load(string xmlFile)
        {
            return ((AbstractDQ_LogicalConsistency)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractDQ_LogicalConsistency Load(System.IO.TextReader xmlFile)
        {
            return ((AbstractDQ_LogicalConsistency)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public new static AbstractDQ_LogicalConsistency Parse(string xml)
        {
            return ((AbstractDQ_LogicalConsistency)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        private void SetInnerType(AbstractDQ_LogicalConsistency_Type ContentField)
        {
            this.ContentField=((AbstractDQ_LogicalConsistency_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        protected virtual void SetSubstitutionMember(AbstractDQ_LogicalConsistency_Type ContentField)
        {
            this.ContentField=ContentField;
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType AbstractDQ_LogicalConsistencySchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("AbstractDQ_LogicalConsistency", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("AbstractDQ_CompletenessSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractDQ_Completeness: global::GeoSik.Iso.Ts19139.Gmd.AbstractDQ_Element, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private AbstractDQ_Completeness_Type ContentField;

        public static explicit operator AbstractDQ_Completeness(XElement xe) { return (AbstractDQ_Completeness)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected AbstractDQ_Completeness(bool setNull) :
            base(true)
        {
        }

        public AbstractDQ_Completeness() :
            base(true)
        {
            throw new InvalidOperationException();
        }

        public AbstractDQ_Completeness(AbstractDQ_Completeness_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                if ((this.ContentField!=null))
                {
                    this.ContentField.Untyped=value;
                }
            }
        }

        public new AbstractDQ_Completeness_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractDQ_Completeness", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static AbstractDQ_Completeness Load(string xmlFile)
        {
            return ((AbstractDQ_Completeness)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractDQ_Completeness Load(System.IO.TextReader xmlFile)
        {
            return ((AbstractDQ_Completeness)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public new static AbstractDQ_Completeness Parse(string xml)
        {
            return ((AbstractDQ_Completeness)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        private void SetInnerType(AbstractDQ_Completeness_Type ContentField)
        {
            this.ContentField=((AbstractDQ_Completeness_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        protected virtual void SetSubstitutionMember(AbstractDQ_Completeness_Type ContentField)
        {
            this.ContentField=ContentField;
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType AbstractDQ_CompletenessSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("AbstractDQ_Completeness", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("AbstractDQ_ElementSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractDQ_Element: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private AbstractDQ_Element_Type ContentField;

        public static explicit operator AbstractDQ_Element(XElement xe) { return (AbstractDQ_Element)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected AbstractDQ_Element(bool setNull)
        {
        }

        public AbstractDQ_Element()
        {
            throw new InvalidOperationException();
        }

        public AbstractDQ_Element(AbstractDQ_Element_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                if ((this.ContentField!=null))
                {
                    this.ContentField.Untyped=value;
                }
            }
        }

        public AbstractDQ_Element_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> nameOfMeasure
        {
            get
            {
                return this.ContentField.nameOfMeasure;
            }
            set
            {
                this.ContentField.nameOfMeasure=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public MD_Identifier_PropertyType measureIdentification
        {
            get
            {
                return this.ContentField.measureIdentification;
            }
            set
            {
                this.ContentField.measureIdentification=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType measureDescription
        {
            get
            {
                return this.ContentField.measureDescription;
            }
            set
            {
                this.ContentField.measureDescription=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public DQ_EvaluationMethodTypeCode_PropertyType evaluationMethodType
        {
            get
            {
                return this.ContentField.evaluationMethodType;
            }
            set
            {
                this.ContentField.evaluationMethodType=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType evaluationMethodDescription
        {
            get
            {
                return this.ContentField.evaluationMethodDescription;
            }
            set
            {
                this.ContentField.evaluationMethodDescription=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public CI_Citation_PropertyType evaluationProcedure
        {
            get
            {
                return this.ContentField.evaluationProcedure;
            }
            set
            {
                this.ContentField.evaluationProcedure=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType> dateTime
        {
            get
            {
                return this.ContentField.dateTime;
            }
            set
            {
                this.ContentField.dateTime=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (nameOfMeasure*, measureIdentification?, measureDescription?, evaluationMethodType?, evaluationMethodDescription?, evaluationProcedure?, dateTime*, result+)
        /// </para>
        /// </summary>
        public IList<DQ_Result_PropertyType> result
        {
            get
            {
                return this.ContentField.result;
            }
            set
            {
                this.ContentField.result=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractDQ_Element", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static AbstractDQ_Element Load(string xmlFile)
        {
            return ((AbstractDQ_Element)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractDQ_Element Load(System.IO.TextReader xmlFile)
        {
            return ((AbstractDQ_Element)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractDQ_Element Parse(string xml)
        {
            return ((AbstractDQ_Element)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        private void SetInnerType(AbstractDQ_Element_Type ContentField)
        {
            this.ContentField=((AbstractDQ_Element_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        protected virtual void SetSubstitutionMember(AbstractDQ_Element_Type ContentField)
        {
            this.ContentField=ContentField;
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType AbstractDQ_ElementSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("AbstractDQ_Element", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DQ_DataQualitySchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_DataQuality: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DQ_DataQuality_Type ContentField;

        public static explicit operator DQ_DataQuality(XElement xe) { return XTypedServices.ToXTypedElement<DQ_DataQuality, DQ_DataQuality_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DQ_DataQuality()
        {
            SetInnerType(new DQ_DataQuality_Type());
        }

        public DQ_DataQuality(DQ_DataQuality_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public DQ_DataQuality_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (scope, report*, lineage?)
        /// </para>
        /// </summary>
        public DQ_Scope_PropertyType scope
        {
            get
            {
                return this.ContentField.scope;
            }
            set
            {
                this.ContentField.scope=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (scope, report*, lineage?)
        /// </para>
        /// </summary>
        public IList<DQ_Element_PropertyType> report
        {
            get
            {
                return this.ContentField.report;
            }
            set
            {
                this.ContentField.report=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (scope, report*, lineage?)
        /// </para>
        /// </summary>
        public LI_Lineage_PropertyType lineage
        {
            get
            {
                return this.ContentField.lineage;
            }
            set
            {
                this.ContentField.lineage=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_DataQuality", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static DQ_DataQuality Load(string xmlFile)
        {
            return XTypedServices.Load<DQ_DataQuality, DQ_DataQuality_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_DataQuality Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DQ_DataQuality, DQ_DataQuality_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_DataQuality Parse(string xml)
        {
            return XTypedServices.Parse<DQ_DataQuality, DQ_DataQuality_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DQ_DataQuality(((DQ_DataQuality_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DQ_DataQuality_Type ContentField)
        {
            this.ContentField=((DQ_DataQuality_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DQ_DataQualitySchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DQ_DataQuality", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DQ_ScopeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_Scope: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DQ_Scope_Type ContentField;

        public static explicit operator DQ_Scope(XElement xe) { return XTypedServices.ToXTypedElement<DQ_Scope, DQ_Scope_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DQ_Scope()
        {
            SetInnerType(new DQ_Scope_Type());
        }

        public DQ_Scope(DQ_Scope_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public DQ_Scope_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (level, extent?, levelDescription*)
        /// </para>
        /// </summary>
        public MD_ScopeCode_PropertyType level
        {
            get
            {
                return this.ContentField.level;
            }
            set
            {
                this.ContentField.level=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (level, extent?, levelDescription*)
        /// </para>
        /// </summary>
        public EX_Extent_PropertyType extent
        {
            get
            {
                return this.ContentField.extent;
            }
            set
            {
                this.ContentField.extent=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (level, extent?, levelDescription*)
        /// </para>
        /// </summary>
        public IList<MD_ScopeDescription_PropertyType> levelDescription
        {
            get
            {
                return this.ContentField.levelDescription;
            }
            set
            {
                this.ContentField.levelDescription=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_Scope", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static DQ_Scope Load(string xmlFile)
        {
            return XTypedServices.Load<DQ_Scope, DQ_Scope_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_Scope Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DQ_Scope, DQ_Scope_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_Scope Parse(string xml)
        {
            return XTypedServices.Parse<DQ_Scope, DQ_Scope_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DQ_Scope(((DQ_Scope_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DQ_Scope_Type ContentField)
        {
            this.ContentField=((DQ_Scope_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DQ_ScopeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DQ_Scope", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DQ_EvaluationMethodTypeCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DQ_EvaluationMethodTypeCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator DQ_EvaluationMethodTypeCode(XElement xe) { return XTypedServices.ToXTypedElement<DQ_EvaluationMethodTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DQ_EvaluationMethodTypeCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public DQ_EvaluationMethodTypeCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DQ_EvaluationMethodTypeCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DQ_EvaluationMethodTypeCode Load(string xmlFile)
        {
            return XTypedServices.Load<DQ_EvaluationMethodTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DQ_EvaluationMethodTypeCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DQ_EvaluationMethodTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DQ_EvaluationMethodTypeCode Parse(string xml)
        {
            return XTypedServices.Parse<DQ_EvaluationMethodTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DQ_EvaluationMethodTypeCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DQ_EvaluationMethodTypeCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DQ_EvaluationMethodTypeCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Restrictions on the access and use of a dataset or metadata
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ConstraintsSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Constraints: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_Constraints_Type ContentField;

        public static explicit operator MD_Constraints(XElement xe) { return (MD_Constraints)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected MD_Constraints(bool setNull)
        {
        }

        /// <summary>
        /// <para>
        /// Restrictions on the access and use of a dataset or metadata
        /// </para>
        /// </summary>
        public MD_Constraints()
        {
            SetInnerType(new MD_Constraints_Type());
        }

        /// <summary>
        /// <para>
        /// Restrictions on the access and use of a dataset or metadata
        /// </para>
        /// </summary>
        public MD_Constraints(MD_Constraints_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                if ((this.ContentField!=null))
                {
                    this.ContentField.Untyped=value;
                }
            }
        }

        public MD_Constraints_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (useLimitation*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> useLimitation
        {
            get
            {
                return this.ContentField.useLimitation;
            }
            set
            {
                this.ContentField.useLimitation=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Constraints", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_Constraints Load(string xmlFile)
        {
            return ((MD_Constraints)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static MD_Constraints Load(System.IO.TextReader xmlFile)
        {
            return ((MD_Constraints)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static MD_Constraints Parse(string xml)
        {
            return ((MD_Constraints)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        public override XTypedElement Clone()
        {
            return new MD_Constraints(((MD_Constraints_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_Constraints_Type ContentField)
        {
            this.ContentField=((MD_Constraints_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        protected virtual void SetSubstitutionMember(MD_Constraints_Type ContentField)
        {
            this.ContentField=ContentField;
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_ConstraintsSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_Constraints", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Restrictions and legal prerequisites for accessing and using the dataset.
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_LegalConstraintsSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_LegalConstraints: global::GeoSik.Iso.Ts19139.Gmd.MD_Constraints, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_LegalConstraints_Type ContentField;

        public static explicit operator MD_LegalConstraints(XElement xe) { return XTypedServices.ToXTypedElement<MD_LegalConstraints, MD_LegalConstraints_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Restrictions and legal prerequisites for accessing and using the dataset.
        /// </para>
        /// </summary>
        public MD_LegalConstraints() :
            base(true)
        {
            SetInnerType(new MD_LegalConstraints_Type());
        }

        /// <summary>
        /// <para>
        /// Restrictions and legal prerequisites for accessing and using the dataset.
        /// </para>
        /// </summary>
        public MD_LegalConstraints(MD_LegalConstraints_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new MD_LegalConstraints_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (useLimitation*, accessConstraints*, useConstraints*, otherConstraints*)
        /// </para>
        /// </summary>
        public IList<MD_RestrictionCode_PropertyType> accessConstraints
        {
            get
            {
                return this.ContentField.accessConstraints;
            }
            set
            {
                this.ContentField.accessConstraints=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (useLimitation*, accessConstraints*, useConstraints*, otherConstraints*)
        /// </para>
        /// </summary>
        public IList<MD_RestrictionCode_PropertyType> useConstraints
        {
            get
            {
                return this.ContentField.useConstraints;
            }
            set
            {
                this.ContentField.useConstraints=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (useLimitation*, accessConstraints*, useConstraints*, otherConstraints*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> otherConstraints
        {
            get
            {
                return this.ContentField.otherConstraints;
            }
            set
            {
                this.ContentField.otherConstraints=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_LegalConstraints", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_LegalConstraints Load(string xmlFile)
        {
            return XTypedServices.Load<MD_LegalConstraints, MD_LegalConstraints_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_LegalConstraints Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_LegalConstraints, MD_LegalConstraints_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_LegalConstraints Parse(string xml)
        {
            return XTypedServices.Parse<MD_LegalConstraints, MD_LegalConstraints_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_LegalConstraints(((MD_LegalConstraints_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_LegalConstraints_Type ContentField)
        {
            this.ContentField=((MD_LegalConstraints_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_LegalConstraintsSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_LegalConstraints", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Handling restrictions imposed on the dataset because of national security, privacy, or other concerns
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_SecurityConstraintsSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_SecurityConstraints: global::GeoSik.Iso.Ts19139.Gmd.MD_Constraints, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_SecurityConstraints_Type ContentField;

        public static explicit operator MD_SecurityConstraints(XElement xe) { return XTypedServices.ToXTypedElement<MD_SecurityConstraints, MD_SecurityConstraints_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Handling restrictions imposed on the dataset because of national security, privacy, or other concerns
        /// </para>
        /// </summary>
        public MD_SecurityConstraints() :
            base(true)
        {
            SetInnerType(new MD_SecurityConstraints_Type());
        }

        /// <summary>
        /// <para>
        /// Handling restrictions imposed on the dataset because of national security, privacy, or other concerns
        /// </para>
        /// </summary>
        public MD_SecurityConstraints(MD_SecurityConstraints_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new MD_SecurityConstraints_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (useLimitation*, classification, userNote?, classificationSystem?, handlingDescription?)
        /// </para>
        /// </summary>
        public MD_ClassificationCode_PropertyType classification
        {
            get
            {
                return this.ContentField.classification;
            }
            set
            {
                this.ContentField.classification=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (useLimitation*, classification, userNote?, classificationSystem?, handlingDescription?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType userNote
        {
            get
            {
                return this.ContentField.userNote;
            }
            set
            {
                this.ContentField.userNote=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (useLimitation*, classification, userNote?, classificationSystem?, handlingDescription?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType classificationSystem
        {
            get
            {
                return this.ContentField.classificationSystem;
            }
            set
            {
                this.ContentField.classificationSystem=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (useLimitation*, classification, userNote?, classificationSystem?, handlingDescription?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType handlingDescription
        {
            get
            {
                return this.ContentField.handlingDescription;
            }
            set
            {
                this.ContentField.handlingDescription=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_SecurityConstraints", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_SecurityConstraints Load(string xmlFile)
        {
            return XTypedServices.Load<MD_SecurityConstraints, MD_SecurityConstraints_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_SecurityConstraints Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_SecurityConstraints, MD_SecurityConstraints_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_SecurityConstraints Parse(string xml)
        {
            return XTypedServices.Parse<MD_SecurityConstraints, MD_SecurityConstraints_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_SecurityConstraints(((MD_SecurityConstraints_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_SecurityConstraints_Type ContentField)
        {
            this.ContentField=((MD_SecurityConstraints_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_SecurityConstraintsSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_SecurityConstraints", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_ClassificationCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ClassificationCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator MD_ClassificationCode(XElement xe) { return XTypedServices.ToXTypedElement<MD_ClassificationCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_ClassificationCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public MD_ClassificationCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ClassificationCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_ClassificationCode Load(string xmlFile)
        {
            return XTypedServices.Load<MD_ClassificationCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_ClassificationCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_ClassificationCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_ClassificationCode Parse(string xml)
        {
            return XTypedServices.Parse<MD_ClassificationCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_ClassificationCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_ClassificationCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_ClassificationCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_RestrictionCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_RestrictionCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator MD_RestrictionCode(XElement xe) { return XTypedServices.ToXTypedElement<MD_RestrictionCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_RestrictionCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public MD_RestrictionCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_RestrictionCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_RestrictionCode Load(string xmlFile)
        {
            return XTypedServices.Load<MD_RestrictionCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_RestrictionCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_RestrictionCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_RestrictionCode Parse(string xml)
        {
            return XTypedServices.Parse<MD_RestrictionCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_RestrictionCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_RestrictionCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_RestrictionCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Information about the media on which the data can be distributed
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_MediumSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Medium: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_Medium_Type ContentField;

        public static explicit operator MD_Medium(XElement xe) { return XTypedServices.ToXTypedElement<MD_Medium, MD_Medium_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Information about the media on which the data can be distributed
        /// </para>
        /// </summary>
        public MD_Medium()
        {
            SetInnerType(new MD_Medium_Type());
        }

        /// <summary>
        /// <para>
        /// Information about the media on which the data can be distributed
        /// </para>
        /// </summary>
        public MD_Medium(MD_Medium_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_Medium_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name?, density*, densityUnits?, volumes?, mediumFormat*, mediumNote?)
        /// </para>
        /// </summary>
        public MD_MediumNameCode_PropertyType name
        {
            get
            {
                return this.ContentField.name;
            }
            set
            {
                this.ContentField.name=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name?, density*, densityUnits?, volumes?, mediumFormat*, mediumNote?)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.Real_PropertyType> density
        {
            get
            {
                return this.ContentField.density;
            }
            set
            {
                this.ContentField.density=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name?, density*, densityUnits?, volumes?, mediumFormat*, mediumNote?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType densityUnits
        {
            get
            {
                return this.ContentField.densityUnits;
            }
            set
            {
                this.ContentField.densityUnits=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name?, density*, densityUnits?, volumes?, mediumFormat*, mediumNote?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Integer_PropertyType volumes
        {
            get
            {
                return this.ContentField.volumes;
            }
            set
            {
                this.ContentField.volumes=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name?, density*, densityUnits?, volumes?, mediumFormat*, mediumNote?)
        /// </para>
        /// </summary>
        public IList<MD_MediumFormatCode_PropertyType> mediumFormat
        {
            get
            {
                return this.ContentField.mediumFormat;
            }
            set
            {
                this.ContentField.mediumFormat=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name?, density*, densityUnits?, volumes?, mediumFormat*, mediumNote?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType mediumNote
        {
            get
            {
                return this.ContentField.mediumNote;
            }
            set
            {
                this.ContentField.mediumNote=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Medium", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_Medium Load(string xmlFile)
        {
            return XTypedServices.Load<MD_Medium, MD_Medium_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_Medium Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_Medium, MD_Medium_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_Medium Parse(string xml)
        {
            return XTypedServices.Parse<MD_Medium, MD_Medium_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_Medium(((MD_Medium_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_Medium_Type ContentField)
        {
            this.ContentField=((MD_Medium_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_MediumSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_Medium", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Technical means and media by which a dataset is obtained from the distributor
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_DigitalTransferOptionsSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_DigitalTransferOptions: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_DigitalTransferOptions_Type ContentField;

        public static explicit operator MD_DigitalTransferOptions(XElement xe) { return XTypedServices.ToXTypedElement<MD_DigitalTransferOptions, MD_DigitalTransferOptions_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Technical means and media by which a dataset is obtained from the distributor
        /// </para>
        /// </summary>
        public MD_DigitalTransferOptions()
        {
            SetInnerType(new MD_DigitalTransferOptions_Type());
        }

        /// <summary>
        /// <para>
        /// Technical means and media by which a dataset is obtained from the distributor
        /// </para>
        /// </summary>
        public MD_DigitalTransferOptions(MD_DigitalTransferOptions_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_DigitalTransferOptions_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (unitsOfDistribution?, transferSize?, onLine*, offLine?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType unitsOfDistribution
        {
            get
            {
                return this.ContentField.unitsOfDistribution;
            }
            set
            {
                this.ContentField.unitsOfDistribution=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (unitsOfDistribution?, transferSize?, onLine*, offLine?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Real_PropertyType transferSize
        {
            get
            {
                return this.ContentField.transferSize;
            }
            set
            {
                this.ContentField.transferSize=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (unitsOfDistribution?, transferSize?, onLine*, offLine?)
        /// </para>
        /// </summary>
        public IList<CI_OnlineResource_PropertyType> onLine
        {
            get
            {
                return this.ContentField.onLine;
            }
            set
            {
                this.ContentField.onLine=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (unitsOfDistribution?, transferSize?, onLine*, offLine?)
        /// </para>
        /// </summary>
        public MD_Medium_PropertyType offLine
        {
            get
            {
                return this.ContentField.offLine;
            }
            set
            {
                this.ContentField.offLine=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_DigitalTransferOptions", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_DigitalTransferOptions Load(string xmlFile)
        {
            return XTypedServices.Load<MD_DigitalTransferOptions, MD_DigitalTransferOptions_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_DigitalTransferOptions Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_DigitalTransferOptions, MD_DigitalTransferOptions_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_DigitalTransferOptions Parse(string xml)
        {
            return XTypedServices.Parse<MD_DigitalTransferOptions, MD_DigitalTransferOptions_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_DigitalTransferOptions(((MD_DigitalTransferOptions_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_DigitalTransferOptions_Type ContentField)
        {
            this.ContentField=((MD_DigitalTransferOptions_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_DigitalTransferOptionsSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_DigitalTransferOptions", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Common ways in which the dataset may be obtained or received, and related instructions and fee information
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_StandardOrderProcessSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_StandardOrderProcess: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_StandardOrderProcess_Type ContentField;

        public static explicit operator MD_StandardOrderProcess(XElement xe) { return XTypedServices.ToXTypedElement<MD_StandardOrderProcess, MD_StandardOrderProcess_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Common ways in which the dataset may be obtained or received, and related instructions and fee information
        /// </para>
        /// </summary>
        public MD_StandardOrderProcess()
        {
            SetInnerType(new MD_StandardOrderProcess_Type());
        }

        /// <summary>
        /// <para>
        /// Common ways in which the dataset may be obtained or received, and related instructions and fee information
        /// </para>
        /// </summary>
        public MD_StandardOrderProcess(MD_StandardOrderProcess_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_StandardOrderProcess_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fees?, plannedAvailableDateTime?, orderingInstructions?, turnaround?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType fees
        {
            get
            {
                return this.ContentField.fees;
            }
            set
            {
                this.ContentField.fees=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fees?, plannedAvailableDateTime?, orderingInstructions?, turnaround?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType plannedAvailableDateTime
        {
            get
            {
                return this.ContentField.plannedAvailableDateTime;
            }
            set
            {
                this.ContentField.plannedAvailableDateTime=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fees?, plannedAvailableDateTime?, orderingInstructions?, turnaround?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType orderingInstructions
        {
            get
            {
                return this.ContentField.orderingInstructions;
            }
            set
            {
                this.ContentField.orderingInstructions=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fees?, plannedAvailableDateTime?, orderingInstructions?, turnaround?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType turnaround
        {
            get
            {
                return this.ContentField.turnaround;
            }
            set
            {
                this.ContentField.turnaround=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_StandardOrderProcess", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_StandardOrderProcess Load(string xmlFile)
        {
            return XTypedServices.Load<MD_StandardOrderProcess, MD_StandardOrderProcess_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_StandardOrderProcess Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_StandardOrderProcess, MD_StandardOrderProcess_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_StandardOrderProcess Parse(string xml)
        {
            return XTypedServices.Parse<MD_StandardOrderProcess, MD_StandardOrderProcess_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_StandardOrderProcess(((MD_StandardOrderProcess_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_StandardOrderProcess_Type ContentField)
        {
            this.ContentField=((MD_StandardOrderProcess_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_StandardOrderProcessSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_StandardOrderProcess", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Information about the distributor
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_DistributorSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Distributor: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_Distributor_Type ContentField;

        public static explicit operator MD_Distributor(XElement xe) { return XTypedServices.ToXTypedElement<MD_Distributor, MD_Distributor_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Information about the distributor
        /// </para>
        /// </summary>
        public MD_Distributor()
        {
            SetInnerType(new MD_Distributor_Type());
        }

        /// <summary>
        /// <para>
        /// Information about the distributor
        /// </para>
        /// </summary>
        public MD_Distributor(MD_Distributor_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_Distributor_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (distributorContact, distributionOrderProcess*, distributorFormat*, distributorTransferOptions*)
        /// </para>
        /// </summary>
        public CI_ResponsibleParty_PropertyType distributorContact
        {
            get
            {
                return this.ContentField.distributorContact;
            }
            set
            {
                this.ContentField.distributorContact=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (distributorContact, distributionOrderProcess*, distributorFormat*, distributorTransferOptions*)
        /// </para>
        /// </summary>
        public IList<MD_StandardOrderProcess_PropertyType> distributionOrderProcess
        {
            get
            {
                return this.ContentField.distributionOrderProcess;
            }
            set
            {
                this.ContentField.distributionOrderProcess=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (distributorContact, distributionOrderProcess*, distributorFormat*, distributorTransferOptions*)
        /// </para>
        /// </summary>
        public IList<MD_Format_PropertyType> distributorFormat
        {
            get
            {
                return this.ContentField.distributorFormat;
            }
            set
            {
                this.ContentField.distributorFormat=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (distributorContact, distributionOrderProcess*, distributorFormat*, distributorTransferOptions*)
        /// </para>
        /// </summary>
        public IList<MD_DigitalTransferOptions_PropertyType> distributorTransferOptions
        {
            get
            {
                return this.ContentField.distributorTransferOptions;
            }
            set
            {
                this.ContentField.distributorTransferOptions=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Distributor", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_Distributor Load(string xmlFile)
        {
            return XTypedServices.Load<MD_Distributor, MD_Distributor_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_Distributor Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_Distributor, MD_Distributor_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_Distributor Parse(string xml)
        {
            return XTypedServices.Parse<MD_Distributor, MD_Distributor_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_Distributor(((MD_Distributor_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_Distributor_Type ContentField)
        {
            this.ContentField=((MD_Distributor_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_DistributorSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_Distributor", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Information about the distributor of and options for obtaining the dataset
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_DistributionSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Distribution: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_Distribution_Type ContentField;

        public static explicit operator MD_Distribution(XElement xe) { return XTypedServices.ToXTypedElement<MD_Distribution, MD_Distribution_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Information about the distributor of and options for obtaining the dataset
        /// </para>
        /// </summary>
        public MD_Distribution()
        {
            SetInnerType(new MD_Distribution_Type());
        }

        /// <summary>
        /// <para>
        /// Information about the distributor of and options for obtaining the dataset
        /// </para>
        /// </summary>
        public MD_Distribution(MD_Distribution_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_Distribution_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (distributionFormat*, distributor*, transferOptions*)
        /// </para>
        /// </summary>
        public IList<MD_Format_PropertyType> distributionFormat
        {
            get
            {
                return this.ContentField.distributionFormat;
            }
            set
            {
                this.ContentField.distributionFormat=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (distributionFormat*, distributor*, transferOptions*)
        /// </para>
        /// </summary>
        public IList<MD_Distributor_PropertyType> distributor
        {
            get
            {
                return this.ContentField.distributor;
            }
            set
            {
                this.ContentField.distributor=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (distributionFormat*, distributor*, transferOptions*)
        /// </para>
        /// </summary>
        public IList<MD_DigitalTransferOptions_PropertyType> transferOptions
        {
            get
            {
                return this.ContentField.transferOptions;
            }
            set
            {
                this.ContentField.transferOptions=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Distribution", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_Distribution Load(string xmlFile)
        {
            return XTypedServices.Load<MD_Distribution, MD_Distribution_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_Distribution Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_Distribution, MD_Distribution_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_Distribution Parse(string xml)
        {
            return XTypedServices.Parse<MD_Distribution, MD_Distribution_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_Distribution(((MD_Distribution_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_Distribution_Type ContentField)
        {
            this.ContentField=((MD_Distribution_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_DistributionSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_Distribution", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Description of the form of the data to be distributed
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_FormatSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Format: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_Format_Type ContentField;

        public static explicit operator MD_Format(XElement xe) { return XTypedServices.ToXTypedElement<MD_Format, MD_Format_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Description of the form of the data to be distributed
        /// </para>
        /// </summary>
        public MD_Format()
        {
            SetInnerType(new MD_Format_Type());
        }

        /// <summary>
        /// <para>
        /// Description of the form of the data to be distributed
        /// </para>
        /// </summary>
        public MD_Format(MD_Format_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_Format_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, version, amendmentNumber?, specification?, fileDecompressionTechnique?, formatDistributor*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType name
        {
            get
            {
                return this.ContentField.name;
            }
            set
            {
                this.ContentField.name=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, version, amendmentNumber?, specification?, fileDecompressionTechnique?, formatDistributor*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType version
        {
            get
            {
                return this.ContentField.version;
            }
            set
            {
                this.ContentField.version=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, version, amendmentNumber?, specification?, fileDecompressionTechnique?, formatDistributor*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType amendmentNumber
        {
            get
            {
                return this.ContentField.amendmentNumber;
            }
            set
            {
                this.ContentField.amendmentNumber=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, version, amendmentNumber?, specification?, fileDecompressionTechnique?, formatDistributor*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType specification
        {
            get
            {
                return this.ContentField.specification;
            }
            set
            {
                this.ContentField.specification=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, version, amendmentNumber?, specification?, fileDecompressionTechnique?, formatDistributor*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType fileDecompressionTechnique
        {
            get
            {
                return this.ContentField.fileDecompressionTechnique;
            }
            set
            {
                this.ContentField.fileDecompressionTechnique=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, version, amendmentNumber?, specification?, fileDecompressionTechnique?, formatDistributor*)
        /// </para>
        /// </summary>
        public IList<MD_Distributor_PropertyType> formatDistributor
        {
            get
            {
                return this.ContentField.formatDistributor;
            }
            set
            {
                this.ContentField.formatDistributor=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Format", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_Format Load(string xmlFile)
        {
            return XTypedServices.Load<MD_Format, MD_Format_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_Format Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_Format, MD_Format_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_Format Parse(string xml)
        {
            return XTypedServices.Parse<MD_Format, MD_Format_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_Format(((MD_Format_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_Format_Type ContentField)
        {
            this.ContentField=((MD_Format_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_FormatSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_Format", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_DistributionUnitsSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_DistributionUnits: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator MD_DistributionUnits(XElement xe) { return XTypedServices.ToXTypedElement<MD_DistributionUnits, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_DistributionUnits() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public MD_DistributionUnits(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_DistributionUnits", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_DistributionUnits Load(string xmlFile)
        {
            return XTypedServices.Load<MD_DistributionUnits, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_DistributionUnits Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_DistributionUnits, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_DistributionUnits Parse(string xml)
        {
            return XTypedServices.Parse<MD_DistributionUnits, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_DistributionUnits(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_DistributionUnitsSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_DistributionUnits", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_MediumFormatCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_MediumFormatCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator MD_MediumFormatCode(XElement xe) { return XTypedServices.ToXTypedElement<MD_MediumFormatCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_MediumFormatCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public MD_MediumFormatCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_MediumFormatCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_MediumFormatCode Load(string xmlFile)
        {
            return XTypedServices.Load<MD_MediumFormatCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_MediumFormatCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_MediumFormatCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_MediumFormatCode Parse(string xml)
        {
            return XTypedServices.Parse<MD_MediumFormatCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_MediumFormatCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_MediumFormatCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_MediumFormatCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_MediumNameCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_MediumNameCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator MD_MediumNameCode(XElement xe) { return XTypedServices.ToXTypedElement<MD_MediumNameCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_MediumNameCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public MD_MediumNameCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_MediumNameCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_MediumNameCode Load(string xmlFile)
        {
            return XTypedServices.Load<MD_MediumNameCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_MediumNameCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_MediumNameCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_MediumNameCode Parse(string xml)
        {
            return XTypedServices.Parse<MD_MediumNameCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_MediumNameCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_MediumNameCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_MediumNameCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Information about the scope and frequency of updating
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_MaintenanceInformationSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_MaintenanceInformation: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_MaintenanceInformation_Type ContentField;

        public static explicit operator MD_MaintenanceInformation(XElement xe) { return XTypedServices.ToXTypedElement<MD_MaintenanceInformation, MD_MaintenanceInformation_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Information about the scope and frequency of updating
        /// </para>
        /// </summary>
        public MD_MaintenanceInformation()
        {
            SetInnerType(new MD_MaintenanceInformation_Type());
        }

        /// <summary>
        /// <para>
        /// Information about the scope and frequency of updating
        /// </para>
        /// </summary>
        public MD_MaintenanceInformation(MD_MaintenanceInformation_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_MaintenanceInformation_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (maintenanceAndUpdateFrequency, dateOfNextUpdate?, userDefinedMaintenanceFrequency?, updateScope*, updateScopeDescription*, maintenanceNote*, contact*)
        /// </para>
        /// </summary>
        public MD_MaintenanceFrequencyCode_PropertyType maintenanceAndUpdateFrequency
        {
            get
            {
                return this.ContentField.maintenanceAndUpdateFrequency;
            }
            set
            {
                this.ContentField.maintenanceAndUpdateFrequency=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (maintenanceAndUpdateFrequency, dateOfNextUpdate?, userDefinedMaintenanceFrequency?, updateScope*, updateScopeDescription*, maintenanceNote*, contact*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Date_PropertyType dateOfNextUpdate
        {
            get
            {
                return this.ContentField.dateOfNextUpdate;
            }
            set
            {
                this.ContentField.dateOfNextUpdate=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (maintenanceAndUpdateFrequency, dateOfNextUpdate?, userDefinedMaintenanceFrequency?, updateScope*, updateScopeDescription*, maintenanceNote*, contact*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gts.TM_PeriodDuration_PropertyType userDefinedMaintenanceFrequency
        {
            get
            {
                return this.ContentField.userDefinedMaintenanceFrequency;
            }
            set
            {
                this.ContentField.userDefinedMaintenanceFrequency=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (maintenanceAndUpdateFrequency, dateOfNextUpdate?, userDefinedMaintenanceFrequency?, updateScope*, updateScopeDescription*, maintenanceNote*, contact*)
        /// </para>
        /// </summary>
        public IList<MD_ScopeCode_PropertyType> updateScope
        {
            get
            {
                return this.ContentField.updateScope;
            }
            set
            {
                this.ContentField.updateScope=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (maintenanceAndUpdateFrequency, dateOfNextUpdate?, userDefinedMaintenanceFrequency?, updateScope*, updateScopeDescription*, maintenanceNote*, contact*)
        /// </para>
        /// </summary>
        public IList<MD_ScopeDescription_PropertyType> updateScopeDescription
        {
            get
            {
                return this.ContentField.updateScopeDescription;
            }
            set
            {
                this.ContentField.updateScopeDescription=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (maintenanceAndUpdateFrequency, dateOfNextUpdate?, userDefinedMaintenanceFrequency?, updateScope*, updateScopeDescription*, maintenanceNote*, contact*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> maintenanceNote
        {
            get
            {
                return this.ContentField.maintenanceNote;
            }
            set
            {
                this.ContentField.maintenanceNote=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (maintenanceAndUpdateFrequency, dateOfNextUpdate?, userDefinedMaintenanceFrequency?, updateScope*, updateScopeDescription*, maintenanceNote*, contact*)
        /// </para>
        /// </summary>
        public IList<CI_ResponsibleParty_PropertyType> contact
        {
            get
            {
                return this.ContentField.contact;
            }
            set
            {
                this.ContentField.contact=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_MaintenanceInformation", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_MaintenanceInformation Load(string xmlFile)
        {
            return XTypedServices.Load<MD_MaintenanceInformation, MD_MaintenanceInformation_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_MaintenanceInformation Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_MaintenanceInformation, MD_MaintenanceInformation_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_MaintenanceInformation Parse(string xml)
        {
            return XTypedServices.Parse<MD_MaintenanceInformation, MD_MaintenanceInformation_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_MaintenanceInformation(((MD_MaintenanceInformation_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_MaintenanceInformation_Type ContentField)
        {
            this.ContentField=((MD_MaintenanceInformation_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_MaintenanceInformationSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_MaintenanceInformation", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Description of the class of information covered by the information
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ScopeDescriptionSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ScopeDescription: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_ScopeDescription_Type ContentField;

        public static explicit operator MD_ScopeDescription(XElement xe) { return XTypedServices.ToXTypedElement<MD_ScopeDescription, MD_ScopeDescription_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Description of the class of information covered by the information
        /// </para>
        /// </summary>
        public MD_ScopeDescription()
        {
            SetInnerType(new MD_ScopeDescription_Type());
        }

        /// <summary>
        /// <para>
        /// Description of the class of information covered by the information
        /// </para>
        /// </summary>
        public MD_ScopeDescription(MD_ScopeDescription_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_ScopeDescription_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating, choice
        /// </para>
        /// <para>
        /// Regular expression: (attributes+ | features+ | featureInstances+ | attributeInstances+ | dataset | other)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType> attributes
        {
            get
            {
                return this.ContentField.attributes;
            }
            set
            {
                this.ContentField.attributes=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating, choice
        /// </para>
        /// <para>
        /// Regular expression: (attributes+ | features+ | featureInstances+ | attributeInstances+ | dataset | other)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType> features
        {
            get
            {
                return this.ContentField.features;
            }
            set
            {
                this.ContentField.features=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating, choice
        /// </para>
        /// <para>
        /// Regular expression: (attributes+ | features+ | featureInstances+ | attributeInstances+ | dataset | other)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType> featureInstances
        {
            get
            {
                return this.ContentField.featureInstances;
            }
            set
            {
                this.ContentField.featureInstances=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating, choice
        /// </para>
        /// <para>
        /// Regular expression: (attributes+ | features+ | featureInstances+ | attributeInstances+ | dataset | other)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType> attributeInstances
        {
            get
            {
                return this.ContentField.attributeInstances;
            }
            set
            {
                this.ContentField.attributeInstances=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, choice
        /// </para>
        /// <para>
        /// Regular expression: (attributes+ | features+ | featureInstances+ | attributeInstances+ | dataset | other)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType dataset
        {
            get
            {
                return this.ContentField.dataset;
            }
            set
            {
                this.ContentField.dataset=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, choice
        /// </para>
        /// <para>
        /// Regular expression: (attributes+ | features+ | featureInstances+ | attributeInstances+ | dataset | other)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType other
        {
            get
            {
                return this.ContentField.other;
            }
            set
            {
                this.ContentField.other=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ScopeDescription", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_ScopeDescription Load(string xmlFile)
        {
            return XTypedServices.Load<MD_ScopeDescription, MD_ScopeDescription_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_ScopeDescription Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_ScopeDescription, MD_ScopeDescription_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_ScopeDescription Parse(string xml)
        {
            return XTypedServices.Parse<MD_ScopeDescription, MD_ScopeDescription_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_ScopeDescription(((MD_ScopeDescription_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_ScopeDescription_Type ContentField)
        {
            this.ContentField=((MD_ScopeDescription_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_ScopeDescriptionSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_ScopeDescription", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_MaintenanceFrequencyCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_MaintenanceFrequencyCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator MD_MaintenanceFrequencyCode(XElement xe) { return XTypedServices.ToXTypedElement<MD_MaintenanceFrequencyCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_MaintenanceFrequencyCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public MD_MaintenanceFrequencyCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_MaintenanceFrequencyCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_MaintenanceFrequencyCode Load(string xmlFile)
        {
            return XTypedServices.Load<MD_MaintenanceFrequencyCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_MaintenanceFrequencyCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_MaintenanceFrequencyCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_MaintenanceFrequencyCode Parse(string xml)
        {
            return XTypedServices.Parse<MD_MaintenanceFrequencyCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_MaintenanceFrequencyCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_MaintenanceFrequencyCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_MaintenanceFrequencyCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_ScopeCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ScopeCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator MD_ScopeCode(XElement xe) { return XTypedServices.ToXTypedElement<MD_ScopeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_ScopeCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public MD_ScopeCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ScopeCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_ScopeCode Load(string xmlFile)
        {
            return XTypedServices.Load<MD_ScopeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_ScopeCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_ScopeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_ScopeCode Parse(string xml)
        {
            return XTypedServices.Parse<MD_ScopeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_ScopeCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_ScopeCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_ScopeCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Basic information about data
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("AbstractMD_IdentificationSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractMD_Identification: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private AbstractMD_Identification_Type ContentField;

        public static explicit operator AbstractMD_Identification(XElement xe) { return (AbstractMD_Identification)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected AbstractMD_Identification(bool setNull)
        {
        }

        /// <summary>
        /// <para>
        /// Basic information about data
        /// </para>
        /// </summary>
        public AbstractMD_Identification()
        {
            throw new InvalidOperationException();
        }

        /// <summary>
        /// <para>
        /// Basic information about data
        /// </para>
        /// </summary>
        public AbstractMD_Identification(AbstractMD_Identification_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                if ((this.ContentField!=null))
                {
                    this.ContentField.Untyped=value;
                }
            }
        }

        public AbstractMD_Identification_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public CI_Citation_PropertyType citation
        {
            get
            {
                return this.ContentField.citation;
            }
            set
            {
                this.ContentField.citation=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType @abstract
        {
            get
            {
                return this.ContentField.@abstract;
            }
            set
            {
                this.ContentField.@abstract=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType purpose
        {
            get
            {
                return this.ContentField.purpose;
            }
            set
            {
                this.ContentField.purpose=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> credit
        {
            get
            {
                return this.ContentField.credit;
            }
            set
            {
                this.ContentField.credit=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public IList<MD_ProgressCode_PropertyType> status
        {
            get
            {
                return this.ContentField.status;
            }
            set
            {
                this.ContentField.status=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public IList<CI_ResponsibleParty_PropertyType> pointOfContact
        {
            get
            {
                return this.ContentField.pointOfContact;
            }
            set
            {
                this.ContentField.pointOfContact=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public IList<MD_MaintenanceInformation_PropertyType> resourceMaintenance
        {
            get
            {
                return this.ContentField.resourceMaintenance;
            }
            set
            {
                this.ContentField.resourceMaintenance=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public IList<MD_BrowseGraphic_PropertyType> graphicOverview
        {
            get
            {
                return this.ContentField.graphicOverview;
            }
            set
            {
                this.ContentField.graphicOverview=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public IList<MD_Format_PropertyType> resourceFormat
        {
            get
            {
                return this.ContentField.resourceFormat;
            }
            set
            {
                this.ContentField.resourceFormat=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public IList<MD_Keywords_PropertyType> descriptiveKeywords
        {
            get
            {
                return this.ContentField.descriptiveKeywords;
            }
            set
            {
                this.ContentField.descriptiveKeywords=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public IList<MD_Usage_PropertyType> resourceSpecificUsage
        {
            get
            {
                return this.ContentField.resourceSpecificUsage;
            }
            set
            {
                this.ContentField.resourceSpecificUsage=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public IList<MD_Constraints_PropertyType> resourceConstraints
        {
            get
            {
                return this.ContentField.resourceConstraints;
            }
            set
            {
                this.ContentField.resourceConstraints=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*)
        /// </para>
        /// </summary>
        public IList<MD_AggregateInformation_PropertyType> aggregationInfo
        {
            get
            {
                return this.ContentField.aggregationInfo;
            }
            set
            {
                this.ContentField.aggregationInfo=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractMD_Identification", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static AbstractMD_Identification Load(string xmlFile)
        {
            return ((AbstractMD_Identification)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractMD_Identification Load(System.IO.TextReader xmlFile)
        {
            return ((AbstractMD_Identification)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractMD_Identification Parse(string xml)
        {
            return ((AbstractMD_Identification)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        private void SetInnerType(AbstractMD_Identification_Type ContentField)
        {
            this.ContentField=((AbstractMD_Identification_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        protected virtual void SetSubstitutionMember(AbstractMD_Identification_Type ContentField)
        {
            this.ContentField=ContentField;
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType AbstractMD_IdentificationSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("AbstractMD_Identification", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Graphic that provides an illustration of the dataset (should include a legend for the graphic)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_BrowseGraphicSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_BrowseGraphic: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_BrowseGraphic_Type ContentField;

        public static explicit operator MD_BrowseGraphic(XElement xe) { return XTypedServices.ToXTypedElement<MD_BrowseGraphic, MD_BrowseGraphic_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Graphic that provides an illustration of the dataset (should include a legend for the graphic)
        /// </para>
        /// </summary>
        public MD_BrowseGraphic()
        {
            SetInnerType(new MD_BrowseGraphic_Type());
        }

        /// <summary>
        /// <para>
        /// Graphic that provides an illustration of the dataset (should include a legend for the graphic)
        /// </para>
        /// </summary>
        public MD_BrowseGraphic(MD_BrowseGraphic_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_BrowseGraphic_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (fileName, fileDescription?, fileType?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType fileName
        {
            get
            {
                return this.ContentField.fileName;
            }
            set
            {
                this.ContentField.fileName=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileName, fileDescription?, fileType?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType fileDescription
        {
            get
            {
                return this.ContentField.fileDescription;
            }
            set
            {
                this.ContentField.fileDescription=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileName, fileDescription?, fileType?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType fileType
        {
            get
            {
                return this.ContentField.fileType;
            }
            set
            {
                this.ContentField.fileType=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_BrowseGraphic", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_BrowseGraphic Load(string xmlFile)
        {
            return XTypedServices.Load<MD_BrowseGraphic, MD_BrowseGraphic_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_BrowseGraphic Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_BrowseGraphic, MD_BrowseGraphic_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_BrowseGraphic Parse(string xml)
        {
            return XTypedServices.Parse<MD_BrowseGraphic, MD_BrowseGraphic_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_BrowseGraphic(((MD_BrowseGraphic_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_BrowseGraphic_Type ContentField)
        {
            this.ContentField=((MD_BrowseGraphic_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_BrowseGraphicSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_BrowseGraphic", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_DataIdentificationSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_DataIdentification: global::GeoSik.Iso.Ts19139.Gmd.AbstractMD_Identification, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_DataIdentification_Type ContentField;

        public static explicit operator MD_DataIdentification(XElement xe) { return XTypedServices.ToXTypedElement<MD_DataIdentification, MD_DataIdentification_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_DataIdentification() :
            base(true)
        {
            SetInnerType(new MD_DataIdentification_Type());
        }

        public MD_DataIdentification(MD_DataIdentification_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new MD_DataIdentification_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*, spatialRepresentationType*, spatialResolution*, language+, characterSet*, topicCategory*, environmentDescription?, extent*, supplementalInformation?)
        /// </para>
        /// </summary>
        public IList<MD_SpatialRepresentationTypeCode_PropertyType> spatialRepresentationType
        {
            get
            {
                return this.ContentField.spatialRepresentationType;
            }
            set
            {
                this.ContentField.spatialRepresentationType=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*, spatialRepresentationType*, spatialResolution*, language+, characterSet*, topicCategory*, environmentDescription?, extent*, supplementalInformation?)
        /// </para>
        /// </summary>
        public IList<MD_Resolution_PropertyType> spatialResolution
        {
            get
            {
                return this.ContentField.spatialResolution;
            }
            set
            {
                this.ContentField.spatialResolution=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*, spatialRepresentationType*, spatialResolution*, language+, characterSet*, topicCategory*, environmentDescription?, extent*, supplementalInformation?)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> language
        {
            get
            {
                return this.ContentField.language;
            }
            set
            {
                this.ContentField.language=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*, spatialRepresentationType*, spatialResolution*, language+, characterSet*, topicCategory*, environmentDescription?, extent*, supplementalInformation?)
        /// </para>
        /// </summary>
        public IList<MD_CharacterSetCode_PropertyType> characterSet
        {
            get
            {
                return this.ContentField.characterSet;
            }
            set
            {
                this.ContentField.characterSet=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*, spatialRepresentationType*, spatialResolution*, language+, characterSet*, topicCategory*, environmentDescription?, extent*, supplementalInformation?)
        /// </para>
        /// </summary>
        public IList<MD_TopicCategoryCode_PropertyType> topicCategory
        {
            get
            {
                return this.ContentField.topicCategory;
            }
            set
            {
                this.ContentField.topicCategory=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*, spatialRepresentationType*, spatialResolution*, language+, characterSet*, topicCategory*, environmentDescription?, extent*, supplementalInformation?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType environmentDescription
        {
            get
            {
                return this.ContentField.environmentDescription;
            }
            set
            {
                this.ContentField.environmentDescription=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*, spatialRepresentationType*, spatialResolution*, language+, characterSet*, topicCategory*, environmentDescription?, extent*, supplementalInformation?)
        /// </para>
        /// </summary>
        public IList<EX_Extent_PropertyType> extent
        {
            get
            {
                return this.ContentField.extent;
            }
            set
            {
                this.ContentField.extent=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (citation, @abstract, purpose?, credit*, status*, pointOfContact*, resourceMaintenance*, graphicOverview*, resourceFormat*, descriptiveKeywords*, resourceSpecificUsage*, resourceConstraints*, aggregationInfo*, spatialRepresentationType*, spatialResolution*, language+, characterSet*, topicCategory*, environmentDescription?, extent*, supplementalInformation?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType supplementalInformation
        {
            get
            {
                return this.ContentField.supplementalInformation;
            }
            set
            {
                this.ContentField.supplementalInformation=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_DataIdentification", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_DataIdentification Load(string xmlFile)
        {
            return XTypedServices.Load<MD_DataIdentification, MD_DataIdentification_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_DataIdentification Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_DataIdentification, MD_DataIdentification_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_DataIdentification Parse(string xml)
        {
            return XTypedServices.Parse<MD_DataIdentification, MD_DataIdentification_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_DataIdentification(((MD_DataIdentification_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_DataIdentification_Type ContentField)
        {
            this.ContentField=((MD_DataIdentification_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_DataIdentificationSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_DataIdentification", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// See 19119 for further info
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_ServiceIdentificationSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ServiceIdentification: global::GeoSik.Iso.Ts19139.Gmd.AbstractMD_Identification, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_ServiceIdentification_Type ContentField;

        public static explicit operator MD_ServiceIdentification(XElement xe) { return XTypedServices.ToXTypedElement<MD_ServiceIdentification, MD_ServiceIdentification_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// See 19119 for further info
        /// </para>
        /// </summary>
        public MD_ServiceIdentification() :
            base(true)
        {
            SetInnerType(new MD_ServiceIdentification_Type());
        }

        /// <summary>
        /// <para>
        /// See 19119 for further info
        /// </para>
        /// </summary>
        public MD_ServiceIdentification(MD_ServiceIdentification_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new MD_ServiceIdentification_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ServiceIdentification", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_ServiceIdentification Load(string xmlFile)
        {
            return XTypedServices.Load<MD_ServiceIdentification, MD_ServiceIdentification_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_ServiceIdentification Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_ServiceIdentification, MD_ServiceIdentification_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_ServiceIdentification Parse(string xml)
        {
            return XTypedServices.Parse<MD_ServiceIdentification, MD_ServiceIdentification_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_ServiceIdentification(((MD_ServiceIdentification_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_ServiceIdentification_Type ContentField)
        {
            this.ContentField=((MD_ServiceIdentification_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_ServiceIdentificationSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_ServiceIdentification", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_RepresentativeFractionSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_RepresentativeFraction: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_RepresentativeFraction_Type ContentField;

        public static explicit operator MD_RepresentativeFraction(XElement xe) { return XTypedServices.ToXTypedElement<MD_RepresentativeFraction, MD_RepresentativeFraction_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_RepresentativeFraction()
        {
            SetInnerType(new MD_RepresentativeFraction_Type());
        }

        public MD_RepresentativeFraction(MD_RepresentativeFraction_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_RepresentativeFraction_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (denominator)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Integer_PropertyType denominator
        {
            get
            {
                return this.ContentField.denominator;
            }
            set
            {
                this.ContentField.denominator=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_RepresentativeFraction", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_RepresentativeFraction Load(string xmlFile)
        {
            return XTypedServices.Load<MD_RepresentativeFraction, MD_RepresentativeFraction_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_RepresentativeFraction Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_RepresentativeFraction, MD_RepresentativeFraction_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_RepresentativeFraction Parse(string xml)
        {
            return XTypedServices.Parse<MD_RepresentativeFraction, MD_RepresentativeFraction_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_RepresentativeFraction(((MD_RepresentativeFraction_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_RepresentativeFraction_Type ContentField)
        {
            this.ContentField=((MD_RepresentativeFraction_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_RepresentativeFractionSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_RepresentativeFraction", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Brief description of ways in which the dataset is currently used.
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_UsageSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Usage: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_Usage_Type ContentField;

        public static explicit operator MD_Usage(XElement xe) { return XTypedServices.ToXTypedElement<MD_Usage, MD_Usage_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Brief description of ways in which the dataset is currently used.
        /// </para>
        /// </summary>
        public MD_Usage()
        {
            SetInnerType(new MD_Usage_Type());
        }

        /// <summary>
        /// <para>
        /// Brief description of ways in which the dataset is currently used.
        /// </para>
        /// </summary>
        public MD_Usage(MD_Usage_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_Usage_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (specificUsage, usageDateTime?, userDeterminedLimitations?, userContactInfo+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType specificUsage
        {
            get
            {
                return this.ContentField.specificUsage;
            }
            set
            {
                this.ContentField.specificUsage=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (specificUsage, usageDateTime?, userDeterminedLimitations?, userContactInfo+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.DateTime_PropertyType usageDateTime
        {
            get
            {
                return this.ContentField.usageDateTime;
            }
            set
            {
                this.ContentField.usageDateTime=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (specificUsage, usageDateTime?, userDeterminedLimitations?, userContactInfo+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType userDeterminedLimitations
        {
            get
            {
                return this.ContentField.userDeterminedLimitations;
            }
            set
            {
                this.ContentField.userDeterminedLimitations=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (specificUsage, usageDateTime?, userDeterminedLimitations?, userContactInfo+)
        /// </para>
        /// </summary>
        public IList<CI_ResponsibleParty_PropertyType> userContactInfo
        {
            get
            {
                return this.ContentField.userContactInfo;
            }
            set
            {
                this.ContentField.userContactInfo=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Usage", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_Usage Load(string xmlFile)
        {
            return XTypedServices.Load<MD_Usage, MD_Usage_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_Usage Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_Usage, MD_Usage_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_Usage Parse(string xml)
        {
            return XTypedServices.Parse<MD_Usage, MD_Usage_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_Usage(((MD_Usage_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_Usage_Type ContentField)
        {
            this.ContentField=((MD_Usage_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_UsageSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_Usage", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Keywords, their type and reference source
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_KeywordsSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Keywords: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_Keywords_Type ContentField;

        public static explicit operator MD_Keywords(XElement xe) { return XTypedServices.ToXTypedElement<MD_Keywords, MD_Keywords_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Keywords, their type and reference source
        /// </para>
        /// </summary>
        public MD_Keywords()
        {
            SetInnerType(new MD_Keywords_Type());
        }

        /// <summary>
        /// <para>
        /// Keywords, their type and reference source
        /// </para>
        /// </summary>
        public MD_Keywords(MD_Keywords_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_Keywords_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (keyword+, type?, thesaurusName?)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> keyword
        {
            get
            {
                return this.ContentField.keyword;
            }
            set
            {
                this.ContentField.keyword=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (keyword+, type?, thesaurusName?)
        /// </para>
        /// </summary>
        public MD_KeywordTypeCode_PropertyType type
        {
            get
            {
                return this.ContentField.type;
            }
            set
            {
                this.ContentField.type=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (keyword+, type?, thesaurusName?)
        /// </para>
        /// </summary>
        public CI_Citation_PropertyType thesaurusName
        {
            get
            {
                return this.ContentField.thesaurusName;
            }
            set
            {
                this.ContentField.thesaurusName=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Keywords", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_Keywords Load(string xmlFile)
        {
            return XTypedServices.Load<MD_Keywords, MD_Keywords_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_Keywords Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_Keywords, MD_Keywords_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_Keywords Parse(string xml)
        {
            return XTypedServices.Parse<MD_Keywords, MD_Keywords_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_Keywords(((MD_Keywords_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_Keywords_Type ContentField)
        {
            this.ContentField=((MD_Keywords_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_KeywordsSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_Keywords", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DS_AssociationSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_Association: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DS_Association_Type ContentField;

        public static explicit operator DS_Association(XElement xe) { return XTypedServices.ToXTypedElement<DS_Association, DS_Association_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DS_Association()
        {
            SetInnerType(new DS_Association_Type());
        }

        public DS_Association(DS_Association_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public DS_Association_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_Association", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static DS_Association Load(string xmlFile)
        {
            return XTypedServices.Load<DS_Association, DS_Association_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DS_Association Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DS_Association, DS_Association_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DS_Association Parse(string xml)
        {
            return XTypedServices.Parse<DS_Association, DS_Association_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DS_Association(((DS_Association_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DS_Association_Type ContentField)
        {
            this.ContentField=((DS_Association_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DS_AssociationSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DS_Association", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Encapsulates the dataset aggregation information
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_AggregateInformationSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_AggregateInformation: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_AggregateInformation_Type ContentField;

        public static explicit operator MD_AggregateInformation(XElement xe) { return XTypedServices.ToXTypedElement<MD_AggregateInformation, MD_AggregateInformation_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Encapsulates the dataset aggregation information
        /// </para>
        /// </summary>
        public MD_AggregateInformation()
        {
            SetInnerType(new MD_AggregateInformation_Type());
        }

        /// <summary>
        /// <para>
        /// Encapsulates the dataset aggregation information
        /// </para>
        /// </summary>
        public MD_AggregateInformation(MD_AggregateInformation_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_AggregateInformation_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (aggregateDataSetName?, aggregateDataSetIdentifier?, associationType, initiativeType?)
        /// </para>
        /// </summary>
        public CI_Citation_PropertyType aggregateDataSetName
        {
            get
            {
                return this.ContentField.aggregateDataSetName;
            }
            set
            {
                this.ContentField.aggregateDataSetName=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (aggregateDataSetName?, aggregateDataSetIdentifier?, associationType, initiativeType?)
        /// </para>
        /// </summary>
        public MD_Identifier_PropertyType aggregateDataSetIdentifier
        {
            get
            {
                return this.ContentField.aggregateDataSetIdentifier;
            }
            set
            {
                this.ContentField.aggregateDataSetIdentifier=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (aggregateDataSetName?, aggregateDataSetIdentifier?, associationType, initiativeType?)
        /// </para>
        /// </summary>
        public DS_AssociationTypeCode_PropertyType associationType
        {
            get
            {
                return this.ContentField.associationType;
            }
            set
            {
                this.ContentField.associationType=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (aggregateDataSetName?, aggregateDataSetIdentifier?, associationType, initiativeType?)
        /// </para>
        /// </summary>
        public DS_InitiativeTypeCode_PropertyType initiativeType
        {
            get
            {
                return this.ContentField.initiativeType;
            }
            set
            {
                this.ContentField.initiativeType=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_AggregateInformation", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_AggregateInformation Load(string xmlFile)
        {
            return XTypedServices.Load<MD_AggregateInformation, MD_AggregateInformation_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_AggregateInformation Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_AggregateInformation, MD_AggregateInformation_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_AggregateInformation Parse(string xml)
        {
            return XTypedServices.Parse<MD_AggregateInformation, MD_AggregateInformation_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_AggregateInformation(((MD_AggregateInformation_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_AggregateInformation_Type ContentField)
        {
            this.ContentField=((MD_AggregateInformation_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_AggregateInformationSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_AggregateInformation", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_ResolutionSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Resolution: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_Resolution_Type ContentField;

        public static explicit operator MD_Resolution(XElement xe) { return XTypedServices.ToXTypedElement<MD_Resolution, MD_Resolution_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_Resolution()
        {
            SetInnerType(new MD_Resolution_Type());
        }

        public MD_Resolution(MD_Resolution_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_Resolution_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, choice
        /// </para>
        /// <para>
        /// Regular expression: (equivalentScale | distance)
        /// </para>
        /// </summary>
        public MD_RepresentativeFraction_PropertyType equivalentScale
        {
            get
            {
                return this.ContentField.equivalentScale;
            }
            set
            {
                this.ContentField.equivalentScale=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, choice
        /// </para>
        /// <para>
        /// Regular expression: (equivalentScale | distance)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Distance_PropertyType distance
        {
            get
            {
                return this.ContentField.distance;
            }
            set
            {
                this.ContentField.distance=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Resolution", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_Resolution Load(string xmlFile)
        {
            return XTypedServices.Load<MD_Resolution, MD_Resolution_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_Resolution Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_Resolution, MD_Resolution_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_Resolution Parse(string xml)
        {
            return XTypedServices.Parse<MD_Resolution, MD_Resolution_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_Resolution(((MD_Resolution_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_Resolution_Type ContentField)
        {
            this.ContentField=((MD_Resolution_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_ResolutionSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_Resolution", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// High-level geospatial data thematic classification to assist in the grouping and search of available geospatial datasets
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_TopicCategoryCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_TopicCategoryCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        public static explicit operator MD_TopicCategoryCode(XElement xe) { return XTypedServices.ToXTypedElement<MD_TopicCategoryCode>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// High-level geospatial data thematic classification to assist in the grouping and search of available geospatial datasets
        /// </para>
        /// </summary>
        public MD_TopicCategoryCode()
        {
        }

        /// <summary>
        /// <para>
        /// High-level geospatial data thematic classification to assist in the grouping and search of available geospatial datasets
        /// </para>
        /// </summary>
        public MD_TopicCategoryCode(string content)
        {
            this.TypedValue=content;
        }

        public new string TypedValue
        {
            get
            {
                XElement x=this.Untyped;
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetValueWithValidation(value, "TypedValue", global::GeoSik.Iso.Ts19139.Gmd.MD_TopicCategoryCode_Type.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_TopicCategoryCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_TopicCategoryCode Load(string xmlFile)
        {
            return XTypedServices.Load<MD_TopicCategoryCode>(xmlFile);
        }

        public static MD_TopicCategoryCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_TopicCategoryCode>(xmlFile);
        }

        public new static MD_TopicCategoryCode Parse(string xml)
        {
            return XTypedServices.Parse<MD_TopicCategoryCode>(xml);
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MD_TopicCategoryCode>(this);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_TopicCategoryCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_TopicCategoryCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_CharacterSetCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_CharacterSetCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator MD_CharacterSetCode(XElement xe) { return XTypedServices.ToXTypedElement<MD_CharacterSetCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_CharacterSetCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public MD_CharacterSetCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_CharacterSetCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_CharacterSetCode Load(string xmlFile)
        {
            return XTypedServices.Load<MD_CharacterSetCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_CharacterSetCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_CharacterSetCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_CharacterSetCode Parse(string xml)
        {
            return XTypedServices.Parse<MD_CharacterSetCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_CharacterSetCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_CharacterSetCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_CharacterSetCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_SpatialRepresentationTypeCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_SpatialRepresentationTypeCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator MD_SpatialRepresentationTypeCode(XElement xe) { return XTypedServices.ToXTypedElement<MD_SpatialRepresentationTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_SpatialRepresentationTypeCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public MD_SpatialRepresentationTypeCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_SpatialRepresentationTypeCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_SpatialRepresentationTypeCode Load(string xmlFile)
        {
            return XTypedServices.Load<MD_SpatialRepresentationTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_SpatialRepresentationTypeCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_SpatialRepresentationTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_SpatialRepresentationTypeCode Parse(string xml)
        {
            return XTypedServices.Parse<MD_SpatialRepresentationTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_SpatialRepresentationTypeCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_SpatialRepresentationTypeCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_SpatialRepresentationTypeCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_ProgressCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_ProgressCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator MD_ProgressCode(XElement xe) { return XTypedServices.ToXTypedElement<MD_ProgressCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_ProgressCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public MD_ProgressCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_ProgressCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_ProgressCode Load(string xmlFile)
        {
            return XTypedServices.Load<MD_ProgressCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_ProgressCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_ProgressCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_ProgressCode Parse(string xml)
        {
            return XTypedServices.Parse<MD_ProgressCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_ProgressCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_ProgressCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_ProgressCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MD_KeywordTypeCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_KeywordTypeCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator MD_KeywordTypeCode(XElement xe) { return XTypedServices.ToXTypedElement<MD_KeywordTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MD_KeywordTypeCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public MD_KeywordTypeCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_KeywordTypeCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MD_KeywordTypeCode Load(string xmlFile)
        {
            return XTypedServices.Load<MD_KeywordTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_KeywordTypeCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_KeywordTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MD_KeywordTypeCode Parse(string xml)
        {
            return XTypedServices.Parse<MD_KeywordTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_KeywordTypeCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_KeywordTypeCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_KeywordTypeCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DS_AssociationTypeCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_AssociationTypeCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator DS_AssociationTypeCode(XElement xe) { return XTypedServices.ToXTypedElement<DS_AssociationTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DS_AssociationTypeCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public DS_AssociationTypeCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_AssociationTypeCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DS_AssociationTypeCode Load(string xmlFile)
        {
            return XTypedServices.Load<DS_AssociationTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DS_AssociationTypeCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DS_AssociationTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DS_AssociationTypeCode Parse(string xml)
        {
            return XTypedServices.Parse<DS_AssociationTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DS_AssociationTypeCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DS_AssociationTypeCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DS_AssociationTypeCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DS_InitiativeTypeCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_InitiativeTypeCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator DS_InitiativeTypeCode(XElement xe) { return XTypedServices.ToXTypedElement<DS_InitiativeTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DS_InitiativeTypeCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public DS_InitiativeTypeCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_InitiativeTypeCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DS_InitiativeTypeCode Load(string xmlFile)
        {
            return XTypedServices.Load<DS_InitiativeTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DS_InitiativeTypeCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DS_InitiativeTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DS_InitiativeTypeCode Parse(string xml)
        {
            return XTypedServices.Parse<DS_InitiativeTypeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DS_InitiativeTypeCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DS_InitiativeTypeCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DS_InitiativeTypeCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("PT_FreeTextSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class PT_FreeText: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private PT_FreeText_Type ContentField;

        public static explicit operator PT_FreeText(XElement xe) { return XTypedServices.ToXTypedElement<PT_FreeText, PT_FreeText_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public PT_FreeText()
        {
            SetInnerType(new PT_FreeText_Type());
        }

        public PT_FreeText(PT_FreeText_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public PT_FreeText_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (textGroup+)
        /// </para>
        /// </summary>
        public IList<LocalisedCharacterString_PropertyType> textGroup
        {
            get
            {
                return this.ContentField.textGroup;
            }
            set
            {
                this.ContentField.textGroup=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("PT_FreeText", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static PT_FreeText Load(string xmlFile)
        {
            return XTypedServices.Load<PT_FreeText, PT_FreeText_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static PT_FreeText Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<PT_FreeText, PT_FreeText_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static PT_FreeText Parse(string xml)
        {
            return XTypedServices.Parse<PT_FreeText, PT_FreeText_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new PT_FreeText(((PT_FreeText_Type)(this.Content.Clone())));
        }

        private void SetInnerType(PT_FreeText_Type ContentField)
        {
            this.ContentField=((PT_FreeText_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType PT_FreeTextSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("PT_FreeText", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("PT_LocaleSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class PT_Locale: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private PT_Locale_Type ContentField;

        public static explicit operator PT_Locale(XElement xe) { return XTypedServices.ToXTypedElement<PT_Locale, PT_Locale_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public PT_Locale()
        {
            SetInnerType(new PT_Locale_Type());
        }

        public PT_Locale(PT_Locale_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public PT_Locale_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (languageCode, country?, characterEncoding)
        /// </para>
        /// </summary>
        public LanguageCode_PropertyType languageCode
        {
            get
            {
                return this.ContentField.languageCode;
            }
            set
            {
                this.ContentField.languageCode=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (languageCode, country?, characterEncoding)
        /// </para>
        /// </summary>
        public Country_PropertyType country
        {
            get
            {
                return this.ContentField.country;
            }
            set
            {
                this.ContentField.country=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (languageCode, country?, characterEncoding)
        /// </para>
        /// </summary>
        public MD_CharacterSetCode_PropertyType characterEncoding
        {
            get
            {
                return this.ContentField.characterEncoding;
            }
            set
            {
                this.ContentField.characterEncoding=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("PT_Locale", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static PT_Locale Load(string xmlFile)
        {
            return XTypedServices.Load<PT_Locale, PT_Locale_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static PT_Locale Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<PT_Locale, PT_Locale_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static PT_Locale Parse(string xml)
        {
            return XTypedServices.Parse<PT_Locale, PT_Locale_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new PT_Locale(((PT_Locale_Type)(this.Content.Clone())));
        }

        private void SetInnerType(PT_Locale_Type ContentField)
        {
            this.ContentField=((PT_Locale_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType PT_LocaleSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("PT_Locale", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("LocalisedCharacterStringSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class LocalisedCharacterString: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private LocalisedCharacterString_Type ContentField;

        public static explicit operator LocalisedCharacterString(XElement xe) { return XTypedServices.ToXTypedElement<LocalisedCharacterString, LocalisedCharacterString_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public LocalisedCharacterString() :
            base()
        {
            SetInnerType(new LocalisedCharacterString_Type());
        }

        public LocalisedCharacterString(LocalisedCharacterString_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new LocalisedCharacterString_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string id
        {
            get
            {
                return this.ContentField.id;
            }
            set
            {
                this.ContentField.id=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri locale
        {
            get
            {
                return this.ContentField.locale;
            }
            set
            {
                this.ContentField.locale=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("LocalisedCharacterString", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static LocalisedCharacterString Load(string xmlFile)
        {
            return XTypedServices.Load<LocalisedCharacterString, LocalisedCharacterString_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static LocalisedCharacterString Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<LocalisedCharacterString, LocalisedCharacterString_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static LocalisedCharacterString Parse(string xml)
        {
            return XTypedServices.Parse<LocalisedCharacterString, LocalisedCharacterString_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new LocalisedCharacterString(((LocalisedCharacterString_Type)(this.Content.Clone())));
        }

        private void SetInnerType(LocalisedCharacterString_Type ContentField)
        {
            this.ContentField=((LocalisedCharacterString_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType LocalisedCharacterStringSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("LocalisedCharacterString", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("PT_LocaleContainerSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class PT_LocaleContainer: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private PT_LocaleContainer_Type ContentField;

        public static explicit operator PT_LocaleContainer(XElement xe) { return XTypedServices.ToXTypedElement<PT_LocaleContainer, PT_LocaleContainer_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public PT_LocaleContainer()
        {
            SetInnerType(new PT_LocaleContainer_Type());
        }

        public PT_LocaleContainer(PT_LocaleContainer_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public PT_LocaleContainer_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (description, locale, date+, responsibleParty+, localisedString+)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType description
        {
            get
            {
                return this.ContentField.description;
            }
            set
            {
                this.ContentField.description=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (description, locale, date+, responsibleParty+, localisedString+)
        /// </para>
        /// </summary>
        public PT_Locale_PropertyType locale
        {
            get
            {
                return this.ContentField.locale;
            }
            set
            {
                this.ContentField.locale=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (description, locale, date+, responsibleParty+, localisedString+)
        /// </para>
        /// </summary>
        public IList<CI_Date_PropertyType> date
        {
            get
            {
                return this.ContentField.date;
            }
            set
            {
                this.ContentField.date=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (description, locale, date+, responsibleParty+, localisedString+)
        /// </para>
        /// </summary>
        public IList<CI_ResponsibleParty_PropertyType> responsibleParty
        {
            get
            {
                return this.ContentField.responsibleParty;
            }
            set
            {
                this.ContentField.responsibleParty=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (description, locale, date+, responsibleParty+, localisedString+)
        /// </para>
        /// </summary>
        public IList<LocalisedCharacterString_PropertyType> localisedString
        {
            get
            {
                return this.ContentField.localisedString;
            }
            set
            {
                this.ContentField.localisedString=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("PT_LocaleContainer", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static PT_LocaleContainer Load(string xmlFile)
        {
            return XTypedServices.Load<PT_LocaleContainer, PT_LocaleContainer_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static PT_LocaleContainer Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<PT_LocaleContainer, PT_LocaleContainer_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static PT_LocaleContainer Parse(string xml)
        {
            return XTypedServices.Parse<PT_LocaleContainer, PT_LocaleContainer_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new PT_LocaleContainer(((PT_LocaleContainer_Type)(this.Content.Clone())));
        }

        private void SetInnerType(PT_LocaleContainer_Type ContentField)
        {
            this.ContentField=((PT_LocaleContainer_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType PT_LocaleContainerSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("PT_LocaleContainer", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("LanguageCodeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class LanguageCode: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator LanguageCode(XElement xe) { return XTypedServices.ToXTypedElement<LanguageCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public LanguageCode() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public LanguageCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("LanguageCode", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static LanguageCode Load(string xmlFile)
        {
            return XTypedServices.Load<LanguageCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static LanguageCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<LanguageCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static LanguageCode Parse(string xml)
        {
            return XTypedServices.Parse<LanguageCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new LanguageCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType LanguageCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("LanguageCode", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("CountrySchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class Country: global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator Country(XElement xe) { return XTypedServices.ToXTypedElement<Country, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public Country() :
            base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public Country(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
            base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeList
        {
            get
            {
                return this.ContentField.codeList;
            }
            set
            {
                this.ContentField.codeList=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeListValue
        {
            get
            {
                return this.ContentField.codeListValue;
            }
            set
            {
                this.ContentField.codeListValue=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("Country", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static Country Load(string xmlFile)
        {
            return XTypedServices.Load<Country, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static Country Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<Country, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static Country Parse(string xml)
        {
            return XTypedServices.Parse<Country, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new Country(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField=((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CountrySchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("Country", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Information about the metadata
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MD_MetadataSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class MD_Metadata: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MD_Metadata_Type ContentField;

        public static explicit operator MD_Metadata(XElement xe) { return XTypedServices.ToXTypedElement<MD_Metadata, MD_Metadata_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Information about the metadata
        /// </para>
        /// </summary>
        public MD_Metadata()
        {
            SetInnerType(new MD_Metadata_Type());
        }

        /// <summary>
        /// <para>
        /// Information about the metadata
        /// </para>
        /// </summary>
        public MD_Metadata(MD_Metadata_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public MD_Metadata_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType fileIdentifier
        {
            get
            {
                return this.ContentField.fileIdentifier;
            }
            set
            {
                this.ContentField.fileIdentifier=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType language
        {
            get
            {
                return this.ContentField.language;
            }
            set
            {
                this.ContentField.language=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public MD_CharacterSetCode_PropertyType characterSet
        {
            get
            {
                return this.ContentField.characterSet;
            }
            set
            {
                this.ContentField.characterSet=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType parentIdentifier
        {
            get
            {
                return this.ContentField.parentIdentifier;
            }
            set
            {
                this.ContentField.parentIdentifier=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<MD_ScopeCode_PropertyType> hierarchyLevel
        {
            get
            {
                return this.ContentField.hierarchyLevel;
            }
            set
            {
                this.ContentField.hierarchyLevel=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> hierarchyLevelName
        {
            get
            {
                return this.ContentField.hierarchyLevelName;
            }
            set
            {
                this.ContentField.hierarchyLevelName=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<CI_ResponsibleParty_PropertyType> contact
        {
            get
            {
                return this.ContentField.contact;
            }
            set
            {
                this.ContentField.contact=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Date_PropertyType dateStamp
        {
            get
            {
                return this.ContentField.dateStamp;
            }
            set
            {
                this.ContentField.dateStamp=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType metadataStandardName
        {
            get
            {
                return this.ContentField.metadataStandardName;
            }
            set
            {
                this.ContentField.metadataStandardName=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType metadataStandardVersion
        {
            get
            {
                return this.ContentField.metadataStandardVersion;
            }
            set
            {
                this.ContentField.metadataStandardVersion=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType dataSetURI
        {
            get
            {
                return this.ContentField.dataSetURI;
            }
            set
            {
                this.ContentField.dataSetURI=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<PT_Locale_PropertyType> locale
        {
            get
            {
                return this.ContentField.locale;
            }
            set
            {
                this.ContentField.locale=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<MD_SpatialRepresentation_PropertyType> spatialRepresentationInfo
        {
            get
            {
                return this.ContentField.spatialRepresentationInfo;
            }
            set
            {
                this.ContentField.spatialRepresentationInfo=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<MD_ReferenceSystem_PropertyType> referenceSystemInfo
        {
            get
            {
                return this.ContentField.referenceSystemInfo;
            }
            set
            {
                this.ContentField.referenceSystemInfo=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<MD_MetadataExtensionInformation_PropertyType> metadataExtensionInfo
        {
            get
            {
                return this.ContentField.metadataExtensionInfo;
            }
            set
            {
                this.ContentField.metadataExtensionInfo=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<MD_Identification_PropertyType> identificationInfo
        {
            get
            {
                return this.ContentField.identificationInfo;
            }
            set
            {
                this.ContentField.identificationInfo=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<MD_ContentInformation_PropertyType> contentInfo
        {
            get
            {
                return this.ContentField.contentInfo;
            }
            set
            {
                this.ContentField.contentInfo=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public MD_Distribution_PropertyType distributionInfo
        {
            get
            {
                return this.ContentField.distributionInfo;
            }
            set
            {
                this.ContentField.distributionInfo=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<DQ_DataQuality_PropertyType> dataQualityInfo
        {
            get
            {
                return this.ContentField.dataQualityInfo;
            }
            set
            {
                this.ContentField.dataQualityInfo=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<MD_PortrayalCatalogueReference_PropertyType> portrayalCatalogueInfo
        {
            get
            {
                return this.ContentField.portrayalCatalogueInfo;
            }
            set
            {
                this.ContentField.portrayalCatalogueInfo=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<MD_Constraints_PropertyType> metadataConstraints
        {
            get
            {
                return this.ContentField.metadataConstraints;
            }
            set
            {
                this.ContentField.metadataConstraints=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<MD_ApplicationSchemaInformation_PropertyType> applicationSchemaInfo
        {
            get
            {
                return this.ContentField.applicationSchemaInfo;
            }
            set
            {
                this.ContentField.applicationSchemaInfo=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public MD_MaintenanceInformation_PropertyType metadataMaintenance
        {
            get
            {
                return this.ContentField.metadataMaintenance;
            }
            set
            {
                this.ContentField.metadataMaintenance=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<DS_Aggregate_PropertyType> series
        {
            get
            {
                return this.ContentField.series;
            }
            set
            {
                this.ContentField.series=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<DS_DataSet_PropertyType> describes
        {
            get
            {
                return this.ContentField.describes;
            }
            set
            {
                this.ContentField.describes=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType> propertyType
        {
            get
            {
                return this.ContentField.propertyType;
            }
            set
            {
                this.ContentField.propertyType=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType> featureType
        {
            get
            {
                return this.ContentField.featureType;
            }
            set
            {
                this.ContentField.featureType=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileIdentifier?, language?, characterSet?, parentIdentifier?, hierarchyLevel*, hierarchyLevelName*, contact+, dateStamp, metadataStandardName?, metadataStandardVersion?, dataSetURI?, locale*, spatialRepresentationInfo*, referenceSystemInfo*, metadataExtensionInfo*, identificationInfo+, contentInfo*, distributionInfo?, dataQualityInfo*, portrayalCatalogueInfo*, metadataConstraints*, applicationSchemaInfo*, metadataMaintenance?, series*, describes*, propertyType*, featureType*, featureAttribute*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.ObjectReference_PropertyType> featureAttribute
        {
            get
            {
                return this.ContentField.featureAttribute;
            }
            set
            {
                this.ContentField.featureAttribute=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MD_Metadata", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static MD_Metadata Load(string xmlFile)
        {
            return XTypedServices.Load<MD_Metadata, MD_Metadata_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_Metadata Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MD_Metadata, MD_Metadata_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MD_Metadata Parse(string xml)
        {
            return XTypedServices.Parse<MD_Metadata, MD_Metadata_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MD_Metadata(((MD_Metadata_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MD_Metadata_Type ContentField)
        {
            this.ContentField=((MD_Metadata_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MD_MetadataSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MD_Metadata", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Identifiable collection of datasets
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("AbstractDS_AggregateSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public abstract partial class AbstractDS_Aggregate: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private AbstractDS_Aggregate_Type ContentField;

        public static explicit operator AbstractDS_Aggregate(XElement xe) { return (AbstractDS_Aggregate)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected AbstractDS_Aggregate(bool setNull)
        {
        }

        /// <summary>
        /// <para>
        /// Identifiable collection of datasets
        /// </para>
        /// </summary>
        public AbstractDS_Aggregate()
        {
            throw new InvalidOperationException();
        }

        /// <summary>
        /// <para>
        /// Identifiable collection of datasets
        /// </para>
        /// </summary>
        public AbstractDS_Aggregate(AbstractDS_Aggregate_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                if ((this.ContentField!=null))
                {
                    this.ContentField.Untyped=value;
                }
            }
        }

        public AbstractDS_Aggregate_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
        /// </para>
        /// </summary>
        public IList<DS_DataSet_PropertyType> composedOf
        {
            get
            {
                return this.ContentField.composedOf;
            }
            set
            {
                this.ContentField.composedOf=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
        /// </para>
        /// </summary>
        public IList<MD_Metadata_PropertyType> seriesMetadata
        {
            get
            {
                return this.ContentField.seriesMetadata;
            }
            set
            {
                this.ContentField.seriesMetadata=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
        /// </para>
        /// </summary>
        public IList<DS_Aggregate_PropertyType> subset
        {
            get
            {
                return this.ContentField.subset;
            }
            set
            {
                this.ContentField.subset=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*)
        /// </para>
        /// </summary>
        public IList<DS_Aggregate_PropertyType> superset
        {
            get
            {
                return this.ContentField.superset;
            }
            set
            {
                this.ContentField.superset=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractDS_Aggregate", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static AbstractDS_Aggregate Load(string xmlFile)
        {
            return ((AbstractDS_Aggregate)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractDS_Aggregate Load(System.IO.TextReader xmlFile)
        {
            return ((AbstractDS_Aggregate)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractDS_Aggregate Parse(string xml)
        {
            return ((AbstractDS_Aggregate)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        private void SetInnerType(AbstractDS_Aggregate_Type ContentField)
        {
            this.ContentField=((AbstractDS_Aggregate_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        protected virtual void SetSubstitutionMember(AbstractDS_Aggregate_Type ContentField)
        {
            this.ContentField=ContentField;
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType AbstractDS_AggregateSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("AbstractDS_Aggregate", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Identifiable collection of data
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DS_DataSetSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_DataSet: XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DS_DataSet_Type ContentField;

        public static explicit operator DS_DataSet(XElement xe) { return XTypedServices.ToXTypedElement<DS_DataSet, DS_DataSet_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Identifiable collection of data
        /// </para>
        /// </summary>
        public DS_DataSet()
        {
            SetInnerType(new DS_DataSet_Type());
        }

        /// <summary>
        /// <para>
        /// Identifiable collection of data
        /// </para>
        /// </summary>
        public DS_DataSet(DS_DataSet_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public DS_DataSet_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (has+, partOf*)
        /// </para>
        /// </summary>
        public IList<MD_Metadata_PropertyType> has
        {
            get
            {
                return this.ContentField.has;
            }
            set
            {
                this.ContentField.has=value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (has+, partOf*)
        /// </para>
        /// </summary>
        public IList<DS_Aggregate_PropertyType> partOf
        {
            get
            {
                return this.ContentField.partOf;
            }
            set
            {
                this.ContentField.partOf=value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_DataSet", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static DS_DataSet Load(string xmlFile)
        {
            return XTypedServices.Load<DS_DataSet, DS_DataSet_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DS_DataSet Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DS_DataSet, DS_DataSet_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DS_DataSet Parse(string xml)
        {
            return XTypedServices.Parse<DS_DataSet, DS_DataSet_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DS_DataSet(((DS_DataSet_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DS_DataSet_Type ContentField)
        {
            this.ContentField=((DS_DataSet_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DS_DataSetSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DS_DataSet", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DS_OtherAggregateSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_OtherAggregate: global::GeoSik.Iso.Ts19139.Gmd.AbstractDS_Aggregate, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DS_OtherAggregate_Type ContentField;

        public static explicit operator DS_OtherAggregate(XElement xe) { return (DS_OtherAggregate)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected DS_OtherAggregate(bool setNull) :
            base(true)
        {
        }

        public DS_OtherAggregate() :
            base(true)
        {
            SetInnerType(new DS_OtherAggregate_Type());
        }

        public DS_OtherAggregate(DS_OtherAggregate_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                if ((this.ContentField!=null))
                {
                    this.ContentField.Untyped=value;
                }
            }
        }

        public new DS_OtherAggregate_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_OtherAggregate", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DS_OtherAggregate Load(string xmlFile)
        {
            return ((DS_OtherAggregate)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static DS_OtherAggregate Load(System.IO.TextReader xmlFile)
        {
            return ((DS_OtherAggregate)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public new static DS_OtherAggregate Parse(string xml)
        {
            return ((DS_OtherAggregate)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        public override XTypedElement Clone()
        {
            return new DS_OtherAggregate(((DS_OtherAggregate_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DS_OtherAggregate_Type ContentField)
        {
            this.ContentField=((DS_OtherAggregate_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        protected virtual void SetSubstitutionMember(DS_OtherAggregate_Type ContentField)
        {
            this.ContentField=ContentField;
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DS_OtherAggregateSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DS_OtherAggregate", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DS_SeriesSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_Series: global::GeoSik.Iso.Ts19139.Gmd.AbstractDS_Aggregate, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DS_Series_Type ContentField;

        public static explicit operator DS_Series(XElement xe) { return (DS_Series)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected DS_Series(bool setNull) :
            base(true)
        {
        }

        public DS_Series() :
            base(true)
        {
            SetInnerType(new DS_Series_Type());
        }

        public DS_Series(DS_Series_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                if ((this.ContentField!=null))
                {
                    this.ContentField.Untyped=value;
                }
            }
        }

        public new DS_Series_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_Series", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DS_Series Load(string xmlFile)
        {
            return ((DS_Series)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static DS_Series Load(System.IO.TextReader xmlFile)
        {
            return ((DS_Series)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public new static DS_Series Parse(string xml)
        {
            return ((DS_Series)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        public override XTypedElement Clone()
        {
            return new DS_Series(((DS_Series_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DS_Series_Type ContentField)
        {
            this.ContentField=((DS_Series_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        protected virtual void SetSubstitutionMember(DS_Series_Type ContentField)
        {
            this.ContentField=ContentField;
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DS_SeriesSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DS_Series", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DS_InitiativeSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_Initiative: global::GeoSik.Iso.Ts19139.Gmd.AbstractDS_Aggregate, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DS_Initiative_Type ContentField;

        public static explicit operator DS_Initiative(XElement xe) { return XTypedServices.ToXTypedElement<DS_Initiative, DS_Initiative_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DS_Initiative() :
            base(true)
        {
            SetInnerType(new DS_Initiative_Type());
        }

        public DS_Initiative(DS_Initiative_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DS_Initiative_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_Initiative", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DS_Initiative Load(string xmlFile)
        {
            return XTypedServices.Load<DS_Initiative, DS_Initiative_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DS_Initiative Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DS_Initiative, DS_Initiative_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DS_Initiative Parse(string xml)
        {
            return XTypedServices.Parse<DS_Initiative, DS_Initiative_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DS_Initiative(((DS_Initiative_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DS_Initiative_Type ContentField)
        {
            this.ContentField=((DS_Initiative_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DS_InitiativeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DS_Initiative", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DS_PlatformSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_Platform: global::GeoSik.Iso.Ts19139.Gmd.DS_Series, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DS_Platform_Type ContentField;

        public static explicit operator DS_Platform(XElement xe) { return XTypedServices.ToXTypedElement<DS_Platform, DS_Platform_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DS_Platform() :
            base(true)
        {
            SetInnerType(new DS_Platform_Type());
        }

        public DS_Platform(DS_Platform_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DS_Platform_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_Platform", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DS_Platform Load(string xmlFile)
        {
            return XTypedServices.Load<DS_Platform, DS_Platform_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DS_Platform Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DS_Platform, DS_Platform_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DS_Platform Parse(string xml)
        {
            return XTypedServices.Parse<DS_Platform, DS_Platform_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DS_Platform(((DS_Platform_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DS_Platform_Type ContentField)
        {
            this.ContentField=((DS_Platform_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DS_PlatformSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DS_Platform", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DS_SensorSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_Sensor: global::GeoSik.Iso.Ts19139.Gmd.DS_Series, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DS_Sensor_Type ContentField;

        public static explicit operator DS_Sensor(XElement xe) { return XTypedServices.ToXTypedElement<DS_Sensor, DS_Sensor_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DS_Sensor() :
            base(true)
        {
            SetInnerType(new DS_Sensor_Type());
        }

        public DS_Sensor(DS_Sensor_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DS_Sensor_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_Sensor", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DS_Sensor Load(string xmlFile)
        {
            return XTypedServices.Load<DS_Sensor, DS_Sensor_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DS_Sensor Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DS_Sensor, DS_Sensor_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DS_Sensor Parse(string xml)
        {
            return XTypedServices.Parse<DS_Sensor, DS_Sensor_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DS_Sensor(((DS_Sensor_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DS_Sensor_Type ContentField)
        {
            this.ContentField=((DS_Sensor_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DS_SensorSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DS_Sensor", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DS_ProductionSeriesSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_ProductionSeries: global::GeoSik.Iso.Ts19139.Gmd.DS_Series, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DS_ProductionSeries_Type ContentField;

        public static explicit operator DS_ProductionSeries(XElement xe) { return XTypedServices.ToXTypedElement<DS_ProductionSeries, DS_ProductionSeries_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DS_ProductionSeries() :
            base(true)
        {
            SetInnerType(new DS_ProductionSeries_Type());
        }

        public DS_ProductionSeries(DS_ProductionSeries_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DS_ProductionSeries_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_ProductionSeries", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DS_ProductionSeries Load(string xmlFile)
        {
            return XTypedServices.Load<DS_ProductionSeries, DS_ProductionSeries_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DS_ProductionSeries Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DS_ProductionSeries, DS_ProductionSeries_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DS_ProductionSeries Parse(string xml)
        {
            return XTypedServices.Parse<DS_ProductionSeries, DS_ProductionSeries_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DS_ProductionSeries(((DS_ProductionSeries_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DS_ProductionSeries_Type ContentField)
        {
            this.ContentField=((DS_ProductionSeries_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DS_ProductionSeriesSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DS_ProductionSeries", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("DS_StereoMateSchemaProvider")]
    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class DS_StereoMate: global::GeoSik.Iso.Ts19139.Gmd.DS_OtherAggregate, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DS_StereoMate_Type ContentField;

        public static explicit operator DS_StereoMate(XElement xe) { return XTypedServices.ToXTypedElement<DS_StereoMate, DS_StereoMate_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public DS_StereoMate() :
            base(true)
        {
            SetInnerType(new DS_StereoMate_Type());
        }

        public DS_StereoMate(DS_StereoMate_Type content) :
            base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped=value;
                this.ContentField.Untyped=value;
            }
        }

        public new DS_StereoMate_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData=((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DS_StereoMate", "http://www.isotc211.org/2005/gmd");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static DS_StereoMate Load(string xmlFile)
        {
            return XTypedServices.Load<DS_StereoMate, DS_StereoMate_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DS_StereoMate Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DS_StereoMate, DS_StereoMate_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static DS_StereoMate Parse(string xml)
        {
            return XTypedServices.Parse<DS_StereoMate, DS_StereoMate_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DS_StereoMate(((DS_StereoMate_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DS_StereoMate_Type ContentField)
        {
            this.ContentField=((DS_StereoMate_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DS_StereoMateSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element=((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DS_StereoMate", "http://www.isotc211.org/2005/gmd")]));
            if ((element!=null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("LinqToXsd", "2.0.2")]
    public partial class XRootNamespace
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XDocument doc;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedElement rootObject;


        public EX_TemporalExtent EX_TemporalExtent { get { return rootObject as EX_TemporalExtent; } }

        public EX_VerticalExtent EX_VerticalExtent { get { return rootObject as EX_VerticalExtent; } }

        public EX_BoundingPolygon EX_BoundingPolygon { get { return rootObject as EX_BoundingPolygon; } }

        public EX_Extent EX_Extent { get { return rootObject as EX_Extent; } }

        public AbstractEX_GeographicExtent AbstractEX_GeographicExtent { get { return rootObject as AbstractEX_GeographicExtent; } }

        public EX_GeographicBoundingBox EX_GeographicBoundingBox { get { return rootObject as EX_GeographicBoundingBox; } }

        public EX_SpatialTemporalExtent EX_SpatialTemporalExtent { get { return rootObject as EX_SpatialTemporalExtent; } }

        public EX_GeographicDescription EX_GeographicDescription { get { return rootObject as EX_GeographicDescription; } }

        public RS_Identifier RS_Identifier { get { return rootObject as RS_Identifier; } }

        public MD_ReferenceSystem MD_ReferenceSystem { get { return rootObject as MD_ReferenceSystem; } }

        public MD_Identifier MD_Identifier { get { return rootObject as MD_Identifier; } }

        public AbstractRS_ReferenceSystem AbstractRS_ReferenceSystem { get { return rootObject as AbstractRS_ReferenceSystem; } }

        public CI_ResponsibleParty CI_ResponsibleParty { get { return rootObject as CI_ResponsibleParty; } }

        public CI_Citation CI_Citation { get { return rootObject as CI_Citation; } }

        public CI_Address CI_Address { get { return rootObject as CI_Address; } }

        public CI_OnlineResource CI_OnlineResource { get { return rootObject as CI_OnlineResource; } }

        public CI_Contact CI_Contact { get { return rootObject as CI_Contact; } }

        public CI_Telephone CI_Telephone { get { return rootObject as CI_Telephone; } }

        public CI_Date CI_Date { get { return rootObject as CI_Date; } }

        public CI_Series CI_Series { get { return rootObject as CI_Series; } }

        public URL URL { get { return rootObject as URL; } }

        public CI_RoleCode CI_RoleCode { get { return rootObject as CI_RoleCode; } }

        public CI_PresentationFormCode CI_PresentationFormCode { get { return rootObject as CI_PresentationFormCode; } }

        public CI_OnLineFunctionCode CI_OnLineFunctionCode { get { return rootObject as CI_OnLineFunctionCode; } }

        public CI_DateTypeCode CI_DateTypeCode { get { return rootObject as CI_DateTypeCode; } }

        public MD_GridSpatialRepresentation MD_GridSpatialRepresentation { get { return rootObject as MD_GridSpatialRepresentation; } }

        public MD_VectorSpatialRepresentation MD_VectorSpatialRepresentation { get { return rootObject as MD_VectorSpatialRepresentation; } }

        public AbstractMD_SpatialRepresentation AbstractMD_SpatialRepresentation { get { return rootObject as AbstractMD_SpatialRepresentation; } }

        public MD_Georeferenceable MD_Georeferenceable { get { return rootObject as MD_Georeferenceable; } }

        public MD_Dimension MD_Dimension { get { return rootObject as MD_Dimension; } }

        public MD_Georectified MD_Georectified { get { return rootObject as MD_Georectified; } }

        public MD_GeometricObjects MD_GeometricObjects { get { return rootObject as MD_GeometricObjects; } }

        public MD_PixelOrientationCode MD_PixelOrientationCode { get { return rootObject as MD_PixelOrientationCode; } }

        public MD_TopologyLevelCode MD_TopologyLevelCode { get { return rootObject as MD_TopologyLevelCode; } }

        public MD_GeometricObjectTypeCode MD_GeometricObjectTypeCode { get { return rootObject as MD_GeometricObjectTypeCode; } }

        public MD_CellGeometryCode MD_CellGeometryCode { get { return rootObject as MD_CellGeometryCode; } }

        public MD_DimensionNameTypeCode MD_DimensionNameTypeCode { get { return rootObject as MD_DimensionNameTypeCode; } }

        public MD_ExtendedElementInformation MD_ExtendedElementInformation { get { return rootObject as MD_ExtendedElementInformation; } }

        public MD_MetadataExtensionInformation MD_MetadataExtensionInformation { get { return rootObject as MD_MetadataExtensionInformation; } }

        public MD_ObligationCode MD_ObligationCode { get { return rootObject as MD_ObligationCode; } }

        public MD_DatatypeCode MD_DatatypeCode { get { return rootObject as MD_DatatypeCode; } }

        public MD_FeatureCatalogueDescription MD_FeatureCatalogueDescription { get { return rootObject as MD_FeatureCatalogueDescription; } }

        public MD_CoverageDescription MD_CoverageDescription { get { return rootObject as MD_CoverageDescription; } }

        public MD_ImageDescription MD_ImageDescription { get { return rootObject as MD_ImageDescription; } }

        public AbstractMD_ContentInformation AbstractMD_ContentInformation { get { return rootObject as AbstractMD_ContentInformation; } }

        public MD_RangeDimension MD_RangeDimension { get { return rootObject as MD_RangeDimension; } }

        public MD_Band MD_Band { get { return rootObject as MD_Band; } }

        public MD_CoverageContentTypeCode MD_CoverageContentTypeCode { get { return rootObject as MD_CoverageContentTypeCode; } }

        public MD_ImagingConditionCode MD_ImagingConditionCode { get { return rootObject as MD_ImagingConditionCode; } }

        public MD_ApplicationSchemaInformation MD_ApplicationSchemaInformation { get { return rootObject as MD_ApplicationSchemaInformation; } }

        public MD_PortrayalCatalogueReference MD_PortrayalCatalogueReference { get { return rootObject as MD_PortrayalCatalogueReference; } }

        public LI_ProcessStep LI_ProcessStep { get { return rootObject as LI_ProcessStep; } }

        public LI_Source LI_Source { get { return rootObject as LI_Source; } }

        public LI_Lineage LI_Lineage { get { return rootObject as LI_Lineage; } }

        public DQ_ConformanceResult DQ_ConformanceResult { get { return rootObject as DQ_ConformanceResult; } }

        public DQ_QuantitativeResult DQ_QuantitativeResult { get { return rootObject as DQ_QuantitativeResult; } }

        public AbstractDQ_Result AbstractDQ_Result { get { return rootObject as AbstractDQ_Result; } }

        public DQ_TemporalValidity DQ_TemporalValidity { get { return rootObject as DQ_TemporalValidity; } }

        public DQ_TemporalConsistency DQ_TemporalConsistency { get { return rootObject as DQ_TemporalConsistency; } }

        public DQ_AccuracyOfATimeMeasurement DQ_AccuracyOfATimeMeasurement { get { return rootObject as DQ_AccuracyOfATimeMeasurement; } }

        public DQ_QuantitativeAttributeAccuracy DQ_QuantitativeAttributeAccuracy { get { return rootObject as DQ_QuantitativeAttributeAccuracy; } }

        public DQ_NonQuantitativeAttributeAccuracy DQ_NonQuantitativeAttributeAccuracy { get { return rootObject as DQ_NonQuantitativeAttributeAccuracy; } }

        public DQ_ThematicClassificationCorrectness DQ_ThematicClassificationCorrectness { get { return rootObject as DQ_ThematicClassificationCorrectness; } }

        public DQ_RelativeInternalPositionalAccuracy DQ_RelativeInternalPositionalAccuracy { get { return rootObject as DQ_RelativeInternalPositionalAccuracy; } }

        public DQ_GriddedDataPositionalAccuracy DQ_GriddedDataPositionalAccuracy { get { return rootObject as DQ_GriddedDataPositionalAccuracy; } }

        public DQ_AbsoluteExternalPositionalAccuracy DQ_AbsoluteExternalPositionalAccuracy { get { return rootObject as DQ_AbsoluteExternalPositionalAccuracy; } }

        public DQ_TopologicalConsistency DQ_TopologicalConsistency { get { return rootObject as DQ_TopologicalConsistency; } }

        public DQ_FormatConsistency DQ_FormatConsistency { get { return rootObject as DQ_FormatConsistency; } }

        public DQ_DomainConsistency DQ_DomainConsistency { get { return rootObject as DQ_DomainConsistency; } }

        public DQ_ConceptualConsistency DQ_ConceptualConsistency { get { return rootObject as DQ_ConceptualConsistency; } }

        public DQ_CompletenessOmission DQ_CompletenessOmission { get { return rootObject as DQ_CompletenessOmission; } }

        public DQ_CompletenessCommission DQ_CompletenessCommission { get { return rootObject as DQ_CompletenessCommission; } }

        public AbstractDQ_TemporalAccuracy AbstractDQ_TemporalAccuracy { get { return rootObject as AbstractDQ_TemporalAccuracy; } }

        public AbstractDQ_ThematicAccuracy AbstractDQ_ThematicAccuracy { get { return rootObject as AbstractDQ_ThematicAccuracy; } }

        public AbstractDQ_PositionalAccuracy AbstractDQ_PositionalAccuracy { get { return rootObject as AbstractDQ_PositionalAccuracy; } }

        public AbstractDQ_LogicalConsistency AbstractDQ_LogicalConsistency { get { return rootObject as AbstractDQ_LogicalConsistency; } }

        public AbstractDQ_Completeness AbstractDQ_Completeness { get { return rootObject as AbstractDQ_Completeness; } }

        public AbstractDQ_Element AbstractDQ_Element { get { return rootObject as AbstractDQ_Element; } }

        public DQ_DataQuality DQ_DataQuality { get { return rootObject as DQ_DataQuality; } }

        public DQ_Scope DQ_Scope { get { return rootObject as DQ_Scope; } }

        public DQ_EvaluationMethodTypeCode DQ_EvaluationMethodTypeCode { get { return rootObject as DQ_EvaluationMethodTypeCode; } }

        public MD_Constraints MD_Constraints { get { return rootObject as MD_Constraints; } }

        public MD_LegalConstraints MD_LegalConstraints { get { return rootObject as MD_LegalConstraints; } }

        public MD_SecurityConstraints MD_SecurityConstraints { get { return rootObject as MD_SecurityConstraints; } }

        public MD_ClassificationCode MD_ClassificationCode { get { return rootObject as MD_ClassificationCode; } }

        public MD_RestrictionCode MD_RestrictionCode { get { return rootObject as MD_RestrictionCode; } }

        public MD_Medium MD_Medium { get { return rootObject as MD_Medium; } }

        public MD_DigitalTransferOptions MD_DigitalTransferOptions { get { return rootObject as MD_DigitalTransferOptions; } }

        public MD_StandardOrderProcess MD_StandardOrderProcess { get { return rootObject as MD_StandardOrderProcess; } }

        public MD_Distributor MD_Distributor { get { return rootObject as MD_Distributor; } }

        public MD_Distribution MD_Distribution { get { return rootObject as MD_Distribution; } }

        public MD_Format MD_Format { get { return rootObject as MD_Format; } }

        public MD_DistributionUnits MD_DistributionUnits { get { return rootObject as MD_DistributionUnits; } }

        public MD_MediumFormatCode MD_MediumFormatCode { get { return rootObject as MD_MediumFormatCode; } }

        public MD_MediumNameCode MD_MediumNameCode { get { return rootObject as MD_MediumNameCode; } }

        public MD_MaintenanceInformation MD_MaintenanceInformation { get { return rootObject as MD_MaintenanceInformation; } }

        public MD_ScopeDescription MD_ScopeDescription { get { return rootObject as MD_ScopeDescription; } }

        public MD_MaintenanceFrequencyCode MD_MaintenanceFrequencyCode { get { return rootObject as MD_MaintenanceFrequencyCode; } }

        public MD_ScopeCode MD_ScopeCode { get { return rootObject as MD_ScopeCode; } }

        public AbstractMD_Identification AbstractMD_Identification { get { return rootObject as AbstractMD_Identification; } }

        public MD_BrowseGraphic MD_BrowseGraphic { get { return rootObject as MD_BrowseGraphic; } }

        public MD_DataIdentification MD_DataIdentification { get { return rootObject as MD_DataIdentification; } }

        public MD_ServiceIdentification MD_ServiceIdentification { get { return rootObject as MD_ServiceIdentification; } }

        public MD_RepresentativeFraction MD_RepresentativeFraction { get { return rootObject as MD_RepresentativeFraction; } }

        public MD_Usage MD_Usage { get { return rootObject as MD_Usage; } }

        public MD_Keywords MD_Keywords { get { return rootObject as MD_Keywords; } }

        public DS_Association DS_Association { get { return rootObject as DS_Association; } }

        public MD_AggregateInformation MD_AggregateInformation { get { return rootObject as MD_AggregateInformation; } }

        public MD_Resolution MD_Resolution { get { return rootObject as MD_Resolution; } }

        public MD_TopicCategoryCode MD_TopicCategoryCode { get { return rootObject as MD_TopicCategoryCode; } }

        public MD_CharacterSetCode MD_CharacterSetCode { get { return rootObject as MD_CharacterSetCode; } }

        public MD_SpatialRepresentationTypeCode MD_SpatialRepresentationTypeCode { get { return rootObject as MD_SpatialRepresentationTypeCode; } }

        public MD_ProgressCode MD_ProgressCode { get { return rootObject as MD_ProgressCode; } }

        public MD_KeywordTypeCode MD_KeywordTypeCode { get { return rootObject as MD_KeywordTypeCode; } }

        public DS_AssociationTypeCode DS_AssociationTypeCode { get { return rootObject as DS_AssociationTypeCode; } }

        public DS_InitiativeTypeCode DS_InitiativeTypeCode { get { return rootObject as DS_InitiativeTypeCode; } }

        public PT_FreeText PT_FreeText { get { return rootObject as PT_FreeText; } }

        public PT_Locale PT_Locale { get { return rootObject as PT_Locale; } }

        public LocalisedCharacterString LocalisedCharacterString { get { return rootObject as LocalisedCharacterString; } }

        public PT_LocaleContainer PT_LocaleContainer { get { return rootObject as PT_LocaleContainer; } }

        public LanguageCode LanguageCode { get { return rootObject as LanguageCode; } }

        public Country Country { get { return rootObject as Country; } }

        public MD_Metadata MD_Metadata { get { return rootObject as MD_Metadata; } }

        public AbstractDS_Aggregate AbstractDS_Aggregate { get { return rootObject as AbstractDS_Aggregate; } }

        public DS_DataSet DS_DataSet { get { return rootObject as DS_DataSet; } }

        public DS_OtherAggregate DS_OtherAggregate { get { return rootObject as DS_OtherAggregate; } }

        public DS_Series DS_Series { get { return rootObject as DS_Series; } }

        public DS_Initiative DS_Initiative { get { return rootObject as DS_Initiative; } }

        public DS_Platform DS_Platform { get { return rootObject as DS_Platform; } }

        public DS_Sensor DS_Sensor { get { return rootObject as DS_Sensor; } }

        public DS_ProductionSeries DS_ProductionSeries { get { return rootObject as DS_ProductionSeries; } }

        public DS_StereoMate DS_StereoMate { get { return rootObject as DS_StereoMate; } }

        private XRootNamespace()
        {
        }

        public XRootNamespace(EX_TemporalExtent root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(EX_VerticalExtent root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(EX_BoundingPolygon root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(EX_Extent root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(AbstractEX_GeographicExtent root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(EX_GeographicBoundingBox root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(EX_SpatialTemporalExtent root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(EX_GeographicDescription root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(RS_Identifier root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_ReferenceSystem root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_Identifier root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(AbstractRS_ReferenceSystem root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(CI_ResponsibleParty root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(CI_Citation root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(CI_Address root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(CI_OnlineResource root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(CI_Contact root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(CI_Telephone root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(CI_Date root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(CI_Series root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(URL root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(CI_RoleCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(CI_PresentationFormCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(CI_OnLineFunctionCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(CI_DateTypeCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_GridSpatialRepresentation root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_VectorSpatialRepresentation root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(AbstractMD_SpatialRepresentation root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_Georeferenceable root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_Dimension root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_Georectified root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_GeometricObjects root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_PixelOrientationCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_TopologyLevelCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_GeometricObjectTypeCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_CellGeometryCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_DimensionNameTypeCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_ExtendedElementInformation root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_MetadataExtensionInformation root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_ObligationCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_DatatypeCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_FeatureCatalogueDescription root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_CoverageDescription root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_ImageDescription root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(AbstractMD_ContentInformation root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_RangeDimension root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_Band root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_CoverageContentTypeCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_ImagingConditionCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_ApplicationSchemaInformation root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_PortrayalCatalogueReference root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(LI_ProcessStep root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(LI_Source root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(LI_Lineage root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DQ_ConformanceResult root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DQ_QuantitativeResult root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(AbstractDQ_Result root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DQ_TemporalValidity root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DQ_TemporalConsistency root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DQ_AccuracyOfATimeMeasurement root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DQ_QuantitativeAttributeAccuracy root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DQ_NonQuantitativeAttributeAccuracy root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DQ_ThematicClassificationCorrectness root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DQ_RelativeInternalPositionalAccuracy root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DQ_GriddedDataPositionalAccuracy root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DQ_AbsoluteExternalPositionalAccuracy root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DQ_TopologicalConsistency root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DQ_FormatConsistency root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DQ_DomainConsistency root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DQ_ConceptualConsistency root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DQ_CompletenessOmission root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DQ_CompletenessCommission root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(AbstractDQ_TemporalAccuracy root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(AbstractDQ_ThematicAccuracy root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(AbstractDQ_PositionalAccuracy root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(AbstractDQ_LogicalConsistency root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(AbstractDQ_Completeness root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(AbstractDQ_Element root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DQ_DataQuality root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DQ_Scope root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DQ_EvaluationMethodTypeCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_Constraints root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_LegalConstraints root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_SecurityConstraints root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_ClassificationCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_RestrictionCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_Medium root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_DigitalTransferOptions root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_StandardOrderProcess root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_Distributor root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_Distribution root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_Format root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_DistributionUnits root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_MediumFormatCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_MediumNameCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_MaintenanceInformation root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_ScopeDescription root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_MaintenanceFrequencyCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_ScopeCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(AbstractMD_Identification root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_BrowseGraphic root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_DataIdentification root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_ServiceIdentification root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_RepresentativeFraction root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_Usage root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_Keywords root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DS_Association root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_AggregateInformation root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_Resolution root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_TopicCategoryCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_CharacterSetCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_SpatialRepresentationTypeCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_ProgressCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_KeywordTypeCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DS_AssociationTypeCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DS_InitiativeTypeCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(PT_FreeText root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(PT_Locale root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(LocalisedCharacterString root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(PT_LocaleContainer root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(LanguageCode root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(Country root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(MD_Metadata root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(AbstractDS_Aggregate root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DS_DataSet root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DS_OtherAggregate root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DS_Series root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DS_Initiative root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DS_Platform root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DS_Sensor root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DS_ProductionSeries root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XRootNamespace(DS_StereoMate root)
        {
            this.doc=new XDocument(root.Untyped);
            this.rootObject=root;
        }

        public XDocument XDocument
        {
            get
            {
                return doc;
            }
        }

        public static XRootNamespace Load(string xmlFile)
        {
            XRootNamespace root=new XRootNamespace();
            root.doc=XDocument.Load(xmlFile);
            XTypedElement typedRoot=XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot==null))
            {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject=typedRoot;
            return root;
        }

        public static XRootNamespace Load(string xmlFile, LoadOptions options)
        {
            XRootNamespace root=new XRootNamespace();
            root.doc=XDocument.Load(xmlFile, options);
            XTypedElement typedRoot=XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot==null))
            {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject=typedRoot;
            return root;
        }

        public static XRootNamespace Load(TextReader textReader)
        {
            XRootNamespace root=new XRootNamespace();
            root.doc=XDocument.Load(textReader);
            XTypedElement typedRoot=XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot==null))
            {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject=typedRoot;
            return root;
        }

        public static XRootNamespace Load(TextReader textReader, LoadOptions options)
        {
            XRootNamespace root=new XRootNamespace();
            root.doc=XDocument.Load(textReader, options);
            XTypedElement typedRoot=XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot==null))
            {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject=typedRoot;
            return root;
        }

        public static XRootNamespace Load(XmlReader xmlReader)
        {
            XRootNamespace root=new XRootNamespace();
            root.doc=XDocument.Load(xmlReader);
            XTypedElement typedRoot=XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot==null))
            {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject=typedRoot;
            return root;
        }

        public static XRootNamespace Parse(string text)
        {
            XRootNamespace root=new XRootNamespace();
            root.doc=XDocument.Parse(text);
            XTypedElement typedRoot=XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot==null))
            {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject=typedRoot;
            return root;
        }

        public static XRootNamespace Parse(string text, LoadOptions options)
        {
            XRootNamespace root=new XRootNamespace();
            root.doc=XDocument.Parse(text, options);
            XTypedElement typedRoot=XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot==null))
            {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject=typedRoot;
            return root;
        }

        public virtual void Save(string fileName)
        {
            doc.Save(fileName);
        }

        public virtual void Save(TextWriter textWriter)
        {
            doc.Save(textWriter);
        }

        public virtual void Save(XmlWriter writer)
        {
            doc.Save(writer);
        }

        public virtual void Save(TextWriter textWriter, SaveOptions options)
        {
            doc.Save(textWriter, options);
        }

        public virtual void Save(string fileName, SaveOptions options)
        {
            doc.Save(fileName, options);
        }
    }
}
#pragma warning restore 108, 109, 1591, 3002, 3003, 3009

//------------------------------------------------------------------------------
// <auto-generated>
//    Ce code a été généré à partir d'un modèle.
//
//    Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//    Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Métadonnées de relation EDM

[assembly: EdmRelationshipAttribute("GeoSik.WebSample.Models.ModelFirst", "FK_Record_Relation", "Records", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GeoSik.WebSample.Models.ModelFirst.MFRecord), "Records1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeoSik.WebSample.Models.ModelFirst.MFRecord), true)]

#endregion

namespace GeoSik.WebSample.Models.ModelFirst
{
    #region Contextes
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    public partial class MFConceptualEntities : ObjectContext
    {
        #region Constructeurs
    
        /// <summary>
        /// Initialise un nouvel objet MFConceptualEntities à l'aide de la chaîne de connexion trouvée dans la section 'MFConceptualEntities' du fichier de configuration d'application.
        /// </summary>
        public MFConceptualEntities() : base("name=MFConceptualEntities", "MFConceptualEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet MFConceptualEntities.
        /// </summary>
        public MFConceptualEntities(string connectionString) : base(connectionString, "MFConceptualEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet MFConceptualEntities.
        /// </summary>
        public MFConceptualEntities(EntityConnection connection) : base(connection, "MFConceptualEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Méthodes partielles
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propriétés ObjectSet
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<MFRecord> MFRecords
        {
            get
            {
                if ((_MFRecords == null))
                {
                    _MFRecords = base.CreateObjectSet<MFRecord>("MFRecords");
                }
                return _MFRecords;
            }
        }
        private ObjectSet<MFRecord> _MFRecords;

        #endregion

        #region Méthodes AddTo
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet MFRecords. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToMFRecords(MFRecord mFRecord)
        {
            base.AddObject("MFRecords", mFRecord);
        }

        #endregion

    }

    #endregion

    #region Entités
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GeoSik.WebSample.Models.ModelFirst", Name="MFRecord")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MFRecord : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet MFRecord.
        /// </summary>
        /// <param name="identifier">Valeur initiale de la propriété Identifier.</param>
        /// <param name="subject">Valeur initiale de la propriété Subject.</param>
        public static MFRecord CreateMFRecord(global::System.String identifier, MFRecordSubject subject)
        {
            MFRecord mFRecord = new MFRecord();
            mFRecord.Identifier = identifier;
            mFRecord.Subject = StructuralObject.VerifyComplexObjectIsNotNull(subject, "Subject");
            return mFRecord;
        }

        #endregion

        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Identifier
        {
            get
            {
                return _Identifier;
            }
            set
            {
                if (_Identifier != value)
                {
                    OnIdentifierChanging(value);
                    ReportPropertyChanging("Identifier");
                    _Identifier = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Identifier");
                    OnIdentifierChanged();
                }
            }
        }
        private global::System.String _Identifier;
        partial void OnIdentifierChanging(global::System.String value);
        partial void OnIdentifierChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.String _Date;
        partial void OnDateChanging(global::System.String value);
        partial void OnDateChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Format
        {
            get
            {
                return _Format;
            }
            set
            {
                OnFormatChanging(value);
                ReportPropertyChanging("Format");
                _Format = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Format");
                OnFormatChanged();
            }
        }
        private global::System.String _Format;
        partial void OnFormatChanging(global::System.String value);
        partial void OnFormatChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Relation
        {
            get
            {
                return _Relation;
            }
            set
            {
                OnRelationChanging(value);
                ReportPropertyChanging("Relation");
                _Relation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Relation");
                OnRelationChanged();
            }
        }
        private global::System.String _Relation;
        partial void OnRelationChanging(global::System.String value);
        partial void OnRelationChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Spatial
        {
            get
            {
                return _Spatial;
            }
            set
            {
                OnSpatialChanging(value);
                ReportPropertyChanging("Spatial");
                _Spatial = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Spatial");
                OnSpatialChanged();
            }
        }
        private global::System.String _Spatial;
        partial void OnSpatialChanging(global::System.String value);
        partial void OnSpatialChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Coverage
        {
            get
            {
                return StructuralObject.GetValidValue(_Coverage);
            }
            set
            {
                OnCoverageChanging(value);
                ReportPropertyChanging("Coverage");
                _Coverage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Coverage");
                OnCoverageChanged();
            }
        }
        private global::System.Byte[] _Coverage;
        partial void OnCoverageChanging(global::System.Byte[] value);
        partial void OnCoverageChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AnyText
        {
            get
            {
                return _AnyText;
            }
            set
            {
                OnAnyTextChanging(value);
                ReportPropertyChanging("AnyText");
                _AnyText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AnyText");
                OnAnyTextChanged();
            }
        }
        private global::System.String _AnyText;
        partial void OnAnyTextChanging(global::System.String value);
        partial void OnAnyTextChanged();

        #endregion

        #region Propriétés complexes
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public MFRecordSubject Subject
        {
            get
            {
                _Subject = GetValidValue(_Subject, "Subject", false, _SubjectInitialized);
                _SubjectInitialized = true;
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = SetValidValue(_Subject, value, "Subject");
                _SubjectInitialized = true;
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private MFRecordSubject _Subject;
        private bool _SubjectInitialized;
        partial void OnSubjectChanging(MFRecordSubject value);
        partial void OnSubjectChanged();

        #endregion

    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeoSik.WebSample.Models.ModelFirst", "FK_Record_Relation", "Records1")]
        public EntityCollection<MFRecord> Records1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MFRecord>("GeoSik.WebSample.Models.ModelFirst.FK_Record_Relation", "Records1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MFRecord>("GeoSik.WebSample.Models.ModelFirst.FK_Record_Relation", "Records1", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeoSik.WebSample.Models.ModelFirst", "FK_Record_Relation", "Records")]
        public MFRecord Records2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFRecord>("GeoSik.WebSample.Models.ModelFirst.FK_Record_Relation", "Records").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFRecord>("GeoSik.WebSample.Models.ModelFirst.FK_Record_Relation", "Records").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MFRecord> Records2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MFRecord>("GeoSik.WebSample.Models.ModelFirst.FK_Record_Relation", "Records");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MFRecord>("GeoSik.WebSample.Models.ModelFirst.FK_Record_Relation", "Records", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GeoSik.WebSample.Models.ModelFirst", Name="MFRecordSubject")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class MFRecordSubject : ComplexObject
    {
        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubjectScheme
        {
            get
            {
                return _SubjectScheme;
            }
            set
            {
                OnSubjectSchemeChanging(value);
                ReportPropertyChanging("SubjectScheme");
                _SubjectScheme = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubjectScheme");
                OnSubjectSchemeChanged();
            }
        }
        private global::System.String _SubjectScheme;
        partial void OnSubjectSchemeChanging(global::System.String value);
        partial void OnSubjectSchemeChanged();

        #endregion

    }

    #endregion

    
}
